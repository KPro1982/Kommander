<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAIHJSURBVHhe7Z0FfB1XmuV3Z2anZ5tmenZ2Zndo
m6bTlIakO9DpdBI7Tpw4MTMzM9sxMzMzyCiDwJIti5nRFlpsscXMZ+9XT89+lp9tWZKtZ9U5/v2t
glt1C27d79xb8P4bRVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVGU7nTqr//qr4J+
+pOfBM2aNTtoyZJvghYtWkIIIYSQ14alQd98syzo6x5fBn3rb/82SMV24dn6q7/6q+ju3bvj2OkL
CLybgrj0QsSk5hNCCCHkNSE2rUCRD3e/UMyZMwc/+ME/oCnMP10/+fEPg46ePIfw5Hx4RKTANfQe
3AghhBDyWiHxOyA2G4ERCejVq9fzDcCsGbODAu+kwCsyFZ7hSYQQQgh5TfEIS0SEatCfPXfp+Qbg
m6XLgpKySuEengzPCEIIIeT1xasded3WKXgoE3AnrQiXrG2fbwCWLlkalJhZrBZMgXckIYQQ8nri
eycVfnfTFWltxlch6/SJSlXrVePtRPtuZ/rDdRoRQ3BXGYALl6493wAsEQOQVaLdApAdJYQQQl43
JGC7BMbjnK0Pzlzzwtnr3q1DLXvmmifs3MK1IOsWHI+rt/1w9ZYPrjq1EllWcdMnwrCdAXE4Z9Me
2+mFGx6RmgkwHgcxAdHpxS03AEnKAHhHmXcrhBBCiKXjH3NfC4i3vCLhGZoADxW4W4t32D2cveoB
58AEXHf2g0dILPzvpMAvKvkhAXdTERKXgZB4hfzVhjMRHHf/ibSCPGt3TZkB91C17mveuO1z54nt
9FLzfKWHQOGphr3DEtWyKrBL137Ik/vkpZY/c8UDLkEJ8I++rx0HMQEx90tewABkl8LnjnRHNOc+
AmKz1IrT1cHNRGBsppk0Lxf/6Ay1DZnwNzOPEEIIEQJiMrRWsQROtxAhsVW4Bt/TYt4lez84+cXB
zjUAQTHS1S5IkL0PPxWXPMKTccFeWuMesLLx1DhzzR1Xbwca0qr4aUzvE3UfoQk5cPAI0noUrFTr
3zs8SeVn3NZ7yhgkwsk/BiesnXHsopMW1O3cw3H4nAPOq3zclAFwU2lcm9K7BKugr/b7gp2vMirx
2v7LcRATEJtR2nIDkJJTphbMUEHelEy1wiTc9giGd3Q2fILDYO8e1jRdBeUmJK3puClPm2fMw3Tc
7HwV+H3DozVH56uMiGkaU4zpCSGE6JPAuCytW10CqzzT5ikPtpti8qDcQ5qnUXiEqdZ6bAYuOwTg
dkA8brgHq1a9xBqJfQbCkwtw4NR1bN2+H2fOXoLVOWuN02cuYu36nbC+6Y+wxAcP0/tHq2US83DT
K1TrAThv66da9YYn9j3C5G+SZip2HDqv1mcN6ys3sGzdPmzcdgT2N25j+87DOGvjrjXUJa17qDIP
aj2BqtV/URkVlyA1rPZfjoOfmhabVYYLl1tqAHLLEag2MkgF3EdkIzg2DtdtbsM5KAa2jrdVJkkI
SchVqHnxOYpsBMVlq3HDsPFvsPxVGxMUl9M0zfjXOE+tX803jmvDar2PLSvLqAPoGxwIa+WsfBPy
EdKUp8w3rFPlr7ZVeiYe33ZCCCF6IkTFhnO2vqrRmATviFRFykP8pEUelQ7vSHlg7hFaCz1KDZuk
9QpPUbEvE9bKALgEJsDBMwShygCY5hWVVoite8/Az88PgYFBsLFxgI2tA+Lj43FZtbxPXHJCZGrh
w/QSXyOS8nDLO1StPxHn7fzgpz2w9wh/1Qg/dcUFB49YoaqqCs6u3khMSkVmZjY2bDuMG15RWs+C
Mb2YlSBlVC7d8Idb8D1t/415JWSVt9wApOVVqMArAdyUXITeS4L9teu4YOsC1/A0RKTkI+hONOxu
OOGK7U04h6QhMCoaDrfcYevgBHu3YNxycYe1rTM87mSo4B0K+5vuuK7SOyrn43Dzljqo3vCNU84o
LFLNc4Kta7ja6BQ43XaHjVrHlRue8IlVZiDqDmztnXDV7gauqhMRmJABZ3cv2NzwgHuUckzefrhq
6wpX5dZCEw2mhBBCiD4Ju5f7MLD6aN3u6RqBMdm4olrkW3adwLbdp7Bj72kNbVwFcUevO6qVnvUw
vXdkutbYvHIzEHJLQFrtYQnS6JRGqqFBeye9BDsPnoePtw+Wr9qGbzYcxrR5G3Hq9AVcvWaH01dd
cSet+GF6aQxHphTAySccPpFy68Af/nfkoT25Z/8I+SDfziNXsGXbQQANyLifgTkL1+OaSwhC1P6Z
pjVsZ5bWUyG9AmFNcVAayYm5lS00AIuWBKU/qFSt7RwVSE3JQ7hyH3bWF3DG+ha8Yx7gbnoOnG7d
gr13LAIjImHr5Am3wGBcVG7H504crl65hptBKji7ucLWIwLu3u64pByZX3io2pgb8LyTgpsOjnAI
SEZYTDzsHW/A6qIDPCJjcOWynTIZibjleAuOAXeVkXCFU2ASvHw9cfWmHzz8/XDuog2u2djhqlsg
HB0dYeN6B6HKVcmOP77thBBC9ER4cp4KrMoAaG8EqAZo0/330MR8bNlzBkEBQSgqLED+gzyNkuIi
2Fy/gYNn7FX8y3+Y3ni//srNILirBuZN7zBlAMRk5CkkyObi7v1SbN9vBX9fPzjedMbJ05dw7MR5
hISEwdr6Ok5Zu6h4WfIwvZiHqNRC3PaNgG9UCi7eCFAGQJ5dkDwNzxcExmbBRgX69VsOIiwsHJ6e
PohQcdZeNYw37jyhBXm55a0toxCTE6q2SwyA3M6Q/ZfjEHIvB0kPqnCxpQbgfn4VwpIeqIAvQd9I
PiKSknDDwRXO3kG45uCF4JRs3FYB2ik0A3cS0+Dg4qEMgGrlO4UgPCMXN2/chkd0HgJDAmCvdsRN
uSNHrwREJCfB1s4dgWmF8HR3xy3PcNy67Qkn/zDY2TvDPSIa9vbuCFAHyMvDQzmuMDg6e8IrJh8h
4UGwUQbA1dtLmQkP+MiTl4npuH3LGU5BqYhKy2+23YQQQvRGZGo+LkrLWhkAuZ8ugVIIU7Fs95FL
OHToOOzsHHBNtdCFGzduYtv2fVprXW43G9OLCZBG5VVlADzDU+DkG45wFVRD7z1QqCCriM4ow95j
1jh08Dhu3nRSDdJbuOkof52wZcseXLrhowxA6cP0Yh7k4zzOfhHwv5umGQC5fy89D8bnBCJSCrH9
wDns3XMIV6/aYvHKHcoM7NcaxctXbsIlB19tXx4+VyDLqIa6GADvyFREphhiYZgiJb+mZQZAfkUo
o6BaZV6greARhYhKSVHuxhP+iUXw8/OFnVsw/MPDcd3uFq7Z34ZzaCqCosJxwzkMEfdz4eTkpoJ2
HoJCQ3DTMxKe/gG45ZuAyORk3HD0RpAyAF5e3nAOiIWLmzuuOTrjur0bvO8mqIPojUBlALy9vVXL
PxEBwQGwtnGCzQ0H2DiHqgOYBHt1wq6r7XENi4OrqydcQtLUQS1stt2EEEL0xp30QhUkVWCVNwJi
s5uCq+FZNNegBBxSLf19J65j/0kbjb3Hr+HERSf4RKYhMO5Rev/oLNX4fYBrt4K1wOrsF4mo5Aeq
IVuoKNCISi3Snhc4fuEmjljdwNFzDhqHztjB6rqbdgshUqUxppeHBmMySuEacAeBMfdV0A5EiDwf
oN0iMHTbi1FwCYrX1nPglK32VoCdW5jazquwuuammROtN0Ftqzx7J9xR+33FMUjrQTDGQrlVn1pY
9wIGoLBae2AhKlV2zBTpBRBnVYS7aQUIu6cyTC9CeMJ97WGDqPRiZRLkwDxQLXFlIJIlrVquaVqk
/FUbY1yPrNOQRsyF2pFYcVoy/fH5YkYkv9C4dK07IzJZTm4xIpPUyYxOVQdBpsn6VV4q3ePbTAgh
RG/cvV+kWt4BKj7laK3p8CQVeDUkBhUhLrvyCWKzKlQckbTSejakD1PEZZbi+u0QeClz4BoQhdj7
xSqAlyvKNKQHIF4tn1LY8ATJBfWIzax4mNaYPjGvBh7B0dqDe2IAIhJzVZx8ZCpkG+S5gfjsKsTl
VGrDcqshPle2s1LbTvnGv4aKffK8QFxmCa7eDIbfnfu4q2KzHAeJwWlF9S03AJlFNVqAlRU0J1rt
uGG4+OFw9P0StUMlZqY3T6v+auMm89RfbZr8Vet4YlnjfG0dMt80TYk6mE3jD9MRQgjRO7EStJ3D
cNsnGv7yhL9qobcGv4hURQouKzMhD/DJR4Ck4RmVpBqeidmto2lZ6QGQxvH122Fw8YuBX2QqfMNV
vs2RbTE3/TFS4ROerLYzUOsZkI//yHGQRvr94oaWG4Dsojq1cKm2AuFR4CWEEEIsH/n4TURiPuw9
7sDWNQJ2rpGtxsYlHD4RaaqFXYYo1dr2DJUv78UqMxDXatyDYrVX2GWd4fcewN49Sm2nys/NDE+b
boIsa+MiDxXe13os5BgY43dmCV7AABQrA6BWIK1rQwtbVkYIIYS8Lqj4pYJrQm5lm7mXW4W4rHLD
OpWxiMuqQFx224lV2/fytlNMkIrfChXOW2YAFi5cpBkA2TBxUELmgxLkFpQgJ58QQgghlozEa/lR
P60nX8XwLGUAWvQdAHMGoKCoGGWlxSgtIYQQQoglI/E6OdvQe99mA5BfWIwStdLiYkIIIYRYMhKv
aQAIIYQQnUEDQAghhOgQGgBCCCFEh9AAEEIIITqEBoAQQgjRITQAhBBCiA6hASCEEEJ0CA0AIYQQ
okNoAAghhBAdQgNACCGE6BAaAEIIIUSH0AAQQgghOoQGgBBCCNEhNACEEEKIDqEBIIQQQnQIDQAh
hBCiQ2gACCGEEB1CA0AIIYToEBoAQgghRIfQABBCCCE6hAaAEEII0SE0AIQQQogOoQEghBBCdAgN
ACGEEKJDaAAIIYQQHUIDQAghhOgQGgBCCCFEh9AAEN1TUlLy2mFuPwgh5EWgASC6prCwEPn5+a8d
RUVFZveHEEJaikUYAKnMpCLuLMj+vG771NnOQUsoKCjQMNfCtmTkmnnw4IHZfbJEXqeyJdvavH4i
pLPS4QZALjqpzEjHkpeXZ3Z6ZyYnJ0crgw0NDaitrX2teJ3O1+tWtmgCiF7oUAMgrRnpzhQTUFFR
gfLy8tce2Q/ZH2lZvi77VFZWplV85uZ1VuTcSBmUyr6urg41NTWvmFrUK+NRX1drZt6zqa6u1q4b
c/tliUjZkjJmbp4lIWVCjqtcu83rKkI6IxZjAOQClEridUf2w2gAXpd9Ki0tfVhJ6wU5NxL8zRmA
RhjV8Nj0dkO14Gsqy5BfoIxvVbX5NM/AaADM7ZclImVLypi5eZaElAkaAKInLNIAlFdUolZVylIx
V1dVPHaRaqjKpKK6FmhsRGW5CmDN57eYCtRIPrU1KH84rRzVtZJ3DSoeS/skpaVlKm2D2o56tbyh
gnueAZB9k0q8+bplXZU19VrQqSwvNdmnCtSriNRQW/XSKlGzBqDceGyqzR6bR9PMox2bOtnwuofH
xogEPTm3sp7Kihc0SXL8VAB8Xv7Pw7wBqNWGU8I9cf7iBXhFpmrjtSbBtz2oq69HQ3485o3sgen7
nFUxbkSdmXRPo7kBqKhS69SO5yOqKlt4XNW5r6yuU2VYyl1brqWn86QBKEdV07GWPMvKKw3b/VhZ
M6KudbV/cq1XVRjK1ePz2w8aAKI3LM4AlFdWoa6iBHcCfeAbGIH7uSWoeCxIlKNWBSH/C6sxeNYq
xOZUoNacSTBFDEOVMgymwUgFuLLiXERHhCEmORsVlZXaNlRUVSIvPQER4bHIK1bLmQniQrlavra2
GNabp2LCsoPILlOVrtpOWcdTDYDkWfQA6emZKFHDjyo7ta66SrgeW4pRM9bhXn4talUFXqlMTklm
BJaPH4gt1iGqkqxtc+AzR3MDIPtWWpiDO+HhiEvNRaU6JtqxqaxATkocIiLi8EBVxOVSeZus59Hy
KkhX5ePs6nGYuu40CipVRS/nUC1Tpc5deU46fL29ERSRhIISOWbN1iHnS4KSOl8yXC4BoKFeOxcl
BblISU9HcalaznSZF0T2x5wBUHYOcc5b8d7P38ZJvww19sgAiD17qHoVdJsGG5SBNPYa1KnW/ROq
N6xfjJypHPfNxcgNV5vGlFp4O8DUAJRXVKAgOwWhQQEIDAlDWEgAAoJCcT+v+Kll9yFqvjxP4H12
BQbNWYuEXGW8n3cttYLHDYCc7yIkR99R15i6vtV2luRn4k5EBKLu3EOh2ibT81qjykuE7XYMmbYQ
IWmlqKuufDivvZEyQQNA9IRFGQAtcJQX4OqxxRg7aw6mDeiJXuP3I0dV/jUSBDQ1qGDZiPzwa/i0
bw+4JpSjUbUc6qTmVqqrbmopqyBmWuGWZUTD3jdMq+AlUJdVqGVKU7Fh5If41j//HvYxRbJq1Gb6
4rOffB+/77EMyeWqslXBr7ZpPQ1ay1e1ziWQ1Riq/0TH9ej2xUTEFQM1KmjLfjzNAMgSUZdW4o03
P4RLSjUaa1SgVevSzIlSQfhpfPlJH/ik16JR7Ydxn07M/gqjVlxS+9OozFCltg+iuppKbfla2dFG
FaikN0KpRu2fHIOKKmOIakS1Nu3xCs9IcwNQUakCUVECvun3R3z7P/4Mt1R1jNWqy5Oc8P6/fhsf
DN6CDBWgq5Rpkka+qKGuWi3bdGyatuPO5aX4vPdspJcD1erYyH4Wpwdj/YrxmL54Mb58tweWnw5Q
x0Wd31pDeG2UXgG13cXpUbjhF6lNq86Jh713sBZkiyKvYsScubhXoM1SsVUFVsmuURkEyV9tf43x
wGkyGIem06VGlYkSU6GmPWkADEG+ItMJswdOxl11MaiTpKbXavfqc2J9cXLdOmzYZ4WEkkYURLti
4x4r3FflJMblLLYftUaRyt/pwhEctboN5xvHsH7rAUTll2rbWHo/HPs2rcOa1dvgF5UP9xMrMGHN
cThZ78WG/WeQrMpkfZNZeBYPDYDaBzTU4Pya4fhTz2EY+sVf8FGP4Rjy1btYetzjYTkR1ajALue5
VAXgGuOFoQyWHJfckMvo0rcnPJMq1PGve1S+VNkXA2ZaVlqDqQEoL69CQ2MBTszsh7ff7Q+v+8ro
Znih1+//gD5zTyJfbVN1lbo2tC1oVOarHqUJbviq36e4EqGuUSW5DmuaCp6Uq/bqtaABIHrDogxA
ZXUDihMd0fPDLvCQyrfyLnavOIo0VSvXFabB0foSrjj5olBd+9Up3hgybjDc71WqhDW463MTly5f
RVTmA9So4FlfW4Yw9xu4qHYm+E4ibHaPxZuf9YPVjQBkFZapFmmFql9qEXzjFD7+5U8waPU5rUJx
OTwTb7/xIVad9NMqwsbaKkR7OOLCxUvwjkxRlWet1ootSI2Cja0tTh1YgSFT5yOh8DkGoFJVaspw
nNsyC13eex/LzgeqtddrRqIs5x4crl/H+dM71D6Ng3+aRKsaxAc4w8buBtYtHIo5e65pwba+rAC+
dta4eMkad9KL1PaVIdjLBV7+d3E31AVX7Z2QWlKKKhVsS/NiYCfHzMEZyercyD6bVnhGmhsAaaWp
Iwwf64P44I0fY/Q2OzUO2O2cgN++0RVbr4RrFXSDMjCRLvbasfGPvq+MiApOKoDkJYbhujo2x3Yv
wvDZy5CuzmV1ZYV2PH2PzcRnQ5dr60txuoBDR10h9ic3LgiXL12Ce1SyMgTluLhpMH7z5WBcc/PE
5X2T8OanPXH2hh98Xa/iyDVXFObdh/NNF9yJiYeX81VlFsJRpM57tQrW6dG+uHzxImztHWCvyssD
ZQZT7riq8nEZTiGRKFLGpVKdm6cZgJIUe0zpMxYhD9SIMgCy3bWFCTh7eBdcnb2woNdnmH8qGFWZ
nujS9WtcV2Uw23c33v/DFwjJr0Xk6cX4z18Mh7WHG1YN/Awz9jipY3UfK8b3w5pj13Fy6zQcuREJ
n+NL1bFYBm9/Gwz7/F0suxiqclJn3iTYm8PUANRWlsD16mH4qgvYfddCfHPQD7mxN2HteQfVhTlw
unwRl646Iq1AGVm5LpTBSA5yx4ULF3E7IEaVMmV47rlh0Lih8E5RY3V58Ha6gstXryEsLROV0jNm
UlZaQ/MeADGyYRe3YOqC09rxVtYIWydOxdbb8Wq4ETUlWXC5fgnWN9yRq9x3fW4Uxk4cCMeIDEQF
eiIoOhl3/Bxxxd4VOSXVBkPfLM/WQANA9IZl9QBUVKG2PAuHloxG996TcNo5Xqt8G4qTseebKZix
/ACWzh+KTTdC0ZgZgCFjB8M3owFRDjsxZtIyHNg2B+NWbUBGeQP8zq/ByIlzsGHpMExcuAG7Vw3D
bz/+HBsO2SAlX7VSVcXWWF8B1yunsG3VWvQfNQk3vW9j64pFWDR1ARYe9dAqI8/j2zB5yALs3L4W
fT8bjlMBWajPDsCc0UMwbcVOLJ7eDx8MmYeUkmcbgGrVwk0Ouo7DFxwQZr8b/cetxwMVRWsf3MWa
aUMxdt42rFk8Bn/8ahTuqIZOnPNeDBwwHlt37MSAr/+EiTtvqs0pwlm1fdMnrsTOZdPwdZ95CMgo
gdeh2fjhGwOw+8xxTOr+EWbtv4XKsgSsHdkLKzfswYJB03DBPx51DbWPVXhGnjQAyhw1lOLmuePq
2CxHnzGz4ObtiE0rlmD+hLlYeT5IHZta3N6/EZOHL8bOLcvR+/PRuByZj+p0d0wbPgRz1+7E3Elf
o8uYFchWq5OWWqUyTvnxHpg6oDuGTt0G/2RxeUBOlB1mTZiKLbt2YsLcqbgdn4bTq7/Gm598iV2n
z2HP2kH49Z+7YMvx67DeNwfvjVygtjcdywd1w9s9luHE0XX4/MPuuBD1ACVxtzBq2CAs3bIJn7/z
c3w+/zBCbu7H1MEjsHfbVkwevwEJ8uCdChrPMwCh+bJ19SrgVqGishT3ArxgdfgwBnf5DfptdlDz
MjF76mTYxFcrsxqFOZNGw1+ZhqqAc+gzagvUbiP45DzM22mDB5HWGNV/MbJllU26uX8Bxm6x0Yav
bRyNpUfctGHTYG8O01sA0vqtVKZHDNuV1TMwZ6Od1tNUXxiHLZOmY+HCrVgzfjj6T9iGzJpGxDqc
xJQBs7Bz5zZlOvpji91dNNz3wqCxIxCSW4Tra8dgxqzl2DZtJtYcdECF9Do9LBet40kD0IDIa5vx
p993xbQFC7Bg7mR88Kuu2OuWpK7JfJxYNwNTluzB2sXDseKiGxoLYjFmwiC4xj3AhZVD8JuPJ+Dc
9eOYMugLTF57EWVye6hZnq2BBoDoDYsyAIZ7v9K2LIP7pc3o9ecPMH+fBzLuXECXX72LtUfPY8/i
Efhy0CZkZoZg5HhVaWVmYdOgP6HX5C04d2Y7vvhjL1wODMDKIX1xJkC6DFXlUKda0057MWjJZjUu
XZvSHVquGYDb5w7ilI0vzq8djh//8iNY3Q7H5TULMeuwj6qJIzCuWzdYRxnaKT57l2LkklNwO78S
Y6Yd1KaVR5zB8NGzEffMHgBpUVfh/IpR6D11HfauHIdfvNkFvvmNSHLcisFDVkAtDmS5YtyIcYhS
y+4Z1xubre/JVDjtmoQ5ux2RE2GFvt1H426VTK3D/skjMfd4MOruOeKr3guQrKbePb8UYxYdQlVZ
ogr8PTB28S44ByahuKwSFU+5Z/80A2B3Yj8u3fTH0YV98ZPfdcd1z0icWDwbS89HoL7YByM//RIO
ibItahs3zcX4dZdw69giTFhwVpv2wPcgRkxcjDStB8BwC0KCU11JDA4tH4eP3uuNq5GZcNkzDu92
HYMzZ89i8lefYNHRCCSpZYeu2KWtJ9fnKAYsWK0Nl0dZo++UqchWjVXvPd+g/6JL2vQDM/pix61E
pDisRfehK7Xge3DBECy/HoGMgNPo8elX2HXMBlFJBahU51/OzVMNQLINxn05HKFSfMqTcHD3Shzd
vwtjxq5EdOI9zB3+PnputFVFKw3j+nyFY8H5eBB+BF93743AAqDY/Ri+GLwexWpxt31TMHrNOZTE
3kL/PmPgX1KLqswkJCpXdHPfvIfPAJxdMRiLj764AdAol16wClxdOwtzNxl6awJPzUW/4etV21qU
hlm9RuCkly9WDf0cux2ztKkpNrvQa8RWpKf7Y/i4EQjNK8GlVePx9bBZuOQYgsz8ihd/SNMMTxqA
eoRc2IiBQ5fBNyYGMZFumN5rKHa6pKI60xHd3/w9luw9h8NrJ+LTHouRkh2HSRP7qbJWj2KPY+gx
cBVy1fbXhpzDJ59PQkRpHWrbYTtpAIjesCgDIA+9pYc7Yud+Q6uoJHQfun81C75BF/D5r9/Hros3
4XjtEi7cCEDx/WCMnjwGkQ/ysL7/+xg0axdcbt/EyRNXEXcvADP7DMT5u1KD1yKvpBIhV9aj5+zV
ahurkVdQaLh/2lgNzyvHccwuBgVRlzFwyHSkqVaS9bIZmHnUX0WqaIzr8hHOBUoFC9zeOQejl59V
QU5VrjP2atMkgA8csxBpKuLUVBgqkeYGoKK2EQ05PpgxZwlOnrOG9fWLmNjjU6y/Gq0C1np8Pmix
FiyKw85hyNDJSCwqxJqhn2K1jXSJAqeXDsaCw54ojr6I3p8MQrgkViZp68QhWHgmHNWxdug/bC1y
1NTQc8swdvkR1SqsRnpiAtxsDuDzT7/GHucENMj972aVnvCkARDDUgmnc0dg5ZKMTL8T6D9qIfJV
xX1i7iQsuRilsg/CiI+7wuauGDbVgl03DZM3WsN2zxQMWXRSm3b3ymoMmbwSeaqBXF1Rgfq6Ujif
P4yLLkna/CurhmD8+stwODAVH342ETa3XXDxzCl4xGQj+Ooq9F6wWZWJeoRe34CvZyzFg4oGpPmd
Rt/J0/GgAXDdsQwTtJZ4I/bMG4gdNxNRmxOE2WOGYtrixVi+dQ+SiypQmJ+HuDsBOLpmEj4asEAZ
rDrUVVaYMQC1aJDuadU67fbhJxg5aSqmjhmEniOmwicsFNPHDcXMNaexZ8sk9Jy8GOmV1bDZNwlf
DBqPY1YHMP6rT3HCIxKu+xfhzx+Phmf0PRyc+yn+1HMqEh5UwPHYAvQcNQGrlFFKTUnF5hm90GXg
ckTF38Xy4R+jz6ztyKlqRH39k0HflCcMgBg2Vc5t1s3E3J23tWMbdHY+evf/Btpd87pYTOw1DOcC
grF6cFdsvZqipYm2Xo+vx+5EXk4oRk0eheD76phkZSDU1xYTBvTAuK22qGhoeKpxbClPGoBGhF/e
iinzTqhSJsrH5glTsNszA7XKAHz+y7ew/tQN3LK7AqsrbijOjcPkqYPgktqIvNv70WPESlX6gVL3
A/j461mILVPnjwaAkBfGsgxATT0K7jlj4rDPMGXxcsydMhIbz3qhojQdu1fMUi3L9dh/+CgC4u8j
3mUffvPWb7Df7R4ibh3FyAkzsGPHdlx28EBBeQluH1+GL4YOxfKlO2HjlYb0u3bo3aULZq+4hpjc
Iu1ecV1JElaN7IHuMw6gRDVN5XZDfXEspnf9DX7z5TJkqFamz/EV6P/VKKxcthB9J87E9dgHqErx
wrhh3TBl3Rbs2DQf7731Ac74pqNeXmNqZgDkob3qykrsHPUFfvvxAMRIzaVC9YKvfo2f/3kSwmNC
8c3UrzFC7e+e/evw8e/ewh7XBETd2I0vB3yFlSdOYuHI7vhL/3m4V1CEC8snYMCgWVgxewb6LVyP
u7mVCDwyD7/49Ze4GZOCkws+wc/+PBQe3q6YN2k8tmxbhZ59x+BikGyf+df3mhsAeQiwtjAGCwd+
gb6LT6NSnj1QW12TF47R7/8a7w7ajNzGBjjvW4h+Pcdi5dL56DNlHpySilAa54QRgz/FjM07sW3N
DLz3TldcDcvRXrWsb6xBgAo6vQf2xIqVizFpygzYqnl58S6YMXkSVm/bjhNWV5GQV4q88Avo8dGn
WLzVHXfD7TD4866Yv8YOp3fOxM9//TZOewZj58hu+H3/DUhMDMXQP/0c3RYcR0KgPSb264kps+Zg
8bLVuB4Sg9tnt2Pc5KVYNX8S+s/cjBR1smvMGgAD2tPzyswVKHOZ96BAe2BUnpurrVLBLN+Qvqrc
8PpcI+pQUpiP8uoG1NdUasZSO+8qaMoT+vKGgxzzCmVkpIQV5z9AYWkVGuvloUl1vEub0qnAKONV
1Y8He3M0NwCyHRWqFT/wgzfx+56LcK+wFlV50Vg3egBGTFbX0cQJGLX5KApqlSmz340hXwzBypXL
MGjsJJwISELK7d148+23cPymD/Z8MxOL127CiIGDsey0G6q1ty8elZXWYGoADA8BFuLkrH54650B
8M6oQFWGN3r+7m30XWCF0tpcHN+wAGNnr8TeA4fgGZWCNH8rvPX2r7DeLh5Fyoz+7u0PMX3xN5g0
aAC2XQtU58P8ra0XhQaA6A2LMgByEcpreLkZcXB3dYGvf6SqfGu0B9qqyh/A190V3iFRqkVdi5yU
WAQGBiImOUdVq/VIvBsEFxd3pKsKurqqSns4KsrfE65ekSgsqVIVZxkSw4MRHJ2mvWoor7rJa4CR
gb7wi4hVlbKqiNRyZYVZiAwORFDgHeSqaY31lYgN81HrdlMHqVB70K2quhZ5KXfh7uGDxGzVuowI
RHRKjvYlseYGQNsvdUwi/QPV9gbhfr6apvK4ExaEwIAwZBaqoJGTCE83D3UCcpF0NxgRCRmamYgP
9YZ7SDQys9MRFhyMzKJqNFQVItjbDS5u/kgrqtQexEuJjURQUDCS07NxTx2HoOAwpGc/wL0oX227
oxKzUWP2HWsDzQ2A4TXAbIT7+8L/ToJ2+0COTUl+BsLVPgQHR+NBeSUaa8txN9hT5eGBuKxiVRFX
q+BUg5zECLh5+iM5Jxcx4YGITc/Tjo0Ex0q5lx4dqJZxxd24dNRIwKurx4OMeLi5uOBu8n1lzqqU
aSpFgjpGIbGqVajWmxwVitC7Khgkxmj7GpeUrI57MALDYpGZmarOWQhi7iXg/Lb5GLdkP+7cuYNb
p+bj7SGjEZaUh3A/D7h5BCCrqFy7VSPb8jQDIK+Z1tfXP0LNl1cB69R2ykN08o0K4zRjWnn9T+bL
X22+miav2D1cRtZtTNv0ut/DeZKuKR/T7XgazQ2AGIjinFTteggMCkdmgeEtlYqC+/Byd4GrdwQe
yJsdyvTUKeOREi3XigvC7uWoK6cOWcnRqrwHIj41B5lJUXBzdYVvaDzKVV7ae/pN+bSW5j0AFRWF
SIgIVeU/EKm5qh54cB8hKv/g0FgUVarjUl2EQC83ePiHoVQZ9fz7CSptEOKzSpBotw/dei2CY5A/
AsPvoUodw7YaFCM0AERvWJwBkApCAqx8n10qxwrVEpPpFRVVhk+nqspSa1FV1Whp5PUmWUZeI2tQ
rZUqVclp61Et77r6Bq3b21BBlKvgrao7FVyMF7z2/r2k0V7va5qmgp82TZYzjqtKRvtefLUyDk3p
pIJtUNsnZkPyMWyHoRIxNQDGvCRv2T7Dh0+a8miQD6GooKgMjsyrEeOi8qqV16+0fGV/xXCo1rMc
C1m26Tho6Zv2VT6qYtx3edhQtqtSDRuOSYMKSs/+cE5zA6Ch8pf9EiPyaJo6pnIOlAnS1qfGDfuh
ttnk/ezqx45NvXb//9E61H41bVetyXYZz7m8wWFIK8dIzpesV51fdVzk3BnSqXWqdcs0OXfSy1LX
ILciGhB8bT9mDRiPJUuWYMaEudh/zkUFETWv0bCd8jaCrF/OzdMMgKXz5C0AhToGWrl4WN7lGlGG
UZtm+EaFIa3hWGrlQh1POf7Ga0k+umU8D6braSuPGwChHNXaNqgyK9e3KkeGzyIbyoN8LMv4mWRt
vFLth3Sc1Rdg/9xe+P17g+GbKbc92n57whQaAKI3LMYAvC7fzX8esh9GA/C67JNUflJJm5v3OmEw
Fyo4ZiQhNjYWCcnZyow0GIKMCjqmaeXcSBl8nQ2A6f5YMkZzaW5ey6lQhrwY2Vn3kXE/Aw8K5ANh
7Xt9yfqMBkDqJkIsgeZxsz3pUAMglW9ubq72a2EyLIHzdUf2Qyq8122f5JfxzE1/3SgqKtZejZMK
XT5MVPyUc2A8TzL8OhoAKV/N98lSab+yVYQSeWZCtfqLi9v/2jKtj8QIEGIJSNl8WUagwwyA7JCx
EnvZLocQc0iFL60+uQdvLtBaMtKlbm6fCCGdC4mT0oNmbl5b6VADIC0webjM8GDU4z9mQsir4HUM
/oLhAUPz+0QI6TxIL8DLMvwdbgDkU6OvayVMCCGEvExoAAghhBAdQgNACCGE6BAaAEIIIUSH6NoA
yDxBXn0i+qAlhrC9y0RL8iSdG9Y1+sN4zs2VByPG+eaWbw0tydMU3RoAmS5vCWRmZiI9PZ3ogLS0
NK3AP+sCkXnyvra55VtDS/IknR+pnLOzs3H//n2iA+Tal3rEXFkwInWC1A3N64zWInXN8/Jsjq57
ACT4Szrtm+yk0yNlQS5OKfTyCkzz8iDTpDxkZWVpw+bW8aI8L0/S+ZEyIBWzfLRIhok+kHrEeM6b
lwmpC+RbIVI3yLi5uuNFkXU+K09z6NIAyDSZJ66psbFRQ/tGOenUiOQrfnLRmQvGMk1ctPQMicyt
40URSZ4ZGRk0ADpG6hqpdyIiIuDr6wt/f3/SSfHx8UFkZKR2vo3nvXl5kIAtDVAJviJzdceLIjIt
a83zNIduDYB8pU0CAYO/fpBzbTzvTzMAcvFId217lQuR5EkDoG+kzEm9IwFCfi3Rzc2NdFKcnZ21
X8+U8208783Lg9EAyFf4RObqjhdF6ixZNw0ADQAxAw0A6SiMgUACgwQJDw8P0klxdXVFcHCwdr5p
AGgAiIVAA0A6ChoA/dCuBkB+idxEZtM0QQPQBA0AMQcNAOkoaAD0Q3saAKARJfcTERufhJJaLaXZ
dAINQBM0AMQcNACko6AB0A/tYwAMTf9Yx4MY3Wco5kwajl6TlyCxQE1/St1EA9AEDQAxBw0A6Sho
APRDexkAqYMy4yJwN7sGKA/Elx+8h+uxdU9JTwPwEBoAYg4aANJR0ADoh/a9BWCQ/5Wd+OaYLcq1
DgDzaWkAmqABIOagASAdBQ2AfmhvA5AedRXzNu5FjnZXwHw6gQagCRoAYo52MQBqujyYI/ONqP/M
p1WIaAAIDYB+aE8DIPVLcpgbbgYnPTOdIGll3TQANADEDHKu224AtOtQzW/62/S/2bQKEQ0AoQHQ
D+3dA+C0eTwGTNqBSkPCJ9IYoQFoggaAmKOtBkCUH2aFadNXwPHKISxZtRc2R1dh3qar0OaauTcn
ogEgNAD6oT0NgFCYkYj4pCzUm5lnCg1AEzQAxBxtNQDa8pmRcHBwQ0J0MJzdAxEb4g4n72jt1kBj
s/SCiAaA0ADoh/Y2AEaZm2cKDUATNADEHG01ANo6mi7G5jKXVhDRABAaAP3Q3gagpdAANEEDQMzR
HgbgRRHRABAaAP1AA2CABoBYFDQApKOgAdAPHWUARJKX/KS5uTzNQQNAA6AbaABIR0EDoB9aYgCk
LpAYJfWCsZ5oD+Xl5SE7O9tsnuagAaAB0A0tNQAy3J4GQMrh0/Ik+oAGQD+0xAAIMj0nJwcxMTEa
sbGxrca4Dmn9SwPmaXk2hwaABkA3tMQAyDy5INpTUialu0+6/ZrnSfQBDYB+eBEDIMhtAKlz2oqs
x7je5nk9DRoAGgDd8DwDIOVCyk5qaqrWjZabm9tmZD2yvvLy8he6MEnnggZAP7TUABiR+e2FufU/
CxoAGgDd8DwDIMh0KT/JyclITExEUlJSq5HlU1JStAvsafkRfUADoB9e1AB0JDQANAC6oSUGQJB5
7SkGf9I5DYA7PL18EBAQAB9vT3i4m0vTBtT6PL0N6/f28oC7uTQWCA2AARoAYlG0xABI2ZCHaKQc
FRUVtRlZj3G9zfMi+sHSDYC7uzu8fPwRFh6O4AA/Nc3dMN3DEwGBwfD38VJpHl9Ggv9t+8s4dvwk
bG+6wMtLmQCT+ZLexz8I4RERCPTz1vIQZFpERDj8fWWdhnzM4eXthVu2l3Hy9Bk4OKvt83x8/ZYK
DYABGgBiUTzPAEi5kDIj8+WhPbl/31bkNR+hqqrKoisC8nKxdAPg4+cHmzO7MH70aCzYcBCu3gFa
QPf1dMGWdYuw95w9Any9H1/GNxBOF3bh3V/8B0atPongEH94PpzvCT8/D5zasQwjho/EzjNqeX9f
+AX44/Lh9Rg+Yji2Hb+mzICvyTKmeKp5AbA/swZv/eSnWHTAHiEBPmbSWR40AAZoAIhF8TwDINOy
srJQUFDQ1HnfPjI+DMhbAfrF0g2At2r9u9juxsdvvIEZWy+r4K0Cs2px+3u7YcWCsVh37DpCQ4IR
EhwIP18/BAYFIUClCQ7wxtS+72H4skMIjQxDcFAgfJp6Anz8/OFwej3e+O5/x8+/mIDbgXcQ7m2D
4R/8G771zx/ggK0b/P18lCkIQIAyBoFqWX9lMqRXwNvHD0GBIYgMc8X0vl2wYPdVhAYGwD8gULsl
EKjSmzcOHQ8NgAEaAGJRtMQAGN+jfVq5kOnm9LT0IimH/BCQvrF0A+Dp6ata++cx6tOu2GrlgSA/
T+2WwO0LezFoxGgcvuSAo+tmolf/mVi7Zh76fNUTK49dRGiQFyb2fBcTN5/BtYPL0P2Lr7XWvo+f
Nzy9VZB2PIPpw4bi3ffex9pzLrDevQBfdeuK7r3nwzYwCEG+XjiyfCEG9RuAXn1HYreVA4KCg+B4
aT9GD+iLQUMG4w8fvovlRxwQ6nkNGxeMxqD+fTFw8lLY+/jCxwJvC9AAGKABIBZFSwzAs74E+Dw1
T29cRvKkAdA3r4MB8HE/i+GffIyNp10R6OcFH98ABLvZotfnb2HGXlsEnl+Hn/3oQyw/dgU7p/XF
x72nw0u1yqf0eR8jFmzBvo3fYOGG7XB0kecDPDUD4Hr9IKbOWIVVs4eha7+RmDZpCjauWIxuX46H
bVg4Lmycju5dx+LU1Zs4uGAc3vl4LGxd7TCxx4cY880JOFgfxBfKAKw8fQvn1w7DW7//AoePnsam
ZTth7+kFbw8agLZAA0ADoBvaYgBEcmvg3Llz+PDDD/HOO+88xsSJE7V1i5ovRwNAXgcD4OthhZFd
PsEWK0+EhwTA9ZY9nG46YOKwrph/yAF37Pbhs64jcDkkCjZ7ZqLXMDEAoZjb/7f4+a9/iXc/GYGr
fncRpt2rd9cMgJvtIUyYvAY3bxzDH//pO+g26yDczmxBl+6TcftOAFYM/hMGzTqA8NhE3PW6gL4f
9cP6fevQ6y89YeV2F7Hhrpg5uBuWHrJHqOs1zBzdC1/26IvFe63g7uWjttv8/nQkNAAGaACIRdFa
AyCSj/n07t0bY8eOxV/91V9JIX6MN954Qyt7ItM8RTQAxNINgJeXHzxuHcZXv/st5m+/DKdrZzFh
UBcs2XkKIz77NQavOgWf8xvw+990xxFXf5xZPQy/+Us/2N92wbBPfo5e87Zg09TBeL/XIJxydIG3
l7f2XIGj1Sb06j0Z11zccGLfTpy94Ykbe+bi57/9HGe8QtR6RuPjD4fg9FUnHF49Ce9+OQ7X7KzQ
+6O3MXn7Sdhe3oMub8pzCVawPnEAu4+cw95lo/DDX3fDCSc/+Mvrh2b2pyOhATBAA/CaYJTptEd3
ujvP8WmNARDJJ3w3bNiA9957D2vWrMH3v/99Lej/zd/8Dd5//3306NEDkyZN0tYtMs1TRANALNsA
eMLX3x/XTmxC/+7d0avvAAzs1wdf9h2KPQcOYETPzzBg9loc2bIY3bv3xMZjl7FzyVB0+3Igtu3a
hdF9PkefOTtw88oh9On6EcYs3Q4X72AEBXji6LrZ6voYiF0XbiIyIhxhQZ7Yt2IKPvv8C6w/YoOg
IBdsmjMOfVSevYdNw66rNxASFIiLB9co49ALU9duwYLxAzF2wXoc37MO/Xv1xcCBw7Fkx0l4+vhY
5IOANAAGaABeMeb19P0zKj0hAtGpeWhofDSvsiAT0dExKKyoe2yZ15nWGgDp+p8+fbrW+u/atasW
/P/xH/8RixYt0qZLz8CSJUu0MicyzVNEA0As2wAIho/6BKnAJU/Y+/sHqOAcBF8fbwQGhSDQ3xde
Pn4qsKlpXp7w8QtEiBr28TbMD/JXwdjbVwt88iS/rE++A6A9zd/0ZoB8yEeb5huglg3W1uPh6Q1/
dUwClAGRp/v9VX6SzsdP5a/G/Xx9ERAUjAA/H7UuX3X85I0BxVNfH+x4aAAM0AC8Mhq1/bjnZYM1
q1djtcYKHD1hi6Iqw7zH0qtxmebrZIXb0bnwOjgOvxsyD/m1WrzSWv+F927hy7d+jV2372vTHlv+
NUX2uTUGQN4M+Id/+Af87ne/w9ChQzFy5Ehs3rwZ3bp103oB/u7v/k4zBTJPvvlverxFNADE8g0A
aS9oAAzQALxCRAWR5/Hxm7/DjmuBqqKxw6g/von5x3y1eZqa0hnlcHY9zvhlAMkO6D9tJu4berAf
6siCIdh1I0EbNpfn60ZrDYBMEwPwk5/8BF988QVmzZql3Qr4+7//eyxfvlxj7ty5+M53vgNHR0dt
GWOeIhoAQgOgH2gADNAAvEI01cdgUZ8+uOCXjvSYUCwZPwuX/DMQc+sgJq04gZLGOjjumYeFu21Q
nncP61Yvge2dElRHW6PvtNnIrQeqcyOwceFszFmwGN37foaDbqnaqs3l+brRFgPwgx/8AH/4wx8w
btw4rFu3Trvn/y//8i/YtWsXBgwYgC1btuB73/seTp8+rS1jzFNEA0BoAPQDDYABGoBXiKa6WMz4
yzsYNGUBFkwZizHj1yOhECiLuogufSYhoaERcdeWoVvvuSiurcKGWZ9h8TXVwr9ng37T56Owrgx7
pvfDwoPeSE4OxZQBn2HXrRRt1ebyfN1orQGQWwByz196AD7//HOtq3///v3413/9V3Tv3l17NqBL
ly748Y9/jNjYWG0ZY54iGgBCA6AfaAAM0AC8QjTVRGLxoBEIVEFfdHzGQIzZ6gEU+2Hk5EWQUF4V
cwVTZi9DiRo+tXkkNtxMBhJtMWDuMuRkqqDfcyRCirTFcXz5cOxzStSGzeX5utEWA2DsAZg8ebLW
C7B+/XosXLgQP/rRj/Dtb39bu0VgbW2tpTfNU0QDQGgA9AMNgAEagFeIqCr9Fvr+6UOcC8xCVlIU
pvT4ArOOh6CxyA9ff9YD12JT4X10PD7+ahJyKiqxffonGHfAC4Whp/Dx0HFIz03HvCFdscY+BNkZ
oRjb9W2suBCB+kZ9GwCZ9k//9E9ScB/jo48+wpw5c7BixQrtjQAxCiLTPEU0AIQGQD/QABigAXhl
GJ7qj3E8huFDhmDStJmYOXU6Fmy2w4NaFb3rS3Bh7yyMnbsatrZWWDJzBpx8grBp1hCMXHkE9me3
YOiIcXBPrED+nRuYOmU8Nly0w9H1czF300kUqHV0huPU3gZAkI8C/dd//Zf2GuDVq1e19KZ5imgA
CA2AfqABMEAD8IoxL7V/5n+/xozMJ2w0k9frSFsMwP/6X//rieBvijwXIB8LKisr05Yx5imiASA0
APqBBsAADQCxKFprAKRrX17xU0XzqcgXAbdv3w5fX8Nrl8Y8RTQAhAZAP9AAGKABIBZFaw2AlClp
3ct9funqb86CBQtw7NgxZGVlIS8vT1vGmKeIBoDQAOgHGgADNADEomiNATAu9yIyzVNEA0BoAPQD
DYABGgBiUbTUAMhw83Ih48/DNL0RowF4Wp5EH9AA6AcaAAM0AMSikHP9PAMg3fhSdtpTubm5yMnJ
oQHQMTQA+oEGwAANALEonmcApFxUVVVpD/3Fx8cjISGhXTD2KhD9QgOgH2gADNAAEIvieQbAWDbE
BMiFIWVI/rYWWV5+SlieKbDkSoC8fGgA9AMNgAEaAGJRtMQACFI+6uvr2wXJx5IrAPJqoAHQDzQA
BmgAiEXR0h4AabFLL0B7YFxn83yIvqAB0A80AAZoAIhF8TwDIOWiqKhIewZA0si9+7Yg68nMzHxq
OST6gQZAP9AAGKABIBbFswyAlAn5jK8EbkljbvkXRfKTZwAkP2MepnkS/UADoB9oAAzQABCL4lkG
QO7Xy1f8mn/Jry1IfiLJr7y83KIrAvJyoQHQDzQABmgAiEXREgMg5UZkbvnWIKIBIMYyJ78V4eTk
BGdnZ9JJuXXrFvz9/bXzLT2KNAA0AMQCaC8DYCpz800R0QDoGznvEgikDMhHoaQ8yKehSedEzq/U
JXK+ZZgGgAaAWABtMQCyrFFywUhXrqzHVM2XEUSSjgZAv8h5lzopJSVFMwBSxqSskc6JnF/58mdy
crJWV9AA0AAQC6C1BsAY/OWJfpG1tTX+5//8nxg3bpw2LsvIK38i0+UEEQ0AkfImdVNqairRAfIG
kMSh5vWMpUEDQAOgG1pjAIzB//z58/jNb36DCRMm4He/+50UYnz3u9/F5MmT8e6772LatGlaeWte
nkQ0AESQMmdaNkjnxtKDv0ADQAOgG9piAHbt2qUFfSNvvPEGvve97z0c//LLL832AohoAAghlggN
AA2AbmiNATDi4OCAv/u7v8O//Mu/4OzZs8jOztaeA/j44481AzB37lxtHc2XFdEAEEIsERoAGgDd
8KIGQCTLfPPNN/jnf/5nLdAvWrRIm26UvPf77W9/G9/61re0XgBZt8iYp4gGgBBiidAA0ADohtYa
gMGDB2vBX9i6das23aiIiAj84Ac/0Ob953/+p/YzwiJjniIaAEKIJUIDQAOgG17UAEh6Qd7h3rx5
M/76r/8av/3tb3Hv3j0tjdzznz59uhb8+/Xrh8jISK1smZYpEQ0AIcQSoQGgAdANL2oAjIiuXbum
GQBVPPHv//7vGDJkCN5//31tXJC3AYxqviwNACHEEqEBoAHQDa0xALKMaOPGjfibv/kb/PjHP8bf
/u3fPgz8P/zhD7Xxrl27aheSyDRPEQ0AIcQSoQGgAdANre0BkOWkXN24cUO7YLZv364F/27dumk/
Hyw//tH83r8REQ0AIcQSoQGgAdANrTUAgqnkS1/btm2Du7t70xSDmi9jXI4GgBBiidAA0ADohrYY
AFNMZW6+KSIaAEKIJUIDQAOgG9rLAAgtLTciGgBCiCWiewMgMldxk86HBG0pE/Ja39MMgFwQ7Vkm
RDQAhBBLRLcGQN7hlnu5MkzpR/LQnvyqX3MDIOMFBQUPf/GvvSTrlV8Ge1pZJISQjkKXBkCQ6bLz
YgLku+6k8yPBXc639P6YKxfV1dXIyMjQWuzmlm8N8pvgUs4Y/AkhloZuDYAgrTM5AFJJk86PBP+y
srInWv9GpKyICRCjYG751iDlkMGfEGKJ6NoACBIM5N4w6fzIPfmWBGNJZ2751iDPFpjLgxBCOhrd
GwBCCCFEj9AAEEIIITqEBoAQQgjRITQAhBDyCpDnjeSZEKIPWhJ7JI25ZVvLi8Y7GgBCCHnJSD0k
dVNWVhbp5MhbRILEoWfFHzGE8laSvC5sbj0vQkvzbA4NACGEvESkDiosLNS+QCnfoJCPkEndRDon
cn7ly5/yATA57+ZikEwzTSNBuK1I7HtWnuagASCEkJeMBH/j10flp6MTEhJIJyUuLk4LxMbPzZuL
QdJdLy13+TJpe0rylLJGA0ADQAixECQQSJevr68vnJyc4OzsTDopt27dgr+/v3a+n2UApMtebgGI
TH8/pLXId0ckLxoAGgBCiAVhDASBgYFwc3ODh4cH6aS4uroiODhYO9+v2gDIumkAaAAIIRYEDYB+
oAEwQANACCEKGgD90J4G4Ak1mk8n0AA0QQNACLEkaAD0Q3sZAFHeXWesnzIB06dMxZqTDqioVR5A
BXpz6WkAmngRAyDz5WENog9acmGYW661tPRCJJ0bGgD90C4GQAVzCeh3nM7j4GUvZIRfxp/f/j2u
RtebT6+gAWiipQZAKmh5F1MOAun8FBQUaD/3+7QyYZwuZcjc8q1BLnApZ83zIvqCBkA/vIxbAHmh
FzFu3joklzWqMfYAPJOWGACZLmnlfc3c3Fzk5eVpf0nnRd67lQvyWeVCvsoladqrPMjF+CIf5iCd
ExoA/dCeBkDCfVGmH1auXgm/XElrPvgLNABNtMQASEtQDpSkofQjKRdiBJq3ymVcPsqRkZGhXUjt
Jfn4i5hM+dvSi5J0PmgA9EO7GgBVFyVH3MJFr+hnphNoAJp4ngGQacYvJj3voJLOg1wgUibkomxu
AOSClFa/lJv2LBMiyU9uNbX0oiSdDxoA/dDeBsD3+CosWGeFaukPMJPGCA1AEy01AHJy5KCZO5ik
8yHn2njeaQDIq4QGQD+0twGIdjqLI+ddUaOGG82kMUID0AQNADEHDQDpKGgA9EN7GgDBqGcFf4EG
oAkaAGIOGgDSUdAA6If2NgAthQagCRoAYg4aANJR0ADoBxoAAzQAxKKgASAdBQ2AfngRAyD1gshc
3fGiSP0meclbRy2ta2gAaAB0Aw0A6ShoAPRDSwyA1D/yzRGpc9pTEsyflqc5aABoAHQDDQDpKIyV
Mg1A56clBkCmSXyS1npqaqrWbS9p24KsKzk5Wbut0NK6hgaABkA30ACQjkLKgJx/GoDOT0sMgCDT
JUbJrQAxAG1F8pJg3rxuexY0ADQAuqHtBuApXwh8xk90iiQ/GgB9YwwENACdn5YaAEHmmas3WsuL
BH+BBoAGQDe0yQCoZRsbKxEbFoSUjGxEh4XifmYGIoJDUVgt85qlb0JEA0BoAPTDixiAjoYGgAZA
N7TJAGhTs7BidF8csrbDorEjceH6ZUwcPAqh+doSTy6jENEAEBoAD3h6eipkWP56PjG/s0ADYIAG
gFgUbTIAGvWoKCtFVXW1+lum/aBUuTxwU28urQERDQDp9AbA0wv+gUEICvSHlxr38QtEUFAQ/Hy8
4ePrBx8vT7i7e8LH2wce7m7w8vKBt5pmdl2vOTQABmgAiEXRdgNg/hmAZ32iU0QDQDqzAfBUwd/d
5QZO7NuHfQdP4KarB66dP4w9u3bg9EVbXL9+CfaON7F64mfoNmktrh/fiI+7dcGGUw4I9leGwMw6
X2doAAzQABCLou0G4MUR0QCQTm0AvH3h63EFw/7wS7zdfTo8QoKwtN8f8ea7X2KvlQ0Wz+iLRQdv
wGHfLLzTZzjcXF0wqOc7mLXbGuFBvmbX+TpDA2CABoBYFDQApKPozAZAuv9DQrywYeJQTFl+EJdP
HcSqJVth7x6CwNuXsXDxQpyw84XdwQX4aNAYuLt7YMygjzBv7xWEBdIAdCQ0ADQAuoEGgHQUnd4A
BHsqA9Abv/7dH/CjX32I3Vc8ERkeAi/7s+j6lzcxbc8N3D66qMkAuGP0QBoAS4AGgAZAN3SUAZCP
dNAA6JvObgCCg9yxZkw/jJq7Faun9MKfe8+ES0AYwvw9MW1UV8zaZ0cDYIHQANAA6IZnGQApE1Ju
5HOaMq+9JBeX5CdvDFhyRUBeLp3dAEgPwNqx/THum1OICLRD/w/fwpg1pxATFYypgz/E9D12cD25
FB8NHgtvb2/tFsCC/dcRTgPQodAA0ADohmcZAGO5kAsiPj4esbGxiIuLaxOyjnv37r3Qt7lJ56Qz
GwAvb194u17C0D++ibe7jcetgBDsmP4p/u2nb2Pewm/Q7f0f409DF2LdrL742R+7Yufunfjkrf/C
VzO2wNsvAF6d7JsANAAGaACIRfE8A2AsGxKwi4qKzJatF+VpZZDoi85sADxUAHd3vQ3bq1dx9ZoN
nN084HzLAdevWcPa+iqu21zHNRs72NnaqGk2sL9hD5tr12Fj7wg3j873LQAaAAM0AMSiaIkBEKR8
yPz2wJIvfvLq6NQGQMMTPr6+8PXxhqca9/L2ga8a95EPAfkYpntr03zg5eWlpfXx9jKzntcfGgAD
NADEomipASCkven8BoAYoQEwQANALAoaANJR0ADoBxoAAzQAxKKgASAdBQ2AfqABMEADQCwKGgDS
UdAA6AcaAAM0AMSioAEgHQUNgH6gATBAA0AsChoA0lHQAOgHGgADNADEoqABIB0FDYB+oAEwoE8D
YPKT8WbntwuPMjH/W/Qm8xsN05pGHg2LWrDvpnrWtDbxSo4ZDQDpOGgA9AMNgAFdGoC66kqUlZej
tKwMdWbmtxXZ3sbGKtw+tx3rjzuhShtvtg/1tShTJ7WivAyVNfWGAKvSGAJsvdr3MpSXqfnVtY8v
1wxZ74Po21ixfCXcY/Ob8m5EcYIHlq/aBP/kYsM0M8u2FG35yhyc2bsWh+zC2ry+ZyHrpgEgHQEN
gH6gATCgMwMgwREoSnTD0A//hPEbLqJMi7tN801auWqqybharmlIheemv4/LuH5TRVmvxvv9FyCn
aVxbp0on24CaXOye0g3vdBuGwLRqNSsfy0b3x3rrGDWzFvZbpuKdP/WBU6zhl++M0pZvGjaqruQe
hn7yCyy6ENE0BagvjsGgT/+IjTeTm6aoLLRtfLJ34Ek1He/HMqrC1U3j8NmsQ03jSsbj1o7QAJCO
ggZAP9AAGNBfD4AW1PKwfsjXOOlh+rOyhmiXd+8OImPuobheTa8pRWJyKoqrVCAqzUNySioqautR
mnsfKekPUF6Uici7sSiqU4FLrUOUnxaH8Mho5BbUojTCGiPnbER8dhpi4pNQoeabBuFsj4Po8tV0
3FfDtYm30OtX/xddZl/U5sVe24ox6y5rwxXZyQgPD0dafrk2XlWUg9TUPHWcypGUlIqSmkpsnPIl
1l6PQIWaFxebgMLKIuxZMQO7b4bgXuwdpBbIsoZ9rC/NRWREJNILK7Vp2WnJyMwtRmFuEu7EJUGm
Go9HelwkIu+o41HWiGi7HRi79hRy7icgPjkD8nt8jx3bdoAGgHQUNAD6gQbAgE4NQC42jeyLUx55
MqKmy8RqBDkexd7VazB/UE9M3n0bKEvC2D7dsdomHmWpLvjyD2/hpH8hUnwP4ve/7oU1B45i5uAv
MXbNKdSoNcR7HsfkCVOwYOrXGP/NWWSE3UD/fuNwzOoAhn35J0w/egvKV6j9aWrFF4dh2Od9cDu9
AiG2J7Fh6XyMnbIYOXW1uLJzE1wTS5AR6oSFQ6dj8eJFGNRrMm5E5SI/xg6f/bY7FhzZh6+G98T6
q/7YO6cP9nqlI952E7r1GoGQxBzsWzQaU1fuw8G1k/HZsHEIyK1HXU4E1s6bhUXLlmDc8qWIe1AP
j+ML8ebbo7Hn5AGM7t4V31h5ytbB+8IGjJ00HdOHf4rlR3wR67AHPYcuwLmzG/Fl179g+23prWhf
E0ADQDoKGgD9QANggAbARJmxwfAJjILNhsn4Y+95qFXTLm2egcVng7X5u2YMxG6XbDWUiNE9RuFS
Uj0aYi5j+PD5yKsvwfphX+OYb7GaX4Gs3EzkBF1Ez0Ezkaqaymk312PQlA0wtOHV/qh9Um1xHJk7
ALO2nceZA5sRkZaO1bMm44y9I/bsP4H8mgKsGfQF9t3O15YKObQCfaafVEPFmNX7Cyy9Go680hxk
FeRjy+QuGDh+PvYcu4TMeulhqMSWmUOx/EKstuzRqYOw8FwQAs/Oxsc95+K2qzPm9+uGJWfuAvne
6NF9Bu5WAynX1mD0vEOoLInD5K/7wVM6SRrzkPmgABFXNuHryVu14+Kyazwmrr+irbs9nwegASAd
BQ2AfqABMKBTA1CEneMHwTpMOrGBvHhvuPl6wXr3QVx2dMX2aT3xy6ErtHknl43HMu2+fB02z+iH
o34qwDfGY+qQ+QhUzf6a+GuYNHcdiisyMbfvCDhlaoupvFSYDr+CEfO2QcVVZLjvxXTVGpdhzQBI
AqV7N3ei2x/ew9LNrtr41RUj8H6XQThwM16NZWDGF5/gYoS20Ui7sQN9JhxQQ8VYOGQgToSWaNNF
O6d9hH5jx2FInym4lVSkTds0cyR2exmeQDg3ewzmn/aCy6GJ+KDbOJw4dQoHd+3GrXC1wSluGD5y
AwpUumTHLZix8Twq73tjRJ8ZSNKWVnuvNveu3U6M22ytjfscX4BvDt7UhmkASGeABkA/0AAY0J0B
kIZ3eXYAhr71cwybvR2HDu3DwM//iO3nrmLSgF5YfPAGrh5fgjc+7oqQzCp4HZ2Gd7+eiPO3rDDy
/R9h+kF3ZMTa4+2fv4f9AZmIvb4EP/7VO7gZXwDHvbPRa/pcHNl/Di4BKfA5txK/fq8HvBJz4bxr
MN7+ZCCiC7SbANq2iGqzvNH1X/8nFl1L1MbT7NfgjTf+CHft8YQGuB5YgEH9ZqntPIjRE8Zgr0s8
ytLd8aef/wyT9npqjyTW5Eag5x9+guEH/ZDosAU/f/sdnHILxpFFozB0wRYc2rMeQ3tOhl9mLbJD
LmPsuJk4a20Nh1tuSMkrxb3rG/CLX34Jt5Rc3NjQCz99byDic/Kxf+lQDPtmE04fuoygmCycWzMU
v/l0OhIzsrF/yvv4cMRKPJDnF9vxYUAaANJR0ADoBxoAAzo0AI0oz02Es50trlw6j3PnzsH6mgMy
y+qRnRyKS+dtEZVwDwHuNxCdXQXU5+DW9ctwCUtAcqQvvIIikZUSCxvb6wiOz0bqXU/Y2lxHZLo6
cg2lcLO9iPPXfFFZ1YDUKC/YXrfD3dQ8xAXfhI2NA9IK6x7uj/xFfSXuhgQhJb9KG68pykRYWDzU
mGE+ahDqZqNtp2tUhrgClGbEwNbWFu7+caiXZfIS4Whjhxv+8agoyYLztau47RuJB3mZCPF1Vsue
R/C9R28T3I8P1NYXEJumjadG+qj13UBseh5iAh3U/jggpUjlXXYfNhfOw8Y5GqirRoSP2odrzkjJ
zkWI+3Vcv+WJ/CrZTvPHujXIPtMAkI6ABkA/0AAY0J0BEMzL0M3+uExf/3u+Hl/z0/Jptj0mGcj4
w1Ez80XGtw2MemyZ58iYp6majz/S4+s1PLNgRu38KiANAOkoaAD0Aw2AAV0aAGK50ACQjoIGQD/Q
ABigASAWBQ0A6ShoAPQDDYABGgBiUdAAkI7CGAj8/Pzg7OysBQnSObl9+zYCAgJoAGgAiCVBA0A6
ivT0dO1vTEwMQkJCEBYWRjop0vqPjY19eN5pAGgAiAVAA0A6AilreXl5yMjIQFVVFaqrq7W/pHMi
51dij9QzEodoAGgAiAVAA0A6Cilv2dnZWg8A6fxID4Ccb0uvZ2gAaAB0Aw0A6UikzBF9Ya4cWBI0
ADQAuqGlBkDKR/MLuTXU19drf82VQUII6WhoAGgAdENLDIBMl3IjF4aUobYi65H7gjQBhBBLgwaA
BkA3PM8ASLkoLy9HWloacnNztTIkD2+1BbkPKE8CS740AYQQS4IGgAZANzzPAMg0eVK7qMjwi4ft
JbnIsrKyntrrQAghHQENAA2AbmiJAZDWvww/rVw8S09LL+VQjAUNACHEkqABoAHQDS0xANJdL+/x
misXIvkr65CyZYos0zy9IJL0NACEEEuDBoAGQDe0xQCIUlNTsX//fvz0pz/Fv//7vz9G3759UVZW
pqVrvhwNACHEEqEBoAHQDa01AKKoqCj8+c9/xtixY/Gtb31LCvFj/OIXv9DKnsg0TxENACHEEqEB
oAHQDa0xACKZvnbtWnz22WdYv349vvvd72pB//vf/z569OiB4cOHY/78+dpyItM8RTQAhBBLhAaA
BkA3tNYASFkaM2YMBg8ejPfee08L/v/xH/+BlStXasFfegYmT56s3SIQmeYpogEghFgiNAA0ALqh
tQZA3gz4zne+g7feegsTJkzAzJkzsXfvXrzzzjva9P/7f/8v/sf/+B/o3r07CgsLtWWMeYpoAAgh
lggNAA2AbmitAZBpP/jBD/DDH/4QXbp0wbRp07B06VL8wz/8AzZu3KgNL1++HN/+9rdhY2OjLWPM
U0QDQAixRGgAaAB0Q1sNwB//+EdMnDhRew5gypQp+N//+39j586dGDZsmGYE5NkAKysrbRljniIa
AEKIJUIDQAOgG1prAOQWwD/+4z9qr/99+eWXGDp0KE6cOIEf/ehHmino06ePdnvgzTffREpKiraM
MU8RDQAhxBKhAaAB0A1tMQDSA/C73/0Oo0aNwpAhQzBv3jyt218Cv/QE/Nu//RtcXFy09KZ5imgA
CCGWCA0ADYBuaK0BkGn/9E//JAX3MX77299i0qRJ2tsAYgYSExO19KZ5imgACCGWCA0ADYBuaG8D
YOT//J//g4ULF+LChQtaetM8RTQAhBBLhAaABkA3tMUAyDMAqmg+lf79+2sfCyooKNCWMeYpogEg
hFgiNAA0ALqhLQbg7//+758I+qZ88MEHOHDgAHx9fbVljHmKaAAIIZYIDQANgG5ojQGQv/IjPydP
nsSePXuwb9++J9i1a5f2/n9RUZFW9kzLFA0AIcRSoQGgAdANrTEAxuVeRKZ5imgACCGWiK4NgFT2
ItMKm3ReRMbz/jwDIDK3jhdFZDQd9fX1T+RJCCEdhS4NgBGp7CU9pQ9JSz47Oxt5eXlPNQAyPzc3
t2mJtut5eRJCSEehWwNg7AVITk5GTEwMYmNjSSdHznNmZuYzTaEgrfX2LBMtyZPolNr6JqtoUEOt
mTQKKT+1xnnasKE8GW9OmaYlpKXougdA5lVVVWnpSedHHuYznvfmZcGIcZ5cFObW8aK0JE+iT2q1
4F8Or2vHsWnTRuw77Yas8lrU1z9ZVuobGtFQb+hBqq83DMstpaSwW7jmGaoN1zZbhpDnoWsDIMh8
oh/MlQFzmFu2tZhbP9EXT5aJWtV6r4fb6SUYt2ojbt86j15/7I1jfvcNTfpm8rLZh0Nu8dpwxO1j
2HkjVBuOurUPK45f04abSwxBrTILzVVneDTloZ62jaR9MC0HlobuDQAhhLxspC4ypaZGWv+1ODmn
N4YsPKd15RdERyEutQgNVVk4s30l5s+diXOhsSgtCsfgLj/Bbz8bgs1HDmL8gJ/jFx/1xK6jl3Bw
3zocvh2DknhXzJu9HlfsbLB2yRxsvuSMivoG1BUm4/C2xZg3bzamTZ+B7ee9Ufrgjlr/IsybOQMH
Hf1R26DSmdlG0j6YKw+WAg0AIYS8JOTBT/k+hLwGKg+X5uTkaA+EypsmKj6jOucOVk/rhW6fTYR1
cLbWIr+yYQxGLz2LUK/TGDluKoLSs7FjYU+MWncCcUmJOLCyHwYs3omE5HRYbRyGr1eeQn15Kkb/
pSsGr7VD2O2j+OrTwQgva8Dt7eMxcOlRxEQ54pP3P8DRoFicmfM1RkzfjiBbe1y86IMqZQBqqqoe
bp/8Je2DnHeJSZb6ADANACGEvCSk4pfPQ4sJ0O7TP+wWVn+ry1FQLK+cViL46iZ0f68PbkbHY92A
D/DF4FlYvGQeBnwxBs73KnBh1zgsvRyoGQS7fZMx/chNbdjXahFGbrVSQxXYMHYq9vvlAnUxmDN+
JIIKAe+jczBg7h4E+l7GyDET4ZdTh5wIB0wc1R8TvtkBv7QS1NXXGW4XNG0baR/kfMt5LywspAGg
ASCE6A1TA/BYEKhTMbshE+unj8ahW3eUGYjD7BFDYRUUh6Oz+2LsynNIUq19T3cf5FbU4qRq9Y9c
bYWkhByc2j4SAxcdwL3YbJzbMRpfzNim1vkAC3oOxNqbSagr9EOfLz6FTXwFcvzPY/zQoZg5cwYu
e91VmVbCz80LMUn3sHVqL3wwZgdUvYzGp7x9QFqPnG8aABoAQohOeaoBUA6gobEGIbcOYsqMkZg6
ZRR2nXJEeX0jijPCsGLRdBW05+K6ZyjKVdo0FchH9p+I066ZyIm/iUmDJuLwRV8cWDUavUcsgpef
C2b27YeFRz0Q638GPXv2wnaHQNjtW4Qhk+di/foNmDprErY5esPm0CqMnTQD46ctg01IMuoaGvgG
wUuABoAGgBCiY55uAAR5E0Ca3w1qnuHR/HrVEjcMNWrpG2SeybT6epmmjaC+oc6wvJLUc5rUtIff
FqhOweLhg7HplCfi4uJwaNUQDF5zQpvV2FDftGxjs20i7QUNAA0AIUTHPNsAGJA6qnk99bRpj803
/m2abhiW+fJXGYW6GtzzuIbNs+Zj/vz5WLflCrILlZlQJsF0OfJyoAGgASCE6JiWGICXR1MPg4ka
mz4mRF4+NAA0AIQQHdOxBoB0JDQANACEEB1DA6BfaABoAAghOoYGQL/QANAAEEJ0DA2AfqEBeA0M
gMyXk0P0w/PKhLll2gJNqH6R808DoE/kfNMAWLABkHnl5eXa77XLb8CTzk16ejqysrKeWS5kulTY
5pZ/USQ/+StlkpW/PqEB0C80ABZsAGR6RUWFVknLSZIf56iqqiKdGDnHUhnLOZfx5mVDxuVilaAt
ZaP58q1BDGZaWppWxp5WFknnhQZAv9AAWLABkB9qkF/lkl9s0t6PbWwkOkAkvQDmLkoZF3Mg5UZk
bvkXRSQXmPwqGAOA/pBzTgOgT+R80wBYuAGQAyBqaGggOkAkP3kqlXLzi1LGxQBIT4EEb3PLvygi
KYc0APpEzjkNgD6R800DQANALAjRqzYAcjuBBkCfyDl/mgGQOsi0t0gQyXTTdOT1RM43DQANALEg
RDQA5FUh59ycAZDyJfXUvXv3HiMhIUGru6TsmK5HkO/7yzpMaZ7m6TT9WJCS6S//Nf1skKoAn/N8
iqpHm+dd95S61RyGK0GpvtkyJuttyTMycgxaks4SkH2iAaABIBaEiAaAvCrknDc3AMa6x9raGufP
n8fFixcfIuNnz57VyqGUH9N1aQ+mVlehpKgQhUXFqFR1W4uCYV096mtKcPPcHuy+6IlKlX+dmi7b
kXPHCRt37EJoWskzex5k26sqylBSprahUv0tLVfBWwVjM2mbI+tNDbyG9bsPIy63Uo03XQdqee36
KC5CcVll0/4aptXXPbkeoVZtx4sYj45EjhkNAA0AsSBENADkVSHnvLkBEDk5OcHZ2VkblnIi9ZGx
vERERGjmQKStR37Zr7EG3lYb8Nknn2PExKmYPnEMen05DUF5hmVkebmDID/zawzKdfWGeYYZtXDa
PQG/6zkLDwxTVdpGlN8PRu+v3sb228naNOMyjSZmQK6Fu/Y78Wn3Phg5uA+6fzUAwwZ9hSX77WDY
G4Pq6x7VtY/ybtCyL451Qtfu7+FssNS3jYbgX1sFf8e9GD9pEkb1GYz5u13QgDokpySjuFotp45H
o/pXr46brENkfWAu1l32NYzITyWr7RQ1WOCPHMn5pgGgASAWhIgGgLwq5JybMwA3btxAcHCwNq2s
rOwh8upoUlKS1hMgergeFQDL7zlidK/piJWYV/MAXldckJLzAPczclBZUYLUpARkFperuq1W69qv
Lc5FfHwCskoqtHXl+llh2JwNSHyQgaSUDFTLxMZyrJrfD3tdkrQ0taUPEB8Xj5ySKjXv0fYGWW/G
DtsQhF/ciHFzTyE+7Cp2HbPWDMCDlDjExCeiXBrvTXnXl+UjLiYGyVkFsjhQmYnZM/rhQojYD3Vt
qf/L7jmg/1dfI0BlVRJ2BXOnH0bKfQ8MGNoPVh4JKCzKR3bmA7UNVcjKyEJBYQFc7E/DISQJFUV5
yMovRWVJHuJU3iXKMDxxe6GDkXNLA0ADQCwIEQ0AeVXIOTdnABwcHBAYGKhNa24A5FmACxcuaOke
rkcZgNoMTwz7uDtWbN+JKQtXIihbJcgLwfBPP8fwubuxedkYfDFoJiKL61GU7Icj65djxewp+HLk
EtwpU63wwDPo2W88Tp/YgfE9u2DhBWcVi6uwbE5vHPDKQU3eHaybPwOz5s7E2FUrEFOgroOmbZbu
f1H4+Y2YMOcoylUQr6srhcexfZg2dArmjh2IsXP3I7NSbXN2DLZNmoUZc+diaM9hOHArXm18JqZN
6fPQANQ1NKIm/w4WDOyBCcuPIyZPuYeGenhZL8Ibv/opBk3ZhFseNzDx056YvG0fxs0cgBHLd2LJ
9EHY7BCDdI8DeOfDAThw6hhmTeyPYfN2Iau8Xq3CckyAnFsaABoAYkGIaADIq0LOeXsZgJp0d4z4
tDd2nrLCqk07EJxmeLDPauFkDFp7Ww0VYumgHjgdWIjaonvw9ApAtLs1vnj3zzgTWYWq0DPoPmAO
klWLuy7cCp99NgEJxSVYM68/ToVlI+jgJHTpvwSe3h6Y3acblp0K0tYvtxRq6wxlOfTcBkyYfRjy
pYzi6IsY3H0UgrVG/gMs7T8Eu1zvwm7DaExb7SgT8cD1GL7otRhpRZmYM63vQwNQXV2j/lcqjcPO
BSPw0Yd9ccJDOZriOxg9dThCtGq5BtvG9UGftda4n5+K+KxCnNk0ErPP+KkK+x5GdeuHY+FFKl0y
xn7WE4f8M2Whh8eso5FzSwNAA0AsCBENAHlVyDk3ZwDs7e21WwBSDzU3AE+7BVCX4YmZw5fCEOaA
+EB3ZFeU4/LyhVh5OUpNKcW62cNgH12EeFdrHDp6DRf2rsCbb3+AizF1qAw+jT5T1mvBG2ku6Nll
LMKLy7Dlm2G4FJ0Nlw2D8aduY7Fv/wFsWbsRtr73tO0zPFNgMBvRV7ZhyqLTWvDO9NyBPl9NRY42
Bzg6ayLWWbvj0JyeWHlCtkfp/m0M/Ho2Yh7kYum8QbgWVawmNmrrzU4IgrOP4dmDuCtL8HnfFcjI
icSIiUMRpH2frRw7pw3FoguRWhrR2a1jsORSqFrFPUzqNwm3tAcaCjC7dz9sd03R0hiPWUcj55sG
gAaAWBCithgArdViRubSCiIaAP0i59ycAXBzc9MeBJT6ScqbEamX/P39cfXqVS2dYT21UKUJMQ47
8e6v/oyVh6xw7ugG9PhoJEIyU7Gix1/QfZE18jKD8Plbb2D+8du4vHYSuo5eB3ev2/i0239h3vko
lIVY4euv+2O3lRXWjh6CGeuuoPxBHHp/9EvMOhuANI9TGDFmDq45OuKWkysSMvPQoLZH24a6elWQ
81SLvAt+/uEExOZXoaEkAauH9cK0xYdhtXcDvho/E/45dUhy3oNB3UfhmMpn2awxmHTADiVpvvjo
T7/AskvhD6+h7JBz6NfrS+yzOo8dq6diwZ6bqCxJxpT+H2LiYmuEBHtj1Ie/xaczTikroFSRiwV9
f413x+9CeWUqJn71ZwxfuQ9n1s3EkMkrEZNfpz0EaTz2HY2cbxoAGgBiQYhaawBkWlG0Pdau2wsv
p0vYse8cXK33YcvR22hQ8xobH08viGgA9Iuc8+YGQOoeqXSvX7+OEydOaK/9CWfOnMHp06dx+fJl
rYxKOsN65D35akT7OuHU6ZM4cuggDh48hIt2wSgqzYDDuZM47xiM+8kRuHjqNK55RCC/4D4unjiK
q86hCPW6AlvvOygryER0uB/OHTuIw1b2yFON+qqcGJw/qZZxj9ACc0ywk1r3QbiHx2lP2D98zU9t
e13xfdhcOoVTJy8iOrMU8qB/ZW48rA7L9pxHUEaRaplLma/DHU9bbT2n7PxRoqaUpITitMrHwT/W
8Cqfor6uHFHBDlo6qwsOKKiQa64OCf5OOH3eDWn3U2CjjseFq14olGWK0nHj4imcvO6BqsJ4zO43
GvN3ncTR41aIza5QeVtO8BdkH2kAaACIBSFqiwEoSXTHgYNnEezjiFPn7OF/6xyOXfahASBmkXPe
3AAIUv9Id7/UQfJ7JMa/gvyAlJQd0/UI5lRXayhjogaT7injW3imqq1/vP+qsa5GTWsaUWqeR/P8
a5qeA9DU9LDd46s0brPhXX6jGtQ0uYVh1KN1NktXb5huVIPJDsl3C0zzT3Pbj1/98E1sa+r2t7Tg
L8j5pgGgASAWhKgttwCeJnNpBRENgH6Rc27OAAhSN0k91ByWk2dRq30IKCf5Ljy9PRERn6Edx5Z8
kOhVI+eRBoAGgFgQorYYgBdFRAOgX+ScP80AkNbzqOfhyZ4SS0HONw0ADQCxIEQ0AORVIeecBkCf
yPmmAaABIBaEiAaAvCrknNMA6BM53zQANADEghA9zwDIMA0AaQ/knNMA6BM53zQANADEghA9zwBI
wG5PyQV2//59rcyZ5kc6P1KmaAD0iZxvGgAaAGJBiJ5mAKSsyMWalpamlSO5MNqKVACpqalamXxa
WSSdFxoA/UIDQANALAzR0wyAINOkTMTFxSE2NrbNJCQkWHQFQF4uct5pAPSJnG8aABoAYkGInmUA
BJlubtnWIOWMFb9+kXNPA6BP5HzTANAAEAtC9DwDQEh7QQOgX2gAaACIhSGiASCvChoA/UIDQANA
LAwRDQB5VdAA6BcaABoAYmGIaADIq4IGQL/QANAAEAtDRANAXhU0APqFBoAGgFgYIhoA8qqgAdAv
NAA0AMTCENEAkFcFDYB+oQGgAWgjD3/z0sw80hpENADkVUEDoF9oADqxATCVufntQn0NilThqah6
1odpmjbCqEZzaTqO5mo0k+ZVIqIBIK8KGgD9QgPQSQ2A/FJcbkIwzl+4gNvB8ahX443tHHglD1Tl
YNvMvhi04iK00NU8naRRivW+gWPHjsPaMRxFtbIt7fNLdi2iqZPCXGAXNRQmwfHUMRw7cRIB4clQ
W9fux+pFENEAkFcFDYB+oQHopAZAlHfnAj75xZvY7pD4WFB7XCoQNw3J8CM1T2fQk8sDd65uxIBF
h5vGDHq0HY0Iu7EDE5cuwdmzB9H9rV444Z9lSGQi01sJT8pkXrNkEtSf1OPHor6mAvl5RagxmSaI
N6nJDMHC0cOxbO0JnN6yEL26jURw7pPb8uztM2xH8ySmeb0IIhoA8qqgAdAvNACd2ACgJgpLB4+C
nxZvpcWtTEBDPUrSI3Bp6zqs33oIYQ8aUKeC4JZdxxBXWIvMUDts3XMcOaW1CHI4jT1HbsDT5QLW
bdiGgKxCLf7WFyXh5M71WLtmHW76ZSLmxm6MWrQbrvZHsW7bAUQXVza18CXfepye2xMjVtnKCLIC
fBEel6eGynHbaj/WrV0D27sparwajseP4pJjINycz2HNwZOw2r8ZG/YcQ2phBbzO78TaTRdQoLbg
rvMFrF27FifcArV1htifw7EzzggItMfy7ceQVFDXlH9TRC4IwYqpe2E4isbjKPMacHHVKAxYbGWY
oXQ31BdpqhDU1xYj6MoxrFu3Hqe94tWcKtifO4JzjgFwtz2EnccuIP1+DE7u2oRDt8NRrWVVCY/L
h7V9uhIaIxNadTtBRANAXhU0APqFBqATG4DGshDM6zcEbhJfjU3n2lzYnN4LJxdf7BjdC6M3OqCh
JAmDvuqO/X4PUHrfDp++9QEckhpw3303fvLT3jjh4oMDU/tixLKzqpVbiT1zBmHJ/iu4dnQhdl3y
RZzDHnzaeyY8Q9wwb9CfMWmvk5aVBD9pZZenBmD+mB7o2X8xPJLKtHluR+ZjzPxD8HY6jnEz5uBO
QRU8t0/Dj94fjsP2+zFp8y4cXzUWP/tgOPJqG3Bu4QhMWncT0T5HMGbCcji5OmLOzDGwjSxDhvNu
/PSNT7HF5jgmrFgFn+RKLY/GxhrE+bni4sE1+PqjYTh49RoCYjI1c9CoHaICrBj8BTZfv6elz4wP
g6eXL6JT8xDncwmnra7Dy2obPvl8HOKq6uCyfRx+8afx8Al0xIQeH2HsmmNwVebnD336I7CgHhHW
qzBy5i5lmM5jwvQp8Eky/Ga/ufPzLEQ0AORVQQOgX2gAOrkBmK8MgHuqNqo9sFdZVYWsqGBcPHkK
U3v/CZ/MOa7m1GLDgsk46ict8wKsmTEC9klqMM0ZgwYvQ6YazLi1GVNXHEdptj8m9JqC+Fo1sUmR
VzdhyNIT2nDAybmYueWyNmxo/dahTvMeebh5eDE++2AwPBPTsX3Ex/hi2AKsWbMM/T4eBNvYcmTe
3I5uozfAYBGUKmIxa9AY3L5zF6ePHEK2muSwciDe6zYKa9eswZivemGbTQKQehPde07C3SrDYhLd
td6OxmoE213A9pUz8Mm7PbFi9x44BCSZGIB8LO75CRafDNcWS/E4gg//8Fvs90hDbdF9uNja4dDi
CfjFO18goFAZBNut+HrEZi3tjZUjsOpIhBoqwJQpA+GVWYATk7vh0/6z1D6txKCu/XHKO11L+6K9
ACIaAPKqoAHQLzQAndkAlAZieo8+uJ2iAl5tIU7v/QZHTxzBuKGzEZSShl1zv8T7sw6olNVYNvJr
rLW/h+IsRwz8rAvsxADE2+Krngsg/iH2ynL0m7kD5bl3MLbvYNimlaAuPwNx90sQdnkj+qrWvMhl
7yRM2XhRGzb0OTzAriVzcClA7kMU45vRA3HUJwbHZ/fGyKWnER+fAHcXT2SUqWN5fgX+PHiVCqmP
ZLtjHN7s8jmOehm61G9tHYcvhqxATHw8/D08EJ1Zgurw8/iw22iEq5MnenQcmno9CoOxaOyOh+t9
dIwa4bpjPN7uMRdJlSptjgeG9R+GmIJS7Js2AmsuhOGuy0H87C/d4Ku8UeLFVeg6YC3q1ZKXFvTH
8oMhyjulYdSY3nDLqoD14r4YOPugtk+eLh64l1uimY1H29MyRDQA5FVBA6BfaAA6pQEwBL4Un1Po
80kXDBs/FVMnj0aPAcPheScOq+eNw+TFB3H80DL0GaNazgWNCLq2Ap/1G4HDl85gweDPscPWH6HX
duKTLv1gH5GC61uG4oNPhyAooxrh9tvQd9gYLF1+GslpeTi7fhy69piGoLgkHJz7ObqPXooU1Yw3
bEUd/K5vxehJQzB12kis2XMRRbWq7Z3qh4VzpmLOnAWwdgtFaU0Zzq0YhQ8/HQXv1BK1nGHp4jvX
MXLibMQYetNRlpuAzavmY+acOThq7YQHpdXwP7MSf/noc1j5ilWR1v3jx6O+shCJsWmoaDZdO0xV
OTi2aTL6qWO0bs1yrNx2HAlF1fC4uBm9RszAobMXMGXil9h/3Rvn1o3HR92mwC8qAmuHdcXwhadx
J9gW3ZVh2mIXjaKMO1i2YLrapzk4f9MbheXVanNoAIhlQwOgX2gAOmkPgFCn1lGrTmpFWQlKSstQ
U2cILvJgXllpuSHE1qk09YbpNZXlqK6TocambahVhUK2rVZto9oe2U5Dfz5qystQVimJDWklrxo1
X/alVvJV6zRsR5MNqC5X+1yuDRuDO+qr1bRSrUUtffKST73Kr7au/uE+PFRTIDWoAaXq+NVo6zbk
X18v2/mUbxEYFpID+MS8pi1BZWmJ2h/DfQ3jq4vVFWWoqpWl1bZVV6Na7Ztsn+RXW1unHRNtX9Ww
bLumxlrt3Gr7pNbePL+WIKIBIK8KGgD9QgPQiQ2AdD83l/ZgnnG4aUBrMT8cUS1o49+Hk5qmybBp
2qYA93Ds4fSmdEZMp6th43SjjK8nPlqPybJNQf7RuOyXIZ0MmI63prtdeLg+pYfreLTSh38fZftw
6NGw+ivLGdXabRFENADkVUEDoF9oADqxASCvJyIaAPKqoAHQLzQANADEwhDRAJBXBQ2AfqEBoAEg
FoaIBoC8KmgA9AsNAA0AsTBENADkVUEDoF9oAGgAiIUhogEgrwoaAP1CA0ADQCwMEQ0AeVXQAOgX
GgAaAGJhiGgAyKuCBkC/0ADQABALQ/QsAyDlRabL3/bAuK7m+RB9IOefBkCfyPmmAaABIBaE6GkG
QMpKWVkZMjIycP/+faSnp7cZyau6upomQKfQAOgXGgAaAGJhiMwZACknFRUVWtCWMiTTJHC3BVlH
bm4uMjMzH+ZD9IXRAEiZkvIn40QfyPmW804DQANALASROQMg5UHKjARskXxuuL0QUyHmgr0A+kPK
mNQxUuZeVkVLLBM530/rbbQUaABoAHSF6GkGQMqDlBvR05Z9lp62jNxOKC8vpwHQIXLO5dxLuZK6
hugLOe+WbP5lG2kAlMxV3qTzIWqNARDJheLo6AgrK6vHuHDhArKysrTWvrnlaAD0jZx3KWtEn1jy
dU8DQAOgK0QvagBEYWFhWLt2LX7xi19IAX4Ce3t7LZ3pcsZlaQAIIZYIDQANgK4QvYgBEKWlpeHt
t9/GwIED8fHHHz8W+L/97W/ju9/9Lm7evKmlNc3LuDwNACHEEqEBoAHQFaIXNQC2trYYNWoUNm3a
hF/+8pda4P/P//xPTJ06Fd988w0WL16MhIQELa1pXsblaQAIIZYIDQANgK4QtdQAyD190ezZs/Gr
X/0KH3zwAf7f//t/+M1vfoPVq1fjL3/5C/77f//v+P73v6+ZAbmQmj8HIKIBIIRYIjQANAC6QvSi
BqBv375aV/+4ceMwZ84cnD9/Hp988gl++MMfYujQoejduze+853vYNu2bVr65vnRABBCLBEaABoA
XSF6UQMwZMgQfOtb30K3bt3Qv39/bNmyBT/4wQ8wf/58zJw5Exs3btR6A7p06aKlN+0FENEAEEIs
ERoAGgBdIXpRAzB48GD8/d//vdYTMGzYMOzcuVNr/Q8YMADLli3DmjVr8MYbb2D06NFaehoAQsjr
AA0ADYCuEL2oARg0aJD2pL8E/+HDh+PAgQNYtWoV/vEf/xH//M//jO9973vaw4ERERFa+ub50QAQ
QiwRGgAaAF0helEDIIH/b//2b/Hzn/9cC/Q/+9nPtGny9L/8/fTTT3HmzBktrWnr35gfDQAhxBKh
AaAB0BWiFzUAI0aMkEL7BHIbQIL/ypUrcfTo0YfLNM+PBoAQYonQANAA6ApRexkAI/JGgDwHcO/e
PS198/xoAAghlggNAA2ArhC15hkAVSyfirwRsHDhQu31QJFpL4CIBoAQYonQANAA6ArRixoAed1P
vvz34x//+Al+9KMfac8FXLlyBS4uLtoyNACEkNcBGgAaAF0haqkBMCJpU1JStN8EaE5qaqr2e/+y
jubLCSIaAEKIJaJ7AyCVu6h5xU06J6JnGQBzhrClMm35my5LA0AIsUR0awCk8pc0EgwofUl+u7+w
sPAxAyDDcjG0d3kQUyA9BRUVFTQAhBCLQrcGQKbLfOm+zc3NNbse0rmQcpGdna21yKurq82WBwnW
0hNgbvnWIHlJ+WLwJ4RYGro1AIK0+qRllpycjLi4OKID5J59VVWV2XJhNAFyvz82Ntbs8i9KZmbm
E/kQQogloGsDIMh8uf/b/N4t6ZzIuX5WmWjv8iDrMpcPIYR0NLo3AIQQQogeoQEghBBCdAgNACGE
EKJDOrUBkIe95EE/MQGEEEIIeUSnNQDGV7nKysq0HSSEEELIIyROyt/mMbQ96DADIBQVFWlfeyOE
EELIk0iclEayuRjaVjrUAEgvACGEEEKejrn42R50qAEghBBCSMdAA0AIIYToEBoAQgghRIfQABBC
CCE6hAaAEEII0SE0AIQQQogOoQEghBBCdAgNACGEEKJDaAAIIYQQHUIDQAghhOgQGgBCCCFEh9AA
EEIIITqEBoAQQgjRITQAhBBCiA6hASCEEEJ0CA0AIYQQokNoAAghhBAdQgNACCGE6BAaAEIIIUSH
0AAQQgghOoQGgBBCCNEhNACEEEKIDqEBIIQQQnQIDQAhhBCiQ2gACCGEEB1CA0AIIYToEBoAQggh
RIfQABBCCCE6hAaAEEII0SE0AIQQQogOoQEghBBCdAgNACGEEKJDaAAIIYQQHUIDQAghhOgQGgBC
CCFEh9AAEEIIITqEBoAQQgjRIRZhAEpKSlBaWqpr5BiYOzadFZ5zA3o7750Zlum2l2ceQwOvql7o
cANQVFSEjIwMpKSkIDU1VfurR+QYmDs+nREp3NnZ2dp+6/mcp6eno7Cw8JVd7OTlIfXY/fv3zZ5n
PdGWekyug9zcXK1O0HO9kJaWhvz8/FdSL3SoAZAdlEpQgkFVVZVGZWWl7pD9lmMgx6KzBwPZP+O+
VlRU6Pqcy0UuF7wED3PHirweNK/HzJ1vPdCWekzS5+XlaYG/rKxM1/WCHA+pF16FCegwAyA7Jjso
J7yhoQGixsZGXSKSYyDH4lU5v45C9k0Kd3V1tbbf5o6HHjAqMzNTqzQ78znvzJjWY8bz2vxc6wWR
sR4rKCh4oTIt3d6ynCwjMrd+vSB68OCB1qMkx8Xc8WovOtwAiFsUScHRMyI5Fp3dAAhiAGpra7XC
bu5Y6AWRdHlmZWW99AudvBxYjz2OqDX1mNEAlJeXa+swt269IJJeQTmONAAWhNGdvYzAJaIB0Bei
nJwcGoDXmNfdABhlbl5rEHV2A2CUuXntgUieDaIBeAmYk7l05pB7NImJiairqzM7vy2IaABaj1Ey
bDRqoubpnsWrNiQiGoDXm5dZj5mWY9HLKJ/G7npz81qDyNIMgDkZpz/rmD5tvjzoKNdt8+nthYgG
oB0wyjguJ9PDwwO7du3C1q1bsW3bNq3wt+TCkjRyr7ZLly4IDw9/bL3tgYgGoHXIeqysrODl5aUd
R6lE5ByfOnVKm9eSfIxq6fT2QEQD8Hrzsuoxoy5duqTVVVevXtXGzaVtLaK1a9di9uzZ2rC5NC+K
yFIMgFz30lg7duwYduzYoR3HLVu2ICwsTJt369YtrVFnrn4wzpcHlU3ni44ePYrhw4drw6bLtBci
GoA2YJQEGgkKxhMo8vT0RNeuXeHk5IQbN25g/vz5qK+v1+aZqvm6jFq3bh3c3d2bxgwypm0LIhqA
1iE6f/48/vqv/1qrROSilwt01apV2ryWKDk5WasojJL1yvbdvXsXgYGBTVPbtxUmogF4vXlZ9Zg8
JHvu3Dns27dPq6e++eYbzeQ2l6RtLtP6zlTmpkn5XrRokTZszLstiCzJAMjfOXPmYMqUKVqdv3v3
bq1hINq+fbu2jc0ly4nENEggbi5pCM6aNatprH3rBEFEA9BKRFKpSutenO2JEyceuyCkxT916lQt
f+kNOHLkiDZPXj3ZuXMnlixZolXIxkIQHR2NefPm4eDBg9r4ypUrERoaCltbW0ybNk17Z7M9CoCI
BqB1iOLi4vDBBx9oF7dMO3ToEBwcHLR5ks/+/fu1cytP10prSi7giIgIrXI4c+YM9u7di9///vdY
vHgx/Pz8tGUEFxcXLFy4UKuAk5KSHq6v+Ta0BhENwOvNy6jHRGJIJ0+erA2LpOyFhIRo5URasVJO
5bU5KYuOjo7aNGmZSvkXA2wsv1JvTZ8+XVufyM3NTVtWgqHkJXWZjIuab0drEFmKARBEFy9e1K5/
2R4bGxttmlzj0piTxp/8lZ4WaTAkJCRox01Mv4zLOiQGyDGS+v7evXvavsnwnj17cOXKFW0dzfNt
CyIagFYg8vHxwaRJk2Bvb68FdZHpfHm68uOPP9YCwIwZM7RtEEmBEKctJ37BggXatKioKK3byNnZ
WXOOIjEAMv306dNaoZAuItNtaC0iGoDWIfL19dWC+OXLl7WLUnoErl+/ruUjZkCGJeCLmZNbOKNH
j8bt27cxZswY7dxLr87YsWMRGRmpVaym6xZJRSlmQVphcsG3x7aLaABeb15WPSbXiLGVaZwmkh7M
mzdvan+NgVsC5xtvvIFr165hw4YNWte1mAAp93Z2dlrwu3PnDry9vbUeBQlo0jiSaTExMZ3eAEhw
/+yzz7Tj+eGHH2rTZPv69OmjDYt5+uijj7S6X65xqTOkodivXz/NOEnvgRwzMVNSd8g2vv/++9p5
WL58uVb3iMzl3xpENACtQCQnUVr41tbW2vpFpvOlspWTLIqNjcWKFSu0eXKg5b6xdIcNHTpUmy/D
4phNJQZgyJAh2Lx5c9OUjr1wXkdehgHw9/fXnLxcOFLxibmTVo50pb799tvaeZbgL2VDJD03ch4l
4IvkwpZWvlGm65btlMpz7ty5WmVCA0CMvKx6TB42NpZVkZQPQYKP9G7KrUsxsSKZZryPLyZYgr6k
FXNrKinvEswk4Etwk4fZpA6UnjGRuW15UUSWZgCkV8R4+0RueRinz5w5U/srseLs2bPasPS6SN0k
kmMq+yCGSo6Z3JKpqanR3s+XukAkdY6rq6s23Dzv1iKiAWglIjl40j0jJ1CCgbGyFklX2siRI7UD
K/kbLxJxyXIP+OTJk9qDflIIpPtXTIEELGOXmaxTLjApUFKw2qv7R0QD0DpEcq4k6IskoKoiqp0z
yUdcuvTuyLmXcycV35o1a7SeAunmE5cvvTpi+MTpi5mQbRPk4peLffXq1dpHe0Ttud00AK83L6Me
k/IlPZVSRqVBI3kcP35cM59yS1PqHmnJf/HFF1r9I9+SGDZsmBac5KE+mS/DEpzkgTcxr2J4ZXmp
z+Q6kNtgslxAQIBmCjq6HnuZBkBigdzeNUqOrzQM5JjJ38OHD2vHxThNtkF6UEaMGKHVDVJnyDFb
unSp1uqXZwBGjRqlHWMxYtLbLDKXf2sQ0QC0AaOkwpYLyHS63BeWkyeVvXT1SxeYSG4XSOteCooU
AukWFklgGT9+vOYc5f7xwIEDceDAAa2LuUePHloBaY+AIKIBaB0iOSdi5uTYicTISZe/SG7TSMUo
XYDS0hfj1qtXL+2eat++fbXeHLmY5VkAMXimZTI+Pv7hekTttc2CiAbg9eZl1WPGdUnZlLpKHkiT
oCTBSXqqpJ6Snkq5Zy29lFKOpa6aMGGCFpREUqdJ6166uMVQiMQEyHUgjR2ZL0aif//+WvDtyHrs
ZRgA2R+R9PwZe32NEmMkx0zigRxfOSZi9mVaUFCQFhekl0QaCXK/X+YbnyO4cOGCNk9uG0qvitQt
kld71mc0AO2AUTIsJ0e6bqQwSHeOtOoEGZbCIfeOTdV8HaLm4yJjurYias2F8zrSngZA1iEXs1R6
ciHLuZTzKq1+mSYmTy4ikaQ3VfNxUxnXb5RxvD0R0QC83ryMekzKtAQeefhUkPIs5VgwPsRmlDG9
cdgo02GjzKUzSqa1ByJLMgDSejceR6kbjEh3vjEfo4zDxuVNZTr+tOPdXohoAF4C8kML8hRnc8RF
S7eOnFgjpsuZjpumaZ6uLYhoAFqHHK/m59N0XFr3puerJcOvAhENwOvNy6rHpHu+eTmWcZluLKem
ZdU4bG666XjzaebmtwWRpRgAQXptTY+fEbnujPveHOOyT5v3tOH2QkQD8BKQE/UsmVvmVSGiAWgd
z1N7X6DthYgG4PXmZdVjz5K59JaCyJIMwLNkLr0lIKIB0BkiGgB9IaIBeL1hPfY4IksyAK8jIhoA
nSHSkwEwfqzE3LHQCyIxAPKwKg3A6wnrsccRtcUAyAO7InPr1gsieWhT3tzotAZAkJ2Up+jle8x6
lzyfIIFRnJ+5Y9VZkEpBLnTjU8l6lrx6JRe5fHios5u+zoxcs1KPyTWsd7W2HpNAJw9pyzMOlOEN
tlfRM9ihBkAqPTnh8tELQS4ied9STxj32fiAT2cPBLJ/0jownvPmx0NPyDmXC53B//XGWI/Jg2Zy
XvVYjxmRY9CaekzSS6NAzIPxOOoVqRekYfAq6oUONQCC7KS0gGSH9YyeWoGyn/KpTXPHQU/Imyd6
OeedHdZjBtpSj8lyYgKkJ8DcuvWCfKjMeDyaH6P2psMNgCA7Kh+l0DOv4mRbEjznZbzv38lgmW57
PSbLy3Vhbt164VXWCxZhAAghhBDyaqEBIIQQQnQIDQAhhBCiQ2gACCGEEB1CA0AIIYToEBoAQggh
RIfQABBCCCE6hAaAEEII0SHtagAKlAEoLTWslBBCCCGWi8TrdjMASWpFsjJCCCGEWD7xmYbg32YD
EKNchDgJQgghhFg+D+N3awxAjDIARvdACCGEkNePaEVmSw3AkiVLQyobgawyhVqIEEIIIa8nEvwr
AVy3c3y+ARg3bnzENVsHXLx8XXMMhBBCCHl9uW7ngHXrNz7fAFAURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURXUi/bf/9v8BYJZQlvtLjzUAAAAASUVORK5CYII=</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabhelp)
	{
		
	
			return $true

		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$checkboxEnableToolStrip.Checked = Read-GlobalParam -key "EnableToolStrip"
	}

	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	
	Update-NavButtons
}


$btnLinkMods_Click={
	
	Link-Scripts
	Link-Source
	Link-Packed
	Link-Workbench
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountP_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxFile.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoading_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-ScriptDirectory
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Dayz_Folder_Adds/*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here
	$frmWizard.Size.Width
	if ($frmWizard.Size.Height -le 50) # minimized
	{
		Show-KommandStrip_psf
	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	#TODO: Place custom script here
	Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">180</Line>
    <Line Disabled="False">551</Line>
    <Line Disabled="False">625</Line>
    <Line Disabled="True">969</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>