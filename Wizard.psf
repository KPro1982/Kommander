<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAJfKSURBVHhe7b0HfBVHgud/t7v/nb3ZOHt7u3d7
e3sT9tYzu5M9yePxOOeADZiMSbYJJhhsMNgEm2SDwWByzjlKCCSCcs4BoQQSImckkgQIwe9fvxIN
j8cTKBlJr38/Pl/0XnV1V3V1vapfV1d3/xdJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiTXacmf/smfJP/bD36QPGDA+8nDhn2S/NFHw4QQQgjRbPg4+ZNPhie/+vJLyd/68z9PNn07
ubf+5E/+JOeFF17AgqWrkbSnGPmHSpB74IwQQgghmgl5B88aziAiPg0DBw7Ed77zd7jZzVevH3z/
u8nzF69Exv4ziMwsRljaPoQLIYQQolnB/jsx7ziSMveiRYsW9zcAA/q9n5yUXYzorAOIyigSQggh
RDMlMr0QmeaEfvnKtfc3AJ98PDy56NgFRGTsR1SmEEII0XyJbkCa2zZJpDEB2QdLsXZ94P0NwMfD
Pk4uPHrOrFiMmCwhhBCieRKXfQDxew4ZDtabOAO3Gbv7gNmu+d5ANGw+D93apgMNwR5jAFav3XR/
AzCMBuDYeXsJgDsqhBBCNDfYYYcmFWBlYCyWbYrG8s0xdcOsu2xTFLaEZ9hONjylABt3xmPj9lhs
3FFHuK4hJDazKp+J+VgZ0BD5jMbWyCxrApxyoAnIOXSu5gagyBiAmN2+3YoQQgjR1EnIPWw7xO3R
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
vsKIZxjjVBdW0/R9hVWXvq+w6tL3FVbT9H2FVZe+r7Dq0vcVVtP0fYV5p+8rjH+rCyOeYYzDMG6n
rvn0TMtXWF3z5CuspnnyFVZd+r7CqkvfV1hN0/cV5p0+w/i5Jh2fqKLRDABvUdi6dSvS0tKQmZlp
r1nk5+cjOzsbhw4dsuEcxsjNzUVOTo6dzJCammr/7tmzx4ZzOeMxPtfj+tyOE5aVlYW9e/faayHp
6ek4fPgwMjIy7HUgws8M4zLGYVyu46R/rzwxD555Yh6dPDHsfnniMI2TJ+7/vn37apyngoIC7N69
+4485eXl1TlP3Ba3WdM8MZzLGcZtcD3vPHH71eXJ1/FkXM/j6Zknhnnmydfx9MwTl3E9lp13njyP
J9N3jmdt8uTreN6rjjGeZ57uVcc88+RddvzuHE8n/XvVMSdPDPPOk1NOtaljvvL0TdV753jeL0/3
qvdOWHV58qxj3nliHpw8OWXnWce4Da7nnSdun3nyPJ5OnupS7xnmmScnn77yxGW1rWPfZL138lRd
HWvoes84u3btsuvRCPjqd8SdNJoB4AGKi4uzzJ071/6lIVi9erU9oHPmzEFiYiI2b96MDRs2IDk5
GbNnz0ZKSgrWr1+PgIAAu5zxGH/VqlV2fWd7rHjLli3Djh07EBUVhfnz59tKuWjRIoSHh1v4mWFc
xjiMy3W4rmeeuG3PPDFt5oF5YZ6YN+aReeVyhjE+98U7T8uXL8f27dsRHR19K0+LFy9GWFgYIiIi
sHDhQhu2YMECREZGYufOnVi6dOmtPMXGxiI4OBgrV668laeEhAQEBgZi3bp1d+Rp48aN2LRpE5KS
kmwYfxhr1qxBUFAQ4uPj7brc7ooVKxASEoKYmBjMmzfPpr9kyRKEhob6zBN/ZFzOMMbnelyf2+H2
uF1uf8uWLVi7du2tPDEfzBNx8sRljMO43A/neHL/uJ/cX888MW3mgXlhGPPGPDKvLEfPPLGcvfPE
fWcZsCycPPG4MU/MC+NxGY8vy9SpY9wG6wH3k8fTyRPrC/PE+uPkifWKeWIdc/LEY808sY6xDjCM
x5N5Yh1hnpzjyTyxjrFO+coTlzOM8e9V7506xjDmozb1ftu2bfWq904dq2u9Z5k69Z5l/aDrPfPg
5MmpY7Wp9951jPmpS73ndlkOta33LG+u69Sx6uq9d9vKsvSs904dY33wrGPME9sm73rP+sVj6lnv
ecyra1ud9p7pe9YxJ0/8y+81ae+5zyznkpISjQLUkEYzALwEQBNAeGsG/3JUoKKiwg7lVFZW2r+8
l5F4hzGuZxjXYxi34xl2+fLlW2kwjH8ZRjzDGIdhTvr3yhPDfOXJO8yf8+Qd5p0nJ6wmeeJ3X3ly
wjzTqm0+feXJM4xDiM5QJBsNrsO//M5wJ4x1lmGM7xnGbTKMQ5CeYfzuDHcyjMv43RmydMK4LSd9
X2FOWvzrmSdnXz3LybPsuA7DaltOTph3OfEvw2pyPJtinvjdV56cMCd973yyvL3zdK8wbsMzT06Y
Z548wxjXCeM2fKX/TeWpunz6yhPDmkqePMO888Rw/j74WxL3p9EMgCc0A3Rt/gL3p7ntk78dg5rA
WbLOTNnmBH8zvK/Z1z41RZpT3WJevdsnIfyVRjcA/NGxMRONy6lTp3yG+zMnTpywdZBPzuLZQ3Oi
OR2v5la3ZAKEW2hUA8CzmTNnzlgTwGEdDuM0d7gf3B+eWTaXfeKwNBs+X8v8FR4b1kE29hxC5NDh
g6UClcZ4VF6rGrasDRz65O/G1341RVi3nEstTRnWCZYrf7vebZUQ/kiTMQD8AbKRaO5wPxwD0Fz2
idemnUbaLfDYsPP3ZQBuv3Tz+h3hDYY5g79afhFnzhrje7nqmmdtcAyAr/1qirBuOfMfmjKsEzIA
wk00SQNwqawcFaZRZsN85XLVxKs7MI1J2ZUK4MYNlF8yHZj38hpThqtMp+IqLt0Ku4QrFUz7Ksru
iHs3Fy5cNHGvm3xUmvWrGrj7GQDuGxtx721zW+VXK22nU37pgsc+laHS9EjXK25PImtofBqAS07Z
XPFZNrfDfGPL5hozfu1W2Tiw0+Ox5XbKy2ppklh+pgO8X/r3w7cBqLCfizOisGrNakRnVT07vMKj
820IrlVW4vqZAnzw1svoO2OXfXHHNR/xqsPbAJRdNtu05Xmby+U1LFdz7MuvXOPLxev5W6qeuw3A
JVy+WdZM8+Klqolcd9Y1B/NbN/vH3/rlsqp6defyhkMGQLiNJmcALpVfxrWy88hOikVcUiYOn+Ts
Z8/GjLM9ryFh9WdoN+BT5J0oQ4Uvk+AJDcNlYxg8OyPTwV08dxI5menI3X8cZeVVD7Eou1yOU4f2
IjMjD6fOmfV8dOLkklm/ouIc1k/og3eGz8bxi6bRNfnkNqo1AEyz9DQOHTqK8+bz7cbObOtaOcIW
fIwu/cZi35kKVJgGvNyYnPNHMzHi7TaYuD7VNJIV9e74fOFtALhvF0pOIDsjA/kHTqLclIktm/Iy
nCjOR2ZmPk6bhvgSG2+P7dxe33TSl89g+Wc90GfsUpwtNw09j6FZ57I5dpdOHEJcTAySM4tw9jzL
zGsbPF7slMzx4udL7ACuV9pjcf7sSRQfOoRzF8x6nuvUEu6PLwNg7Bzyd32J3/3wYSyOP2K+3TYA
tGe3VGk63ZsfrxsD6YwaXDNn93epsmr7NHKeCp4xCG+N33jzm1ENLwd4GoBLZWU4e7wYacmJSEpN
R3pqIhKT03D41Llq6+4tzHLOJ4hZPhJtB47B3pPGeN/vt1QH7jQAPN6l2J+TbX5j5vdt8nn+zFFk
Z2Zid/Y+lJg8eR7Xq6a+ZAZORvv3hiD14AVcu1J118U3AeuEDIBwE03KANiO49JZbFwwFN0HDMR7
b76GFm/PxAnT+F9lJ2B13XSWN3AmYxOeafkywvZewg1z5nCNLbfRtSs3z5RNJ+bZ4F48koOguHTb
wLOjvlhm1rlwAOPfegzf+sdfICi3lJtGxdE4PPeDv8EvXh6O/ZdMY2s6v4qb27luz3x5e5fpyK5W
Nf+FwePw7IvvIv8ccNV02tyP6gwA19i9dhQe+sljCC2+ghtX+QQxnsFVdRpnM5bipSffQOyhCtww
++Hs06L3X0GXkWvN/twwZqjc7gN17SpvN7uICu7oDdNRcTTC6KrZP5ZB2WWni7qBKzbszgbPwdsA
lJWbjqh0Lz5p9Wt8+//8AeEHTBmbTV8q2oFH/vnbeLTdRBwxHfRl3oJzq2yumHVvls3NfGSv+xjP
v/4+Dl0Crpiy4X6eO5SCcSPfRt+hQ/HSb1/GiKWJplzM8a2o6l5vcFTA5Pvcod3YGp9lw66cKEBQ
TIrtZEuzNqLzwEHYd9YuMn2r6ViZ3A1jEJi+yf9Vp+CsqozDzcNlvhoTRVNhwu42AFWdfNnRHXi/
TS/sMT8Gc5BMeIW9Vn8iLw6Lx47F+BkrsPf8DZzNCcPn01bgsKknuaHLMXn+epSa9Hesnof5K3Zi
19YFGPflLOw+c8Hm8cLhDMz4YixGfzYJ8bvPIGLRSLwzeiF2rJ+O8TOXYb+pk5U3zcK9uGUAzD7g
+lWsGt0Jv3+tIzq8+Ec8/nIntH/lt/h4YeStekJdNR07j/MF0wFfdX4YxmCxXE6mrsNTLV9DVFGZ
Kf9rt+uXqfs0YJ51pS54GoBLly7j+o2zWNS/FR7+bWtEHzZG90g0WvziV3hj0GKcMXm6ctn8NmwO
bhjzVYkLe8PxSqtnsCHT/EaN+Du8erPisV411KiFDIBwG03KAJRfuY5zhcF47bGnEMnGt3wPvh45
HwdNq3yt5CCC16/Fhh1xKDG//SvFMWjfox0i9pWbiFexJzYEa9dtxO6jp3HVdJ6VFReRHrEVa8zO
pGQXIuDr7vjJc62wYmsijpVcNGekZaZ9qUDK1iV44j9+gLafrbQNSujc/nj4ocfw6eJ42xDeqLiM
nMhgrF6zFjFZxabxrLBnsWcP7EZAYCCWzBqJ9n0+xN6S+xiActOoGcOxcuIAPPW7RzB8VZLZeqU1
EhdP7MO2zZuxaulXZp96IOEge6urKEjchYAtWzF2SAcMnLbJdraVF88ibst6rFm7HtmHSk3+LiIl
OhTRCXuwJy0UG4N24MB53pNegQuncrGFZbZtF/abY8N99mzwHLwNAM/STAkjdv1sPPrQ99F10hbz
Hdgy5R387KGn8eWGDNtAXzcGJis0yJZNQs5hY0RM52Q6kFOF6dhsymbB1x+h0/vDccgcyyvlZbY8
4xb0x3MdRtjtFe9YjTnzw0D7czI/GevWrkXE7v3GEFzCmi/a4acvtcOm8Cism9ETP3nmNSzfGo+4
sI2YtykMJacOY1dIKLJzCxC9a6MxCxkoNcf9iumsD+XEYd2aNQgM2oYgU19OGzNYnB1m6sc67EjN
QqkxLuXm2FRnAM4XB6H3G92Retp8MQaA+a4o2Yvlc6cibFc0Brd4Dh8uScHlo1F46ulXsdnUweNx
X+ORX72I1DMVyFo6FP/6o05YHxmOT9s8h37TdpiyOoyRb7fC6AWbsfjL9zBvaxZiF35symI4YhIC
0PH532L4mjSTkjnyHp29LzwNQEX5eYRtnIs48wOOmDoEn8yOx8m8EKyPysaVkhPYsW4N1m4MxsGz
xsjyd2EMxv7kCKxevQY7E3NNLTOGZ1842vbogJhi8+3aKcTs2IB1Gzch/eBRe591fUedvEcAaGTT
10xEn8FLbXkba4Qv3+2DL3cWmM83cPX8MYRuXov1WyNw0rjvypO70f3dNgjOPILdSVFIztmP7Phg
bAgKw4nzV6oMvVeadUEGQLiNpjUCUHYZFZeOYc6wrnjh9Z5YuqvANr7Xz+3HtE96o9+IWfj4ww74
YmsabhxNRPvu7RB35Dp2b5uCbj2HY9akgejx6XgcuXQd8atG4613B2L8xx3x7pDx+PrTjvjZE89j
/JwAFJ8xZ6mmYbtRWYawDUsw6dMxaN2lJ0JiduLLkR/hoz6DMWR+pG2MohZOQq/2gzFl8hi0fK4T
liQeQ+XxRAzs2h7vjZyCoX1b4dH2H6D4/L0NwBVzhrs/eTPmrt6G9KCv0brHOJw2vWjF6T0Y/V4H
dP9gEkYP7YZfv9IF2eZEJ3/XdLR58218+dUUvPnq7/HulBCTnVIsN/nr++4oTBn+Hl594wMkHjmP
6Dnv47sPvYmvly1Ezxcex4CZ21F+cS/GvNUCo8ZPw+C272F1QgGuXa+4o8FzuNsAGHN0/QJCVi40
ZTMCb3QbgPCYYHwxchg+fGcQRq1KNmVTgZ0zP0evTkMxZeIIvP58V6zLOoMrhyLwXqf2GDRmCgb1
fBVPdRuJ42ZzPFMrN8bpTEEk+rz5Ajr0mYSE/XR5wIndWzDgnT6YOHUK3hnUBzsLDmLpZ6/iJ0++
hKlLV2LamLb48R+ewsSFm7F+xkD87q3BJr+HMKLts3j45eFYNH8snn/sBazefRrn87ejS8e2+Hji
F3j+Nz/E8x/ORWrITPRp1xnTJ32JXm+Px15OvDOdxv0MQNoZ5q7SdLiXUVZ+AfsSo7Fi7ly0e+qn
aDVhm1l2FO/36YWAgivGrO7GwJ5dkWBMw+XElXijy0SY3UbK4g/wwZQAnM5ajy6th+I4N3lTITMH
o/vEAPt50+dd8fG8cPvZs7P3heclAJ79lhvTQ8O24bN+GPj5FjvSVFmSj4k9+2LIkC8x+u1OaP3O
JBy9egN52xaj95sDMGXKJGM6WmPilj24fjgabbt3RurJUmwe0w39BozApPf6Y/TsbSjjqNOtelE3
7jYA15G1aQJ+/4un8d7gwRg8qBce/c+nMT28yPwmz2DR2H7oPWwaxgzthJFrwnHjbB66vdMWYfmn
sXpUe/z0iXewcvNC9G77InqNWYOLvDzklWZdkAEQbqNJGYCqa788t7yIiLUT0OIPj+LDGZE4kr0a
T/3nbzFm/ipMG9oZL7X9AkePpuKtt02jdfQYvmj7e7ToNRErl03Gi79ugXVJiRjVviWWJXLI0DQO
18zZ9I7paDtsgvnOoU0Oh16yBmDnytlYEhCHVWM64fv/8ThW7MzAutFDMGBurGmJM9Hj2WexfnfV
eUrs9I/x1rAlCF81Ct3em23DLmUuQ6eu7yP/niMAPKO+jFUju+D1PmMxfVQP/OgnTyHuzA0UBX+J
du1HwqwOHAtDj849sNusO63H65iwfh9DsWNqTwz8OhgnMleg5QtdsecyQ69hZq+3MGhhCq7tC8Yr
rw/GfhO6Z9XH6PbRHFy+WGg6/pfRfehU7EoqwrmL5Sir5pp9dQZgy6KZWBuSgPlDWuIHP38Bm6Oy
sGjo+/h4VSYqz8XirWdewrZC5sXk8YtBeHvsWmxf8BHeGbzchp2Om43O7w7FQTsCUHUJgp3TtfO5
mDOiBx7/3evYmHUUodN64LdPd8Oy5cvR65Un8dH8TBSZdTuMnGq3czJ2Pt4c/Jn9fGn3erTs3QfH
zclqzLRP0PqjtTZ8Vr+W+Gp7IYq3jcELHUbZznf24PYYsTkTRxKX4uVnXsHUBQHYXXQW5eb489hU
awD2B6DHS52QxupzqQizvx6F+TOnolv3Ucgp3IdBnR7Ba58Hmqp1ED3eeAULUs7gdMY8vPrC60g6
C5yLWIAX243DObN6+Ize6Dp6Jc7nbUfrN7oh4XwFLh8tQqFxRSEzPrg1B2D5yHYYOr/2BsByiaNg
Zdg4ZgAGfVE1WpO0ZBBadRpnzq2pgxjQojMWR8fh0w7P4+vgYza0OGAqWnT+EocOJaBTj85IO3Ue
az99G692HIC1wak4eqas9pM0fXC3AahE6urP0abDcMTl5iI3Kxx9W3TAlNADuHI0GC/85BcYNn0l
5o55F8+8PBTFx/PR891Wpq5V4lzkArzc5lOcNPmvSF2JJ5/vicwL11DRAPmUARBuo0kZAE56O5QR
jCkzq86KzqfNwAuvDEBc8mo8/+NHMHVNCII3rcXqrYk4dzgFXXt1Q9bpUxjX+hG0HTAVoTtDsHjR
RuTvS0T/N9pg1R624BU4db4cqRvG4bX3PzN5vIJTZ0uqrp/euIKoDQuxYEsuzu5ehzbt++KgOUta
P7wf+s9PMD1VDno89ThWJrGBBXZOGYiuI5abTs40rv2m2zB24G26DcFB0+NcLatqRLwNQFnFDVw/
EYt+A4dh8cr1WL95Dd59+RmM25hjOqxxeL7tUNtZnEtfifYdeqGwtASjOzyDzwI4JAos/bgdBs+N
wrmcNXj9ybbIYGRjkr58tz2GLMvAlbwtaN1xDE6Y0LSVw9F9xDxzVngFhwr3IjxgFp5/5lVM27UX
13n926vRI3cbABqWcuxYOQ8rQvfjaPwitO4yBGdMw71oUE8MW7PbJJ+Mzk88jYA9NGzmDHbse+j1
+XoETuuN9h8ttmF7NnyG9r1G4ZQ5Qb5SVobKaxewa9VcrAktsss3fNoeb49bh22z+uCx595FwM5Q
rFm2BJG5x5Gy8VO8PniCqROVSNs8Hq/2+xiny67jYPxStOzVF6evA2FfDcc79kz8BqZ90AZfhRSi
4kQy3u/WAe8NHYoRX07D/tIylJw5hfzsRMwf3ROPvznYGKxruFZe5sMAVOA6h6fN2emzjz2Jt3r2
QZ9ubfFa5z6ITU9D3x4d0H/0Ukyb2BOv9RqKQ+VXEDCjJ15s+zYWrJiFt195BosisxA28yP84Ymu
iMrZh9mDnsHvX+uDvafLELxgMF7r8g4+NUbpQPEBTOjXAk+1GYHdBXswotMTeGPAZJy4fAOVlXd3
+p7cZQBo2Ew9DxjbH4Om7LRlm7z8Q7ze+hPYq+bX8vBui45YmZiCz9o9jS83Fts4OevH4dXuU3Dq
RBq69OqClMOmTI4dQVpcIN5582X0+DIQZdevV2sca8rdBuAGMtZ9id4fLDK1jDqDCe/0xtdRR1Bh
DMDz//FLjFuyFdu3bMCKDeE4dzIfvfq0ReiBGzi1cyZe7jzK1H7gQsQsPPHqAORdNMdPBkCIWtO0
DMDVSpzdtwvvdnwOvYeOwKDeb+Hz5dEou3AIX48cYM4sx2Hm3PlILDiMgtAZ+Okvf4qZ4fuQuX0+
3nqnH776ajLWbYvE2UvnsXPhcLzYoQNGfDwFAdEHcWjPFrz+1FN4f+Qm5J4stdeKr50vwqdvvYwX
+s3CeXNqyssNlefy0Pfpn+KnLw3HEXOWGbtwJFq/0gWjhg9By3f7Y3PeaVwujkaPjs+i99iJ+OqL
D/G7Xz6KZXGHUMnbmLwMACftXSkvx5QuL+JnT7yJXLZcpqse/MqP8cM/9ERGbho+6fMqOpv9nTZz
LJ74+S8xLWwvdm/9Gi+9+QpGLVqMIW+9gD+2/gD7zpZi9Yh38GbbARj5fj+0GjIOe06WI2neB/jR
j19CSG4xFg9+Ev/+hw6IjAnDBz3fxsRJn+K1lt2wJpn58337nrcB4CTAipJcDGnzIloOXYpyzj0w
ub56KgNdH/kxftt2Ak7euI5dM4ag1WvdMerjD/FG7w+wo6gUF/J3oHO7Z9BvwhRMGt0Pv/vN09iY
fsLeall54yoSTafzepvXMHLUUPTs3Q+BZtmpglD069UTn02ajEUrNmLvqQs4lbEaLz/+DIZ+GYE9
GVvQ7vmn8eHoLVg6pT9++OOHsTQqBVPeeha/aD0ehYVp6PD7H+LZwQuxNykI77Z6Db0HDMTQ4Z9h
c2oudi6fjB69PsanH/ZE6/4TUGwO9lWfBqAKO3vemLmzxlyeOn3WThjlvLmKy6YzO1MV//Klqtvn
buAazpecwaUr11F5tdwaS3vcTafJGfq8w4FlXmaMDGvYuTOnUXLhMm5UctKkKe8LN+OZjpHfL1+5
s7P3hbcBYD7KzFl8m0d/gl+89hH2lVTg8qkcjO36Jjr3Mr+jd99BlwnzcbbCmLKgr9H+xfYYNWo4
2nbviUWJRSje+TV+8vAvsTAkFtM+6Y+hY75A5zbtMHxpOK7Yuy9u15W64GkAqiYBlmDxgFb45W/e
RMyRMlw+EoPXfv4wWg5egQsVJ7Fw/GB0f38Ups+ag6jdxTiYsAK/fPg/MW5LAUqNGf35w4+h79BP
0LPtm5i0KckcD9+XtmqLDIBwG03KAPBHyNvwTh7JR0RYKOISskzje9VOaLt86TTiIsIQk7rbnFFX
4ERxnn2jVe7+E6ZZrUThnmSEhkbgkGmgr/DFE+XnsTshCmHRWSg5f9k0nBdRmJGClJyD9lZD3urG
2wCzkuIQn5lnGmXTEJn1LpYcQ1ZKEpKTsnHShN2oLEdeeqzZdrgppBI70e3ylQqcKt6DiMhYFB43
Z5eZScgpPmGfJOZtAOx+mTLJSkgy+U3G4TMmzKSRnZ6MpMR0HC0xncaJQkSFR5oDcBJFe1KQufeI
NRMFaTGISM3B0eOHkJ6SgqOlV3D9cglSYsIRGp6Ag6XldiJecV4WkpNTsP/Qcewz5ZCcko5Dx09j
3+44m+/dhcdx1ec91lV4G4Cq2wCPIyMhDgnZe+3lA5bN+TNHkGH2ISUlB6cvleNGxSXsSYkyaUQi
/9g50xBfMZ3TVZwozER4VAL2nziJ3Iwk5B06ZcuGnWM5r6XnJJl1wrAn/xCussO7VonTRwoQHhqK
PfsPG3N22ZimC9hryig1z5wVmu3u352GtD2mMyjMtfuaX7TflHsKktLzcPToAXPMUpG7by9WTfoQ
PYbNtK8L3b7kQzzcvivSi04hIz4S4ZGJOFZ6yV6qYV6qMwC8zZQvjLmFWc5bAa+ZfHISHZ9R4YQ5
cXn7H5fzr11uwniL3a11uG0n7s3b/W4tY7yb6Xjmozq8DQANxLkTB+zvISk5A0fPVt2lUnb2MKIj
QhEWk4nTvLPDmJ5rxngU5/C3Eor0fSfML+caju3PMfU9CQUHTuBo0W6Eh4UhLq0Al0xa9j79m+nU
Fe8RgLKyEuzNTDP1PwkHTpp24PRhpJr0U9LyUFpuyuVKKZKiwxGZkI4LxqifObzXxE1GwbHzKNwy
A8+2+AjByQlIytiHy6YM62tQHGQAhNtocgaADQQ7WD6fnY1jmTkTY3hZ2eWqR6eaxtKeUV2+auPw
9iauw9vIrpuzlcumkbPbMWfe1yqv22Hvqgbikum8TXNnOhfnB2/vv2cce3vfzTDT+dkwrud8N42M
fV78FWMcbsZjA3vd5I9mg+lU5aOqEfE0AE5aTJv5q3rwyc00rvNBKKZTNAaHy67SuJi0Knj7lU2X
+0vDYc6eWRZc92Y52Pg395UPVXH2nZMNma9y87mqTK6bTuneD87xNgAWkz73i0bkdpgpUx4DY4Ls
9sz3qv0wefa4P/vKHWVTaa//396G2a+b+arwyJdzzHkHR1VclhGPF7drjq8pFx67qnhmm2bbDOOx
4yjLteu8FHEdKZtmYsCbb2PYsGHo984gzFwZajoRs+xGVT55NwK3z2NTnQFo6tx9CcBgysDWi1v1
nb8RYxhtWNUzKqriVpWlrRemPFn+zm+JD91yjoPndurLnQaAXMIVmwdTZ/n7NvWo6rHIVfWBD8ty
HpNsv5eb/eDAWeVZzBzUAr/4XTvEHeVlj/pfnvBEBkC4jSZjAJrLc/PvB/fDMQDNZZ/Y+LGR9rWs
OVFlLkzneKQIeXl52Lv/uDEj16s6GdPpeMblsWEdbM4GwHN/mjKOufS1rOaUGUN+DsePHcaRw0dw
+uzt1yM3FNyeYwDYNgnRFPDuNxuSRjUAbHxPnjxpGwhnZ3mmwGXOX19h/OsUTE3CvLdR0zD+rWkY
/zrb4H45jR6/VxevLmH8W5sw4hnGv95h/M78+opH7hfmbKOmYcQzjH9rE0aqDTN/yy5XvaecoyB8
OJHnNpx4/MvjxDA+irdqaP5a1ZnxzSH8moQ5f2sTVte0nDBeMqDJ9Nx/z310wm6VSS3D+LemYfzL
8HuF8W2A/O7gHa8mYfx7/vwF00mXG0yHbX5bVWG+80k8w/j3fmH8zM7fOSlhuOdfX2GsQ+SbDHP+
1jSM6/sKq0laNQ3jX19h/OsrjHF9hXlvoz5h/OsrjH99hTGurzDvbdQnjH99hfFvbcKcetrQNJoB
4A6xYeDOsYD4wztw4AD279+P48ePY+/evTh27JgNKy4uvhXGv/zOcC53wrjewYMHcfToUezbt8++
6rWoqAiHDx++I6ywsBBHjhyx8DPDuIxxGJfreIZxmw2RJ4Y5eTp06NBdeWLa3nnid1954vreeWI6
tcmTE1aTPDlhnnnyLjuu7+TTM0+e+eRf5od4hnnniWEPIk8FBQW2sWc9ZBzWS26Hf/md5pR10wnj
+jRKrLNMk3WY6ThnjZ5hTkfCzwzjMq7H9bkdhnG7DGP6zI+TPtNk2vfKE/fVs+w8y6m6smMeiHc5
cftOOXmWneexY55rW++dsHvliWl754nfGe6dT195YjrfdJ749155ulcdc9L3Ve+ZT888McxXnhjm
5Mkznw2RJ19l550nrlebPBHvPDHu/fLEsOrydK/j6Z0nz3zWNE9OGPfTO09Mp7Z5YpiTJ++yYz6c
svPME79754lhbEd4Msk2oKFpVAPAxpBnNCy49evXIzg4GKtWrcLu3bsxc+ZMpKWlISAgABs2bEBG
RgZmzJiBzMxMrFu3DoGBgXY54zH+ypUr7fqcCDVr1iw7CWzp0qV2slNcXBzmzp2LPXv2YMGCBYiM
jLTwM8O4jHEYd8mSJXZdboPb4ja5bc88MW3mgXlhnpg35pF55XKGMf7q1auxbdu2O/K0bNky7Nq1
C/Hx8ZgzZ45Nf9GiRYiIiEBUVBTmz59vw+bNm4fYWE4+vJ2n2bNnIzExESEhIVixYsWtPKWkpGDL
li1Yu3YtsrKybuVp48aN2Lx5M9LT020Yl61ZswZbt25FcnKyXZfbXb58OXbs2GHzxDScPIWHhyM6
OvqOPMXExNjwxYsX2zDGT0hIwPbt2+12uD0nT0FBQXfkifnYtGmTxTNPjMO4XMc5ntw/bpP76+SJ
aTJt5oF5YRjzxjyy/JhnhrFcuS87d+68I0/cZ+47y8DJE48Xy4n1j5+nT59u88Y4PJ7ME8MYn9ti
feD+OvlkmjyezBPTZRjzxvwwr6xjDOM+8HiynHk8Gcb0uX/ME/eX9YlpMU0eN9Yx5sXJE8vJyRPX
5Taqq/fMk1PvGbZw4cJa1XvWsfrWe5a3Z73n8ahpvQ8LC7ujjtW23nvXsdrWex5PJ0/8W9t671nH
mI971fvU1NRb9am6es/yYLnUtN6zvJ3jyX3m8eBx8cwT6xjLyrttZZl65on1gGXPesE8cbusL6w3
zJNn28pjyTrG+sYwp46xPrJeOnly2lanvWf6rEOsS/wtOnniX3536phnnu5X75m+U++ZL+aP8WpT
71kOLI/GqPeMz22x83dGrRqaRjcAHM6kk+KP0xFNgfOXw7POZ8+/zrAt5RnG4VLKCeP3+oT5Sr++
eapvPhsiT77Capq+r7Ca5olh1aXvK6ym6fsKqy5957Pz11cY9SDy5CuMf+ubJ19h/F7TsIbIk6+w
mqbvK6w554lh1aXvK6ym6fsKqy5957Pz11cY9SDy5CuMf+ubJ19h/F7TsIbIk6+wmqbvhFE886dJ
8WsDwElNHAKlI2VBeE94EkIIIdwETQMvBXBUg/OZ/NYAsNPPzc21wzKUr8IQQggh3AIn/XIeES8F
sL/0WwPg3NLE6yUaARBCCOF2OALASYCcG8CHsPmtAaDT4UxITojxNQLAOQKERkG4Ax5v73rgTUPX
iZqkKfwbtTXuwznmvuqDg7Pc1/p1oSZp8mSYd/xwMig7f781ACwI3ibB2bicAOFZCFxG9+PcniH8
H95GwxGhe/1AuIw/Dl/r14WapCn8HzbOvJ2Lt2IJ/4e/fbYjvuqCA9sEtg3ebUZdYVtzvzQJ+0L2
e7yDwO8nAbJAePuMr0sALARnroDwf/iD44+TPzqODnnXB4axPvBeW8+H49SH+6Up/B/HVPL+a34W
7oDtiHPMvesE2wLnOSD87qvtqC3c5r3SdOAlAN4ez1sS/XoSIAuEj23l/ZCelwBYONxxuiYWhnMr
hfBvKD6WlT86X50xw+iiOTJE+dpGbaGYJh+64StN4Q7Y1rDd4f3evE+c9/kL/4T33POZCDzeznH3
rg/ssHkCys6X8tV21BbKs655p+nAdoiTADk3jv2l3xoADrvxzIuzHVngTgGwcPhsbnYE6vzdA4+1
c9yrMwD88bDeNFS9oJimDIC7YZ1ju8MOgvdf88E/wj/hA4P44B8eb+e4e9cHxwBwCJ7y1XbUFrZZ
3Pb9DADFpwnyYUB+PwmQsx051EE5BSAD4E5kAERj4XQE7BjYSThPThT+B5+4x8vOTdUAMG0+H4d5
ZF/p13MA2PDyB8cCcgpABsCdyACIxkIGwD00qAGoelDgLfmMc5OaGgDGZb74aGFenvRrA8CZtxx2
4047BSAD4E5kAERjIQPgHhrSAAA3cP5wIfIKinC+wsb0GY/UxgDwEfl8BwHbJr++BJCfn29fkEA5
BSAD4E5kAERjIQPgHhrGAFSd+ucFz0bXNzpgYM9OaNFrGArPmvBq2qaaGgC2Q5wbx4mKfn0JgA05
Zzvm5OTYAncKQAbAncgAiMZCBsA9NJQBYBt0ND8Te45fBS4l4aVHf4fNedeqiV9zA0BxEiDfvuj3
kwD5Xna+9IByCkAGwJ3IAIjGQgbAPTTsJYAqJWyYgk8WBOKSHQDwHbemBoDtEPtHvnrYr0cAuLN8
MALfbc0CcgpABsCdyACIxkIGwD00tAE4tHsjPvh8Ok7YqwK+45GaGgDGZZzNmzf7/yRAGQDh0CAG
wIRzYg6XO5j/fMc1UDIAQgbAPTSkAWD7sj89HCEpRfeMRxiX25YB0CUA4QMe6/obAFuVzPKbf2/+
7zOugZIBEDIA7qGhRwB2THgbb/b8CuVVEe+K41BTA8B2yBWXANiQaxKgcKivAaDOpK/Ae31HInjD
HAz7dDoC5n+KD77YCLvUx7U5SgZAyAC4h4Y0AKTkSCEKio6h0scyT2pqACjXTALUbYDCob4GwK5/
NAvbtoVjb04KdkUkIS81AjticuylgRte8QklAyBkANxDQxsAR76WeVJTA8B2yBW3AXJn9SAg4VBf
A2C3cfPH6C1fcQklAyBkANxDQxuAmlJTA8C4fBDQ+vXrbdvk1waADS9/cNxppwBkANxJQxiA2kLJ
AAgZAPfQHAwA87V161b/nwSolwEJBxkA0VjIALiHxjIAFNPiK819penAtNk/pqam2r7SrycB6nXA
wkEGQDQWMgDuoSYGgG0B+yi2C0470RDiW/542fteBoByzeuA8/LyMH/+fLvTTgHIALiTmhoAfm5I
A1BeXl5tmsIdyAC4h5oYAMLwEydOIDc318K+qq442+DZP09gqkuTsB3i3XHZ2dm2v/TrOQAnT560
B0MjAKImBoDL+INoSLFOcrjPsw4KdyED4B5qYwAILwOwzakv3I6zXe+0PGE7uH//fntpnCcnXNe7
D20IGt0AsCB4Rrdjxw7bATgFwHAZAPdxPwPAesG6wxmyHEajeawv3A63x8k29/thCv9FBsA91NQA
OHB5Q+Fr+96wLeQJyc6dO2+ZD1/9aH1pdAPARr6wsBBr1661Z2JOAbCgZADcx/0MAGE46w8dMutO
UVFRneH6xcXF9gdWXXrCHcgAuIfaGoAHDUcieXKSmJh4a/TAVz9aXxrdADiTAHmtQ5cARE0MAOGy
hpQ6f+GfBiACUdGxtiOJjYlCZISvOPXAbC8qpmr7MdGRiPAVpwnS1A0A20HeHTdv3jz/ngTITp8T
I+bOnWsbYqcAZADcSU0MAOsGjSPrUWlpab3hdpzteqcl3ENTNwARERGIjk1AekYGUhLjTVhEVXhk
FBKTUpAQG23i3LkOO/+dQeuwYOFiBIaEIjramACP5Ywfm5CMjMxMJMXH2DQIwzIzM5AQx21WpeOL
6JhobA9ch8VLl2HbLpO/qDu331Rp6gaAbR8nAfLuOLZPfmsAuLO8LSI9PV0jAOK+BoD1wpmxz2tk
vH5fX3ibD6HTbmoNgXhwNHUDEBsfj4BlU/F2164YPH42wmISbYceFxWKiWM/wvSVQUiMi7lznbgk
7Fg9Fb/90f9Bl88WIyU1AVG3lkchPj4SS74ajs6d3sKUZWb9hDjEJyZg3dxx6NS5EyYt3GTMQJzH
Op5EmWWJCFo2Gr/8wb/ho1lBSE2M9RGv6dEcRgB4iZIvyfP7SYCcgMUnHnGnnQJguAyA+7ifAWAY
Xx9Nd9yQciYDVjfqIPyfpm4AYszZf2jg13jioYfQ78t1pvM2HbM5406ICcfIwd0xdsFmpKWmIDUl
CfFx8UhKTkaiiZOSGIM+LX+HTsPnIC0rHSnJSYi9ORIQG5+AbUvH4aG/+q/44YvvYGdSNjJiAtDp
0f+Nb/3jo5gVGI6E+FhjChKRaIxBklk3wZgMjgrExMYjOSkVWelh6NvyKQz+eiPSkhKRkJhkLwkk
mfi+jUPj0xzmALCdYz3060mALHhO5tq0aZMMgKiRAXDuo62uXjDcl6qLT9Fl60FA7qapG4CoqDhz
tr8KXZ55Gl+uiERyfJS9JLBz9XS07dwVc9duw/yx/dGidX+MGf0B3njlNYxasAZpydF497Xf4t0J
y7Bp9nC88OKr9mw/Nj4GUTGmkw5ehr4dO+C3v3sEY1aGYv3Xg/HKs0/jhdc/RGBSMpLjojFvxBC0
bfUmWrR8C1+v2IbklGQEr52Jrm+2RNv27fCrx36LEfO2IS1qEz4f3BVtW7dEm14fIyg2DrFN8LJA
czAAfP5AbGys7fz91gCwIedfvvVIlwBETQzAvZ4EeD95x3fWYZoyAO6mORiA2Ijl6PTkE/h8aRiS
4qMRG5eIlPBAtHj+l+g3PRBJq8bi37/3GEYs2IAp77XEE6/3RbQ5K+/9xiPoPHgiZnz+CYaMn4zg
UM4PiLIGIGzzbPTp9yk+fb8jnm71Ft7r2RufjxyKZ196G4HpGVj9eV+88HR3LNkYgtmDe+A3T3RH
YNgWvPvyY+j2ySJsWz8bLxoDMGrpdqwa0xG//MWLmDt/Kb4YPgVBUdGIiZQBqC1s23iH0sKFC/37
EoAmAQpP6mMAKF4a4MMzHnvsMfzmN7+5g3fffddum/JeTwZANAcDEBe5Am899SQmrohCRmoiwrYH
YUfINrzb8Wl8OGcbsrfMwHNPd8a61N0ImNYfLTrSAKRhUOuf4Yc//g/89snO2Bi/B+n2Wn2ENQDh
gXPwTq/RCNm6AL/+h7/EswNmI3zZRDz1Qi/szE7EyHa/R9sBs5CRV4g90avR8vFWGDdjLFr88TWs
CN+DvIww9G/3LD6eE4S0sE3o37UFXnq5JYZOX4GI6FiTb9/705hoEmAVGgEQTYq6GgCKc0lef/11
dO/eHX/yJ3/CSnwHDz30kK17lGealAyAaOoGIDo6HpHb5+KVn/8MH05ehx2bluOdtk9h2JQl6Pzc
j9Hu0yWIXTUev/jpC5gXloBln3XET//YCkE7Q9HxyR+ixQcT8UWfdnikRVssCQ5FTHSMnVcQvOIL
tHi9FzaFhmPRjClYvjUKW6cNwg9/9jyWRaea7XTFE4+1x9KNOzD3s5747Us9sGnLCrz++MPoNXkx
AtdNw1M/4byEFVi/aBa+nrcS04d3wXd//CwW7YhHAm8/9LE/jYlGAKpodAPAguccgM2bN9uddgpA
BuBOHHmG3b7S7T/lUxcDQNE8jh8/Hr/73e8wevRo/M3f/I3t9P/sz/4MjzzyCF5++WX07NnTbpvy
TJOSARBN2wBEIS4hAZsWfYHWL7yAFi3fRJtWb+Cllh0wbdYsdH7tObz5/hjMmzgUL7zwGj5fsA5T
hnXAsy+1waSpU9H1jefxxsCvELJhDt54+nF0+3gyQmNSkJwYhflj3ze/jzaYujoEWZkZSE+OwoyR
vfHc8y9i3LwAJCeH4ouBPfCGSfP1ju9h6satSE1OwprZo41xaIE+YyZi8Ntt0H3wOCycNhatW7RE
mzadMOyrxYiKjW2SEwGbyxyAmJgY/54DwIJ3010AvlX9/jk6tDcTOQdO4fqN28vKzx5FTk4uSsqu
3bFOc6auBoDDZX379rVn/08//bTt/P/+7/8eH330kQ3nyMCwYcNsnaM806RkAETTNgCk6qE+yabj
4gz7hIRE0zknIy42BknJqUhKiEN0bLzp2ExYdBRi45OQaj7Hmk6Ey5MTTGccE2c7Ps7k5/b4HAA7
m//mnQF8kI8Ni0s066bY7URGxSDBlEmiMSCc3Z9g0mO82HiTvvkeHxeHxOQUJMbHmm3FmfLjHQOG
am8fbHyagwHgXUm828Kv7wJgQ+6O5wDcsPuxLzoAoz/7DJ9ZRmL+okCUXq5adkd8851hcTtWYGfO
SUTP7oGft/8AZypsf2XP/kv2bcdLv/wxpu48bMPuWL+Zwn2uiwHgnQF/93d/h5///Ofo0KED3nrr
LUyYMAHPPvusHQX4i7/4C2sKuIzP/Pcsb0oGQDR9AyAaiuZwCcAVzwFgp++WSYDU2axVeOInP8dX
m5JMQ7MFXX79E3y4IM4us7oZz9G25eOwLP4IsH8bWr/XH4erRrBvad7g9pi6da/97CvN5kZdDQDD
aAB+8IMf4MUXX8SAAQPspYC//du/xYgRIyyDBg3CX/7lXyI4ONiu46RJyQAIGQD3oEmAVTSJEQC3
vAvAqjIXH73xBlbHH8Kh3DQMe3sA1iYcQe722eg5chHO37iG4GkfYMjXAbh0ah/GfjYMgdnncSVn
PVq+9z5OVgJXTmbi8yHvY+DgoXih5XOYHX7AbtpXms2N+hiA73znO/jVr36FHj16YOzYsfaa/z/9
0z9h6tSpePPNNzFx4kT89V//tXXVlJMmJQMgZADcQ3MYAXDFuwDY4HKoY926dbYhdgrAbw3AtTz0
++Nv0Lb3YAzu3R3d3h6HvSXAxd1r8NQbPbH3+g3kbxqOZ18fhHMVlzF+wHMYusmc4e8LQKu+H6Lk
2kVM69sKQ2bHYP/+NPR+8zlM3V5sN+0rzeZGXQ0ALwHwmj9HAJ5//nk71D9z5kz88z//M1544QU7
N+Cpp57C97//feTl5dl1nDQpGQAhA+AemsMcAD6dNCEhwXb+fmsAWPBs0Ldv324bdKcA/NYAXM3C
0LadkWQ6fWphvzbo9mUkcC4eb/X6COzKL+duQO/3h+O8+bxkwlsYH7IfKAzEm4OG48RR0+m/9hZS
S+3qWDiiE2bsKLSffaXZ3KiPAXBGAHr16mVHAcaNG4chQ4bge9/7Hr797W/bSwTr16+38T3TpGQA
hAyAe2jqBoDtEt91snPnTv+eBMidpdPhwXDDJYDLh7aj5e8fw8qkYzhWtBu9X34RAxam4kZpPF59
7mVsyjuAmPlv44lXeuJEWTkm930SPWZFoyRtCZ7o0AOHTh7CB+2fxuigVBw/kobuTz+MkaszUXnD
3QaAYf/wD//AinsHjz/+OAYOHIiRI0faOwJoFCjPNCkZACED4B6awyUA3h7Ph5r59SRANrgckp0/
f75tiJ0C8D8DUDWrPzd4ATq1b4+e7/VH/z59MXjCFpyuML135Xmsnj4A3Qd9hsDAFRjWvx92xCbj
iwHt8daoeQhaPhEdOvdARGEZzmRvRZ/eb2P8mi2YP24QBn2xGGfNNvyhnLgPDWkACB8K9P/+3/+z
twFu3LjRxvdMk5IBEDIA7qG5TALk3Dj2l35rANiQcxIgZzv6+wgA8S2zf77fX+NDviPe8JFWc6Q+
BuC///f/flfn7wnnBfBhQRxSo5w0KRkAIQPgHpq6AaD27t2LOXPm+P8kQM52XLVqld1ppwD81QCI
e1NXA8Chfd7iZ6pmtfCJgJMnT0ZcXNVtl06alAyAkAFwD81hEiCfj8M8sq/06zkAbHh5QNgYOwUg
A+BO6moAWKd4ds/r/Bzq92bw4MFYsGCBfcc2f1iUkyYlAyBkANxDUzcAbJfYHm3bts0+uMyvDQAf
ecjbHdxwCUDcm7oYAGe92sgzTUoGQMgAuIfmYAD4iHzeHs+2ya8vAeTn59u3HlFOAcgAuJOaGgB+
9q4X/H4/POM7UPdKU7gDGQD30NQNANshzo3jW3L9+hIAz+Q42zEnJ0cjAMIe6/sZAA7js+40pHgr
Kt++JQPgXmQA3ENTNwAUJwHOnj3b/ycBFhQU3Ho8q1MAMgDu5H4GgPWCPwhO+mO94Y+kIXBGFYR7
kQFwD81hBID9I1+S59cjANxZntFFR0fbDsApABkAd3I/A+DUDZoADpGxDvFvXeH6HIHiSFRTawTE
g0UGwD00hzkAPCkJCAjw/0mANAAxMTF2p50C4AGRAXAfNTEAhPWDl4waAqbT1BoA8eCRAXAPzcEA
cJRz8+bN/m0A2PhyKHfJkiW6BCBqPALAM3aOAjQEzja90xHuQgbAPTSXSYAZGRm2r9QkQB+dhfA/
7mcAWC9KS0utO2YcDpPVB26HL93g87abWiMgHiwyAO5BkwCraBIjALwNcNGiRXannQLgAZEBcB/3
MgCsE3yMLztuxvG1fm1hejSgTM9JwzNN4R5kANxDcxkB8PvbALmzfBBQfHy8bZCdAuABkQFwH/cy
ABwh4lP8vJ/kVx+YHsX0eK1NBsC9yAC4h+YwB4APAuLry9ke+rUB4BPYIiIi7E47BSAD4E5qYgBY
byhf69cFSgZAOHWO74rYsWMHdu3aJfyU7du326fP8nhzRLEpGgDWx61bt/r/JEC+DIjvPaacApAB
cCcNZQA85Wu5J5QMgLvhcWdHwDrAh0KxPvDERPgnPL5sS3i8+bmp/e6dto6jFH59CYCTAHmtwy2v
Axb3pj4GgOs64g+GQ7ncjqe81yEU48kAuBced7ZJxcXF1gCwjrGuCf+Ex5dP/ty/f79tK5ra757i
JEBXvA44Ly8P8+fPtzvtFIAMgDupqwFwOn/O6Kd47ey//bf/hh49etjvXIc/JMpzPULJAAjWN7ZN
vPYq/B/eAcR+yLudaQowT5ycnJ2dbeuk3xoA7iwdd3JyskYARJ0MgNP5r1q1Cj/96U/xzjvv4Oc/
/zkrMf7qr/4KvXr1wm9/+1u899579nY/7/pEyQAIwjrnWTeEf9MUO3/CNoqjUWzT2B76rQFgg8tr
b5x0wwPiFIAMgDupjwGYOnWq7fQdHnroIfz1X//1re8vvfSSz1EASgZACNFUYLvE0Uz2i7z12a8v
ARQWFmLt2rW2IXYKQAbAndTFADhs27YNf/EXf4F/+qd/wvLly+3tpZwH8MQTT1gDMGjQILsN73Up
GQAhRFOB7RRHxhMTE23n77cGwJkEyGsd3GmnAGQA3EltDQDFdT755BP84z/+o+3oP/roIxvuiPf9
fvvb38a3vvUtOwrAbVNOmpQMgBCiqcA2jXfHzZs3z78nAbJRz83NtTtKOQUgA+BO6moA2rVrZzt/
8uWXX9pwR5mZmfjOd75jl/3rv/6rffcE5aRJyQAIIZoKbPs4CZB3x7G/9FsDwJ1lo56WlqYRAFFr
A8D4hPNIJkyYgD/90z/Fz372M+ueKbrnvn372s6/VatW9tGarFuedYqSARBCNBXYPhUVFWHZsmV2
4rLfGgA2uLwdg9dvudNOAcgAuBMe69oYAAdq06ZN1gCY6ol/+Zd/Qfv27fHII4/Y74R3AzjyXlcG
QAjRVGBbx9fk85HUfj0JkA0uH8bAxlsGQNTFAHAd6vPPP8ef/dmf4fvf/z7+/M///FbH/93vftd+
f/rpp+0PifJMk5IBEEI0FdjW8UFFsbGxts3yWwPASYD8y6FZ7rRTADIA7qQuBsBZj/WKz87mpNLJ
kyfbzv/ZZ5+1rw/myz+8r/07UDIAQoimAtsz3h23YMECd0wCnDt3rm2InQKQAXAndTUAxFN80tek
SZPsS6Y85b2Os54MgBCiqcC2zxWTAJ0RAM7U1giAqI8B8MRTvpZ7QskACCGaCs4IwKJFi/x/EiAf
ebh582a7004ByAC4k4YyAKSm9YaSARBCNBXY1nEOQExMjH/PAWCDy+HaoKCgag0A5avhFv4H6wAd
L2/rq84A8Bp/Q9YJSgZACNFUYFvHJ5nyIWZ+fRcALwGwUc/IyLA77RQAG2JOfqA54GfJPeKkPT4H
29sAONfFnDf+NZS4Xd6KSuMhAyCEaGx4IsTnACxZssS/LwGw0/c1CZCwMebZHk0A3ZDwf9i583hz
9MdXZ0zDeOTIEXvG7mv9usDbUFnP1PkLIZoCzsmOKyYB+noXgGdBcDkbaeH/sPPnkJf32b8DO2nW
GRoFX+vXBedSlK/0hBDiQcMRAFe8C4ANPYc61q9ff8ccAE8Yh8uE/8Nr8jXpjBnP1/p1wZfxFEKI
xoJtEt8GmJCQYDt/vzUAbOw54Wv79u22MfZVGEIIIYRb4AkORzl37drl35MAubN0OikpKToTE0II
4Xp4MszLkytWrPDvSYAc3s/Ly7vrdcBCCCGEG2G/yEmAnBvH/tJvDYAzCZCzHTUCIIRoTNjwsh0S
7qAm840Yx9e6daUmaXIEYO/evZgzZ47/TwLkbMdVq1ZpBEAI0WiwYWbbxNewCv+G19cJ+6F7dcjs
n3gNnrcL+9pObahpmoRGgc/HSU5OtvH9eg4A7+vm29o48cG7IIQQ4puGDXJJSYmdkMxnUPCsi9de
hX/C48snf/IBYDzuvjpkhnnGYSdcX9j33StNB/aF7BeDg4NtHpx1G5omYQD4zOPExETrerwLQggh
HgTs/J2nj/LV0RyCFf5Jfn6+7Yidx8376ozZH/HMnU8mbUgxTda1exkAXgJgPVy7dq2N77cGgEMs
PBgLFy60heOrMIQQ4puGHQHbo7i4OOzYscPegiX8E952znvsebzvZQA4ZM9LABTPyusLO3amdT8D
wHxxblxWVpbtK/3WAHASIGc75uTkaARACNFoOB1BUlISwsPD7YtYhH/CS8689ZzH+0EbAG77fgaA
4kjF7Nmz/X8SIHd02bJldqd9FYYQQnzTyAC4h6ZuANgvsn9MT0+3faVfzwFgIUdFRdkC8i4IIYR4
EMgAuIeGNAB36YbveKSmBoBxGScwMND/JwFyokVsbKzdae+CEEKIB4EMgHtoKANAndqzC+N6v4O+
vftg9OJtKKswHsB09L7i18YAcJLipk2b/NsAcKiDM2753mPKV2GwoBhPuIN7/TAcfK1XV2qSnvB/
ZADcQ4MYANOZs0PP3rEKs9dF40jGOvzh4V9gY06l7/iG2lwC4CTAjIwM21e6dhIgC4IOiIUh/B/W
BdaJ6n4cTjjrkK/16wJ/4Kxn3mkJdyED4B6+iUsAp9LWoMcHY7H/4g3zrX4jAJRrJgHyNsBFixbZ
nfYsBBYQ43IohC8M4pOR+Ff4L7wcxB8kH9ZR3Q+ET+VinIaqD/wx3u/BHML/kQFwDw1pANjdlx6N
x6jPRiH+JOP67vxJbUcAMjMzbV/p13MA2KDHx8fbAvIsBJ4JsqDYGUjuEesFjYD3WTm/86EcfEIW
f0gNJTpsmkz+lQlwLzIA7qFBDYBpi/Znbsea6Jx7xiM1NQCMywcBbdiwwb8fBMSdZYMeERFhd9op
ABaO88Sk+xWq8B/4A6Hh44/S2wDwB8mzftabhqwTFNPjpaZ7/SiFfyMD4B4a2gDELfwUg8euwBWO
B/iI41AbA8B8BQUF+f8kQF7r4HuPKacAWDjOYxpZaN4FKfwTHmvnuMsAiAeJ0xHIAPg/DW0AcnYs
x7xVYbhqPt/wEcehpgaAabOdS01NtX2lX08C5LUO79cBs3BkANyHDIBoLGQA3ENDGgDi6F6dP6mp
AaBcMwkwLy8P8+fPtzvtFAALRwbAfcgAiMZCBsA9NLQBqCk1NQBs+3hH1O7du21/6ddzAPg2QL73
WCMAQgZANBYyAO6hqRsAxisuLsaqVatse+i3BsA5ADt37rQF5BQAw2UA3IcMgGgsnI5ABsD/qY0B
YLtA+Wo7agvbN6bFu47u1dYwLtPmWylpQPz6EkBhYSHWrFljC9kpABaODID7kAEQjYUMgHuoiQFg
+8Nb1NnmNKTYmVeXpoPT1rEusq/0WwPgTALMzs62O+0UAAtHBsB9yACIxsJplGUA/J+aGACG8ZZk
nq3znnwO2zNufeC29u/fb8/q79XWsB3ct28f5s6d69+TANmocxLgvHnzbEPsFAALRwbAfcgAiMaC
dYDHXwbA/6mJASAMpwngcDwNQH1hWuzMvds2b7ickwB5dxz7S781ANxZNuppaWkaARANYACqeULg
PV7RSTE9GQB343QEMgD+T00NAOEyX+1GXblf50/YDhYVFWHZsmXWgPitAWDhclhk27ZtdqedAmC4
DID7qJcBMOveuFGOvPRkFB85jpz0NBw+egSZKWkoucJlXvFvQskACBkA91AbA9AYsK3j49CZT7+e
BMiC5zWRjRs3ygCI+hkAG3oMI7u2xJz1W/BR97ewevM6vNuuC9LO2DXuXsdAyQAIGYBIREVFGfiZ
f6PuWu4vNAcDwNvj4+LibOfvtwaAkwD5lw884E47BSAD4E7qZQAslSi7eAGXTb0qM86Z9esSJ9xU
+opbBSUDIPzeAERFIyEpGclJCYg232Pjk+zzV+JjYxAbF4/Y6ChEREQhNiYWkRHhiI6ORYwJ87mt
Zk5TNwBsBzkJcMGCBf4/CTA3N9fOdqScApABcCf1NwC+5wDc6xGdlAyA8GcDEGU6/4jQrVg0YwZm
zF6EkLBIbFo1F9OmfoWlawKxefNaBAWH4LN3n8OzPcdg88LP8cSzT2H8km1ISTCGwMc2mzNN3QCw
7XPFJEBnBIDvPdYIgKi/Aag9lAyA8GsDEBOHuMgN6Pir/8DDL/RFZGoyPm71a/zkty9h+ooADO3X
Eh/N3optMwbgN290QnhYKNq+9hsM+Ho9MpLjfG6zOdMcRgD4fJxFixb5/yRAPvIwICDA7rRTAAyX
AXAfMgCisfBnA8Dh/9TUaIx/twN6j5iNdUtm49NhXyIoIhVJO9dhyNAhWLQlDltmD8bjbbshIiIS
3do+jg+mb0B6kgzAg4ZtHecAREdH+/ccABY8H7KwZcsWGQAhAyAaDb83AClRxgC8jh///Ff43n8+
hq83RCErIxXRQcvx9B9/gvembcXO+R/dNAAR6NpGBqCxYFvHpxAyr35tAHgJgI16RkaG3WmnAGQA
3EljGQA+pEMGwN34uwFISY7A6G6t0GXQl/isdwv84fX+CE1MR3pCFN7r8jQGzNgiA9BEYDvI5wAs
WbLEvy8BsFHXJEDhcC8DwDrBesPnRnBZQ4k/LqZHM9rUGgLx4PB3A8ARgDHdW6PHJ0uQmbQFrR/7
JbqNXoLc3Sno0+4x9J22BWGLP8bj7bojJibGXgIYPHMzMmQAHjhs31wzCZDvAtBtgILcywA49YL1
paCgwD5COj8/v15wG7zd5n7P5hb+jz8bgOiYOMSErUWHX/8EDz/7NrYnpuKrvs/gf//bw/hgyCd4
9pHv4/cdhmDsgJb4918/jSlfT8GTv/x/eKXfRMTEJyLaz54J0BxGANguzZ8/379vA2Qjz6GO9evX
2512CoAHRAbAfdzPADh1gx12aWmpz7pVWzjE1tQaAPHg8WcDEGk68IiwnQjcuBEbNwVgV3gkdm3f
hs2b1pu2dyM2B2zGpoAt2BIYYMICELQ1CAGbNiMgKBjhkf73LIDmMAfg5MmTiI+Pt52/3xoAFjyH
dENCQmQARI0MAGH94PKGoKn9+EXj4NcGwBKF2Lg4xMXGIMp8j46JtU+ai+WDgGKrwmNsWKydfc64
sTHRPrbT/GkOBoAvIAoNDfXvRwFzZ+l0UlNTdQlA1NgACNHQ+L8BEA7N4RIAH5G/YsUK/58EqNcB
CwcZANFYyAC4h+YyCTA7O9v2l35rAJxJgJztqBEAIQMgGgsZAPfQHEYA9u7dizlz5vj/JEDOdly9
erVGAIQMgGg0ZADcQ3OYA8BnnvBlTewr/XoSIA8AJzuwA3AKQAbAncgAiMZCBsA9NHUDwLbwyJEj
CA4Otg8o8+tJgHzmcWJioi4BCBkA0WjIALiH5nAJgO/IWbt2rW0P/foSAB/IsnDhQl0CEDIAotGQ
AXAPzWESoPOAPPaXfj0JkLMdc3JyHtwIgMcr430ubxBuJ+L7XfQey29Uhd38cvszVYN999S9wurF
AykzGQDReMgAuIembgAoTgKcPXu2/08C5I4uW7bM7rRTAN+kAbh2pRwXeV3l4kVc87G8vjC/N25c
xs6VkzFu4Q5ctt+99qGyAhfNQS27dBHlVyurOlgTh7p+vdLs+0VcumiWX6m4cz0vuN3TOTsxcsQo
ROSduZn2DZzbG4kRn36BhP3nqsJ8rFtT7PrlJ7Bs+hjM2ZJe7+3dC25bBkA0BjIA7qE5jACwf0xP
T7d9pV/PAeATj6KiomwH4BTAN2MA2DkCpYXh6PDY7/H2+DW4aPvdm8s9znJNqMd3s97NT6Z7vvn3
Tjnb99Tu9Z/hkdaDceLmd7tNE495wNWT+Lr3s/jNsx2RdPCKWXQGw7u2xrj1uWZhBYIm9sFvfv8G
duRVvfnOkV3/5mdH187vQ4cnf4SPVmfeDAEqz+Wi7TO/xuch+2+GmCRsHu8eHbhbN8v7joQuY+MX
PfDcgDk3vxs55daAyACIxkIGwD00h0mAfENpYGCg/08CPHbsGGJjY+1OOwXwzRgAg+3UTmFc+1ex
ONLztbJVvd2pfdnIyt2Hc5Um/OoFFO4/gHOXTUd04RT2Fx9AWUUlLpw8jOJDp3Gp9Ciy9uSh9Jrp
uMw2qDMH85GRlYOTZytwIXM93hr4OQqOH0RuQRHKzHLPTvh45Gw89UpfHDafKwq3o8V//i889f4a
uyxv05foNnad/Vx2fL99XfLBM5fs98ulJ3DgwClTTpdQVHQA56+W4/PeL2HM5kyUmWX5eXtRUl6K
aSP74euQVOzLy8aBs1y3ah8rL5xEVmYWDpWU27DjB/fj6MlzKDlZhOz8IjDUKY9D+VnIyjblcfEG
crZ8he5jluDE4b0o2H8EfB/fHWXbAMgAiMZCBsA9NAcDwEfkb9q0ybaHfn0JgG9243uPKacAvlkD
cBJfvNUSSyJP2TSrOrsrSA6ej+mfjcaHbV9Dr693AheL0P2NF/BZQAEuHgjFS7/6JRYnlKA4bjZ+
8eMWGD1rPvq3ewndRy8Br9oURC1Er3d6Y3CfV/H2J8txJH0rWrfqgQUrZqHjS79H3/nbYXyF2Z+b
Z/Hn0tHx+Tew81AZUgMXY/zHH6J776E4ca0CG6Z8gbDC8ziStgNDOvTF0KEfoW2LXti6+yTO5G7B
cz97AYPnzcArnV7DuI0JmD7wDUyPPoSCwC/wbIvOSC08gRkfdUWfUTMwe0wvPNexBxJPVuLaiUyM
+WAAPho+DD1GfIz805WIXDgEP3m4K6YtnoWuLzyNT1ZEMXeIWT0e3Xv2Rd9Oz2DEvDjkbZuG1zoM
xsrln+Olp/+IyTs5WtGwJkAGQDQWMgDuoblMAszMzLR9pSYB+ugs6oQPA+DoaF4KYpN2I2B8L/z6
9Q9QYcLWTuiHoctT7PKp/drg69Dj5lMhur7cBWuLKnE9dx06dfoQpyrPY1zHV7Eg7pxZXoZjJ4/i
RPIavNa2Pw6YU+WDIePQtvd4VJ3Dm/0x+2TOxTFv0JsYMGkVls2agMyDh/DZgF5YFhSMaTMX4czV
sxjd9kXM2HnGrpU6ZyTe6LvYfDqHAa+/iI83ZuDUhRM4dvYMJvZ6Cm3e/hDTFqzF0UqOMJRjYv8O
GLE6z647v09bDFmZjKTl7+OJ1wZhZ9gufNjqWQxbtgc4E4OXX+iHPVeA4k2j0fWDOSg/n49er7ZC
FAdJbpzC0dNnkbnhC7za60tbLqFT38a74zbYbTfkfAAZANFYyAC4B00CrKJJjADwNsDFi9mxPagR
gFJMebst1qdzEBs4VRCD8LhorP96NtYFh2Hye6/hPzqMtMsWD38bw+11+WuY0K8V5sebDv5GAfq0
/xBJ5jhdLdiEnoPG4lzZUQxq2Rk7jtrVTFqmm87YgM4fTILpV3EkYjr6mrNxfrYGgBGM9oVMwbO/
+h0+nhBmv28c2RmPPNUWs0IKzLcj6Pfik1iTaTONg1u/whvvzDKfzmFI+zZYlHbehlNT3nscrbr3
QPs3emN7UakN+6L/W/g6umoGwsr3u+HDpdEInfMuHn22BxYtWYLZU7/G9gyT4eJwdHprPM6aePuD
J6Lf56tQfjgGnd/ohyK7ttl7k909W6agx4T19nvswsH4ZHaI/SwDIPwBGQD3oBGAKhrdAHBnjx8/
bl9LyQ7AKYBvygDwxPvS8UR0+OUP0fH9yZgzZwbaPP9rTF65ET3fbIGhs7di48JheOiJp5F69DKi
57+H3776LlZtX4G3Hvke+s6OwJG8IDz8w99hZuJR5G0ehu//528QUnAWwdPfR4u+gzBv5kqEJhYj
duUo/Ph3LyO68CR2TW2Hh59sg5yz9iKAzQtVcSwGT//zf8NHmwrt94NBo/HQQ79GhJ2ecB1hswaj
basBJp+z0fWdbpgeWoCLhyLw+x/+O3pOj7JTEq+ezMRrv/oBOs2OR+G2ifjhw7/BkvAUzPuoCzoM
nog508ahw2u9EH+0AsdT16F7j/5Yvn49tm0PR/GpC9i3eTx+9B8vIbz4JLaOb4F/+10bFJw4g5kf
d0DHT77A0jnrkJx7DCtHd8BPn+mLwiPHMbP3I3is8yic5vzFBpwMKAMgGgsZAPfQXOYAbNiwwbaH
fm0AeBcADwp32imAb84A3MClk4XYtSUQG9auwsqVK7F+0zYcvViJ4/vTsHZVIHbv3YfEiK3IOX4Z
qDyB7ZvXITR9L/ZnxSE6OQvHivMQELgZKQXHcWBPFAIDNiPrkCm56xcQHrgGqzbFofzydRzYHY3A
zVuw58Ap5KeEICBgGw6WXLu1P/yLynLsSU1G8ZnL9vvV0qNITy+A+Va1HFeRFh5g8xm2+whdAS4c
ybWzQyMS8lHJdU4VIjhgC7YmFKDs/DHs2rQRO+OycPrUUaTG7TLrrkLKvtt3ExwuSLLbS8w7aL8f
yIo129uKvEOnkJu0zezPNhSXmrQvHkbA6lUI2JUDXLuCzFizD5t2ofj4SaRGbMbm7VE4c5n59F3W
dYH7LAMgGgMZAPfQHAwA8xUUFOTfdwGwkee1Dr73mHIK4JsyAMS3qobZ75Tn7X/3151bri4dr/x4
JMDvt776WE45dxs4umOd+8hJ01Pe32/rzu1WzVnwoQa+FVAGQDQWMgDuoakbAM6HY/+Ymppq+0q/
ngTIax0P9EmAoskiAyAaCxkA96BJgFU0iRGAvLw8LFiwwO60UwAyAO5EBkA0FjIA7qE5TALk3XF+
/y4A7izfBsgfnUYAhAyAaCycjiA+Ph67du2ynYTwT3bu3GnfQNtUDQDbQb4NcPXq1bY99FsD4BwA
/uDYATgFIAPgTmQARGPBR6/yb25urr32yuewC/+EZ/8ceXaOe1MzAGwLjxw5gu3bt+PixYv+fQmg
sLAQa9ZUPQLXKQAZAHciAyAaA9a1U6dO2UaX11w5N4l/hX/C41teXm7bGedE1Fe9aCw4Gs76yJFx
9pV+Pwlwz549ugQgZABEo8H6xmeScARA+D8cAeDxbortDNtBTgKcO3euNSx+awDY6fNAzJs3TyMA
QgZANCqsc8Jd+KoHjQ3zxUmAPDFmf+nXkwA51JGWlqYRAFFjA8D64fkjriusc/zb1IYAhRDuhe3g
/v37sXz5cnupwq8nAfKRh8HBwXannQKQAXAnNTEADOePgpeOWIfqC7fDYTaZACFEU4AnJnxNPu9Y
8OtJgGx0i4qK7DOPZQDE/QwA6wUfjUnTePLkSVuHOIJUH3gdkDOBma5MgBCisaEBYPvGd+Sw8/db
A8BJgPzLBx7oEoC4nwFgGGdql5ZWvfGwocRRADru6kYdhBDiQcF2cN++ffYBeX4/CZAzMjnbkXIK
QAbAndTEAPDsn5+rqxf3UnXxeUmBxkIGQAjR2LAdcsUkQGcEgO891giAqIkB4HA9642vekHxL7fB
Tt0TruMdn1CMLwMghGgKsG3j83EWLVpk2y6/ngPARx7y9bbcaacAZADcSX0MAHXgwAHMnDkT//Zv
/4Z/+Zd/uYOWLVvaCTWU93oyAEKIpgJPhjk3KTo62r/nADgGYMuWLTIAos4GgOI8kj/84Q/o3r07
vvWtb7ES38GPfvQjW/cozzQpGQAhRFPBMQBRUVH+bQDYkHMmdkZGhi4BiDoZAIrhY8aMwXPPPYdx
48bhr/7qr2yn/zd/8zd4+eWX0alTJ3z44Yd2PcozTUoGQAjRVGDbxksAixcv9u9LAJoEKDypqwFg
XerWrRvatWuH3/3ud7bz/z//5/9g1KhRtvPnyECvXr3sJQLKM01KBkAI0VRgO+SaSYC8BUu3AQpS
VwPAOwP+8i//Er/85S/xzjvvoH///pg+fTp+85vf2PD/9b/+F/6//+//wwsvvICSkhK7jpMmJQMg
hGgqsG3jbYDz58/379sA2dHrQUDCoa4GgGHf+c538N3vfhdPPfUU3nvvPXz88cf4u7/7O3z++ef2
84gRI/Dtb38bAQEBdh0nTUoGQAjRVODJMB8EFB8f799zANjR8+wtJCREBkDU2wD8+te/xrvvvmvn
AfTu3Rv/43/8D0yZMgUdO3a0RoBzA1asWGHXcdKkZACEEE0FGgA+mCw0NNS/HwXMnaXTSU1N1SUA
UWcDQBP593//9/b2v5deegkdOnSw99B+73vfs6bgjTfesJcHfvKTn9i7TignTUoGQAjRVGDb5oqX
AbHT1+uAhUN9DABHAH7+85+jS5cuaN++PT744AM77M+OnyMB//t//2/rqCnPNCkZACFEU4HtECcB
Zmdn2/7Sbw0AG3JOAuRsR40AiLoaAIb9wz/8AyvuHfzsZz9Dz5497d0ANAO8tYbyTJOSARBCNBXY
tu3du9feHefXkwDZ4LJRXr16tW2InQKQAXAnDW0AHP7n//yfGDJkyK165pkmJQMghGgq8GSYz8dJ
Tk62faVfTwJkY8+hWTbGTgHIALiT+hgAzgEwVbNaWrdubR8WxKE1ykmTkgEQQjQV2C6xPeLkeL7+
3K8nAZ44cQKJiYm6BCDqZQD+9m//9q5O35NHH30Us2bNsu/Yppw0KRkAIURTgW0bJyuvWbPGtk1+
fQmAkwD53mPKKQAZAHdSFwPAv7xVho/NnDZtGmbMmHEXU6dOtff/l5aW2rrnWacoGQAhRFOB7RBH
KvmAPPaXfj0JkDuak5OjEQBRJwPgrFcbeaZJyQAIIZoKFCcBzp492/8nAXJHeb8j5RSAYwDY2FOe
DbbwXyjnuN/PAFC+tlFbKMd0eJpQIYRoDNjOsX9MS0uzfaVfzwE4evQoIiMjbWPsXRBs7Blfcod4
Js/XYHIGbHUGgMv58KiG0v3SFEKIBwn7QvZ9fE2+308C5CMPOTHL2wA4owB8IhLfGMi5AsK/4XGm
IeSx96wL3vBsvSHrRE3SFEKIBwH7Qj7cbOPGjbYP9OtLAAUFBXYCF+VdEGyUeQ2E8YX/w8l8znH3
rgsOzjL+KHxto7bUJE0hhHhQsF/kA/IyMzNtG+W3BqC6SYCesGEW7sFXHfCFr3Xriq/tCyFEY0C5
ZhLgvUYAhBBCCDfhmhEA7iznAMTGxvqcBCiEEEK4CdfMAeDO3usuACGEEMJNsC/kRGe/vwuAQx2+
ngMghBBCuBHOh2P/6PfPAeAkQF7ruNckQCGEEMItUK6ZBMj7sL3fBSCEEEK4EfaLrngXAHeWbwNM
SkrSCIAQQgjXw6eTuuJtgLwHm5Mddu3apUmAQgghXA/7Qr6cLCQkxD6ozK8vARQWFmL16tW6BCCE
EML1cDSc7yZJTk62faXfTwLcs2ePLgEIIYRwPbwEwEmAc+fO9e9JgOz0OQlw3rx5GgEQQgjhepxJ
gNnZ2ba/9OtJgHy1a2pqqkYAhBBCuB6OAPAtuHw+Tnl5uX9PAuQjDznZgTvtqzAYh45IuIf7vaDH
1zr1QS8EEkI0FXgyzEfkh4aG+vckQDa8RUVF2LBhg08DwOV8FCIfF8y7BYR/c+jQIVvx6Xqr65QZ
zuExX+vXFqbHv6yTNAK+0hNCiAcJDQBHxuPj423n77cGgJMA+TcrK+uuSwBs6HkPJBvp0tJSG5cT
IoT/4rwemsec371NAL+XlJTYTpt1w3v9ukCDyVEo1rHqTIcQQjwoeDK8b98+zJ8/37ZRfmsA2Onn
5uba2Y7ekwC5jLdC0AlRLBTh/1AcBWBH731Wzu80BxwhoHytX1so/sB4361GAYQQjQ3bIZ4I8e44
9pd+PwLA9x57jwA4BoC3CVJ8OILwfyg+HZI/gOoMAOsNO29f69cWioZCBkAI0RRg28bn4yxevNj/
JwHykYeBgYF2pz0LQQbAnVAP2gDwcoIMgBCiKcC+7/jx44iKirKdvwyAka/GW/gflAyAEMKtuMYA
6BKA8IaSARBCuBW2ba64BMBO/n6TAGUA3AUlAyCEcCtsh9j+uWYSIN97rBEAQSgZACGEW2Hb5orb
ADkHoLoHAckAuBNKBkAI4VbY9/H297i4OP+eA0ADwIewBAcHywAICyUDIIRwK+z7+CyUsLAw/34U
MHeWnXxaWprdae9CkAFwH5QMgBDCrbBtc8XLgNjJV/c6YBkAd0LVxwBUPdvvbvmKSygZACFEU4Ht
ENs/V0wCZAfP9x5rBEAQqq4GgGGlOUEYM3Y6onesxVczViJs/QxMnL8T182yGzfujE8oGQAhRFOB
7djevXvt3XF+PQmQDS7vd1y9erVtiD0LQQbAnVD1MQDnCyMwa/ZypMQGY8nKICRsX4kF62JlAIQQ
zQKn70tOTrZ9pV9PAuSb3Xbt2mUbY1+FIAPgLqj6XAKoTr7iEkoGQAjRVGC7xPYoJCTE/ycBsrFP
SkrSJQBhoepjAGoLJQMghGgqsG3jI/LXrFlj2ya/vgTASYALFiywDbFnIcgAuBNKBkAI4VbYDrH9
4wPy2F/6/STAnJwcjQAICyUDIIRwKxQnAc6ePdv/JwFyR3m/I+VZCDIA7oS6nwHgZxkAIYQ/wr6P
/SOfj8O+0q/nABw9ehSRkZG2MfYuBBkA90HdzwCww25I8QfGyajeo1BCCPGgYTvI9igoKAiXLl3y
bwPA9x7zmcfcac9CkAFwJ1R1BoB3jZSUlNjHR7Me8YdRX0pLS3HgwAFbJ7l9z/SEEOJBw3aQbRzf
keP3kwDz8/Pte48pz0KQAXAnVHUGgDCMdYL1hhNI6wsvQdFU+EpLCCEeNE4bl5mZaftKvzUAnMzF
hl6TAIUDdS8DQBjua926wHqmzl8I0VSgXDMJsKCgAEuWLLE77VkIMgDuhLqfARBCCH+F7Z4rRgC4
s3ztYWxsrG38PQtBBsCdUDIAQgi3wnaQcwA2btzo33MAuLO6C0B4QskACCHcCttB3u20ZcsW/74L
gA28ngMgPKFkAIQQboXtHvtHv38OgCYBCm8oGQAhhFuhXDMJkLdi6V0AwoGSARBCuBW2e2z//P5d
ANxZNvaJiYkaARAWSgZACOFWXPM2QD55jY88DA0NtY2/ZyE0DwNww+aN8r1c1BZKBkAI4VbYDvLd
JCEhIf4/CXDfvn1YvXq1bfg9C6G+BsBTvpY3CJVXUVpSgrLL93owzc1MOLrhK07j4a0bPuI8SCgZ
ACGEW3H6vuTkZNtX+vUkQHbwe/bsadBLABxCObk3BauMsdiZUoBK8/1GA3e8TAOXT2BS/5ZoO3IN
bNflHY9xjPJitmLBgoVYH5yB0grmpWHeZFcjbg5S+OrYqeslRQhesgALFi1GYsZ+mNw1eFnVBkoG
QAjhVtg/cBLgnDlz/HsSIDt5TgKcN2+ebfg9C6E+BoA6lb0aT/7oJ5i8rfCOTu1OmY745id+vi3v
eFW6e30ge+PnePOjuTe/Vel2Pm4gfetXePfjYVi+fDZe+GULLEo4VhXJQ56XEu6WxzKvaOzU79ad
ZVF5tQxnTpXiqkcYoTe5ejQVQ7p2wvAxi7B04hC0ePYtpJy8Oy/3zl9VPryjeKZVGygZACGEW2G7
x/YvOzvb9pd+PQnw5MmTSE1NbdARAKuru/Fxuy6It/0tz7iNCbheifOHMrH2y7EY9+UcpJ++jmum
E5w4dQHySypwNG0Lvpy2ECcuVCB521JMm7cVUaGrMXb8JCQeK7H9b2VpERZPGYcxo8ciJP4ocrd+
jS4ffY2woPkYO2kWcs6V3zzDZ7qVWDroNXT+NJBfcCwxDhn5p8ynS9i5YibGjhmNwD3F5vsVBC+c
j7XBSQjftRKjZy/GipkTMH7aAhwoKUP0qikY88VqnDU52LNrNcaMGYNF4Ul2m6lBK7Fg2S4kJgVh
xOQFKDp77Wb6N3vks6kY2Wc6qkrRKUcuu441n3bBm0NXVC0w2pMWh4OmElRWnEPyhgUYO3YclkYX
mCWXEbRyHlYGJyIicA6mLFiNQ4dzsXjqF5izMwNXbFLliFw31+7ThrRcBtTpcgIlAyCEcCtsv/fv
348VK1agvLzcvycB8pGHnOzAnfYshPoagBsXU/FBq/YIZ//qnDpXnETA0unYERqHr7q2QNfPt+H6
+SK0feUFzIw/jQuHt+CZXz6KbUXXcTjia/zg317HotBYzOrTEp2HLzdnueWYNrAths3cgE3zh2Dq
2jjkb5uGZ17vj6jUcHzQ9g/oOX2HTYqdH8+yLx1IxIfdXsZrrYcisuiiXRY+70N0+3AOYnYsRI9+
A5F99jKiJr+H7z3SCXODZqLnhKlY+Gl3/PujnXCq4jpWDumMnmNDkBM7D93eGYEdYcEY2L8bArMu
4siur/FvDz2DiQEL8c7ITxG7v9ymcePGVeTHh2HN7NF49fGOmL1xExJzj9pyvmGL6CxGtnsREzbv
s/GPFqQjKjoOOQdOIT92LZau2IzoFZPw5PM9kH/5GkIn98CPfv82YpOC8c7Lj6P76AUIM+bnV2+0
RtLZSmSu/xRv9Z9qDNMqvNO3N2KLqt7Z7+v43AtKBkAI4VbY9/EJuZwcf/HiRf82AEVFRfa9x9+E
AfjQGICIA/arnbBXfvkyju1OwZrFS9Dn9d/jyYELzZIKjB/cC/PjeWZ+FqP7dUZQkfl4cBfathuO
o+bjke0T0GfkQlw4noB3WvRGQYUJvKmsjV+g/ceL7OfExYPQf+I6+7nq7PcarlnvcQohc4fiuUfb
IarwECZ3fgIvdhyM0aOHo9UTbRGYdwlHQybj2a7jUWURjMryMKBtN+zM3oOl8+bguAnaNqoNfvds
F4wZPRrdXmmBSQF7gQMheOG1nthzuWo19u52tOPGFaRsWY3Jo/rhyd++hpFfT8O2xCIPA3AGQ197
EkMXZ9jViiPn4bFf/QwzIw+iovQwQgO3YM7Qd/Cj37yIxBJjEAK/xKudJ9i4W0d1xqfzMs2ns+jd
uw2ij57Fol7P4pnWA8w+jULbp1tjScwhG7e2owCUDIAQwq2w7+PIeHx8vO38/dYAOJMA+cAD7rR3
IdTLAFxIQt+X38DOYtPhVZRg6fRPMH/RPPTo8D6Siw9i6qCX8MiAWSbmFQx/61WMCdqHc8eC0ea5
p7CFBqAgEK+8Nhj0D3kbRqBV/69w6WQ2urdsh8CD53HtzBHkHz6P9HWfo6U5m6dCp/dE78/X2M9V
Yw6nMXXYQKxN5HWIc/ikaxvMj83Fwvdfx1sfL0VBwV5EhEbhyEVTlqtG4g/tPjVd6m0FftUDP3nq
ecyPrhpS3/5lD7zYfiRyCwqQEBmJnKPncSVjFR57tisyzMGjbpfDzVGPkhR81P2rW9u9XUY3EPbV
23j45UEoKjdxT0SiY+uOyD17ATPe64zRq9OxJ3Q2/v2PzyLOeKPCNZ/i6TfHoNKsuXZwa4yYnWq8
00F06fY6wo+VYf3Qlmjz/my7T1Ghkdh38rw1G7fzUzMoGQAhhFthu8m74+bPn+//kwBzc3Mxd27V
JDrPQqi7Aajq+Ipjl+CNJ59Cx7f7oE+vrnj5zU6Iys7HZx/0QK+hs7FwznC80c2cOZ+9geRNI/Fc
q86Yu3YZBrd7Hl8FJiBt0xQ8+VQrBGUWY/PEDnj0mfZIPnIFGUGT0LJjN3w8Yin2HzyF5eN64OmX
30NyfhFmD3oeL3T9GMXmNL4qF9cQv/lLdO3ZHn3eewujp61BaYU59z4QjyED+2DgwMFYH56GC1cv
YuXILnjsmS6IOXDerFe19rnszXjr3feRWzWajosn92LCpx+i/8CBmL9+B05fuIKEZaPwx8efx4o4
WhWe3d9ZHpXlJSjMO4gyr3BbTJdPYMEXvdDKlNHY0SMwatJC7C29gsg1E9Cicz/MWb4avd99CTM3
x2Dl2Lfx+LO9Eb87E2M6Po1OQ5YiOyUQLxjDNHFLDkqPZGP44L5mnwZiVUgMSi5dMdmRARBCiNrA
do/tH++OY3/p1yMA7OQzMjIadASAXDPbqDAFWXbxPM5fuIir16o6F07Mu3jhUlUXe83EqawKv1p+
CVeu8ZNzKaLCHIgK+7eiwuSnwnyuGs/H1UsXcbGckaviMq2rZjkvaVQwXbPNqnzctAFXLpl9vmQ/
O507Kq+YsAv2jJpj8kyn0qRXca3y1j7c0s2OtErXccGU31W77ar0KyuZz2qeRVC1EgvwrmU3c4Ly
C+fN/lRd13BuXbxSdhGXK7i2yZs5TlfMvjF/TK+i4potE7uv5jPzbnWjwh5bu09m697p1QRKBkAI
4VY4AlBYWIjFixf7/yRAPvKQrz1syDkAhNvzlp2Y53y++cGeMd/6Ys6gnb+3gm6G8bNn3Jsd3K1v
t8JvxnPwDDefnXBHzu2Jt7fjse7NTv72d+5XVTx+8Pzuue3acGt7Rre2cXujt/7eTvbWp9ufzV+u
56iueSGUDIAQwq2w7zt+/DiioqL8ew6AYwACAwNtp+FdCPUxAKJ5QskACCHcimMAoqOj/dsA8BIA
/2ZmZtqd9i4EGQD3QckACCHcCk+GeQlg0aJF/n0JgJ18w08CFM0ZSgZACOFW2O6x/XPFJED+bejb
AEXzhZIBEEK4FY4A8DbABQsW+PdtgJwDwEcebty4UXMAhIWSARBCuBX2fWwD4+Li/HsOAA0AHwW8
bds2GQBhoWQAhBBuhX3fsWPHEBYW5t+PAubOspNPS0uzO+1dCDIA7oOSARBCuBWeDPMR+cuWLfP/
SYDfxOuARfOFupcB4KgRw/m3IXC25Z2OEEI0BmyT2P65YhIgO3juqEYABKGqMwDsqDkkduTIERw+
fBiHDh2qN0yL9VAmQAjRFHAmAfLuOL+eBMgGnvc7rllT9QIdz0KQAXAnlC8DwA66rKzMdtqsQwxj
x10fuA2+dYuv3nTSEUKIxsTp+5KSkmxf6deTAHkmt2vXLtv4+yoEGQB3QfkyAKwPrDPssCm65IaC
poLmQqMAQojGhu0gRzm3b9/u/5MA2djT6bCB9ywEGQB3QlVnAFgfWG+o6ta9l6pbhyb00qVLMgBC
iEaHJyV8RP7q1avtiYlfXwLgJEA+8IDyLAQZAHdC1cUAUPyhBAcHY8WKFXfAHxJvq+EPy9d6MgBC
iKYC2z22f3xAHvtLvzUAvA7LDj4nJ0cjAMJC1dYAUOnp6RgzZgx+9KMfsQLfRVBQkI3nuZ6zrgyA
EKKpQO3duxezZ8/2/0mA3FGepVGehSAD4E6o2hgAig+Tevjhh9GmTRs88cQTd3T83/72t/FXf/VX
CAkJsXE903LWlwEQQjQV2NaxnUtNTbV9pV/PAeAM7IiICNsYexeCDID7oGprAPg66S5duuCLL77A
f/zHf9iO/1//9V/Rp08ffPLJJxg6dKg1mpRnWs76MgBCiKYC2yW2SRy1ZLvk1waA7z2Oj4+3O+1Z
CDIA7oSqqQHgNX3q/fffx3/+53/i0Ucfxf/9v/8XP/3pT/HZZ5/hj3/8I/7rf/2v+Ju/+RtrBvhD
8p4HQMkACCGaCmyXDhw4gA0bNvj/JMD8/Hz73mPKsxBkANwJVVsD0LJlSzvU36NHDwwcOBCrVq3C
k08+ie9+97vo0KEDXn/9dfzlX/4lJk2aZON7pycDIIRoKrDdY7+XmZlp+0q/NQCcBMiGXpMAhQNV
WwPQvn17fOtb38Kzzz6L1q1bY+LEifjOd76DDz/8EP3798fnn39uRwOeeuopG99zFICSARBCNBUo
10wCLCgowJIlS+xOexaCDIA7oWprANq1a4e//du/tSMBHTt2xJQpU+zZ/5tvvonhw4dj9OjReOih
h9C1a1cbXwZACNFUcUYAMjIybF/p13MAeH92bGysbYw9C0EGwJ1QtTUAbdu2tTP92fl36tQJs2bN
wqeffoq///u/xz/+4z/ir//6r+3kQA6pUd7pyQAIIZoKbJd4Z9OmTZv8ew4Ad5Z3AURFRdmd9iwE
GQB3QtXWALDj//M//3P88Ic/tB39v//7v9swzv7n32eeeca+WpPyPPt30pMBEEI0Fdgu8fHkvLuJ
7ZJfXwLgtQ6ncfYsBBkAd0LV1gB07tyZlfYueBmAnf+oUaMwf/78W+t4pycDIIRoKrDdYzvHh5v5
9SUATQIU3lANZQAceEcA5wHwFZuUd3oyAEKIpgLlmkmAvA1w4cKFdqc9C0EGwJ1QdZkDYKpltfCO
gCFDhtjbAynPUQBKBkAI0VRgu8d+z+/fBcCdZWOfmJioEQBhoWprAHi7H5/89/3vf/8uvve979l5
AXyoRmhoqF1HBkAI0VRh+8S3Aa5du9a/JwGywWXjy4aZjbFnIcgAuBOqpgbAgXH5g+HMWW/4RC1O
qOE2vNcjlAyAEKKpwHbpyJEj9s2mbJf8+hIAr8s6Q7OeheA0+GzcKe+GW/gn1L0MgC9DWFN5nvl7
risDIIRoKjhtXXJysu0r/XoSIBv0PXv22J32LAQ2/ozDzkByl/hsiJKSkjsMAD+zrjR0faAp4EgB
h9pkAIQQjQ3bJE4CnDNnjv9PAszLy8O8efNsY+xZCGyMy8vL7fDtyZMnfW5H+BesF3w5FM/IaQ59
1Qd21nTHvtavC0yL9UudvxCiKcB+kSOg2dnZto3y60mAbHxTUlLuGgFwCoJnZvv377d3Cwj/h9fs
6Xp9dciOCeD1fhpHX+vXFj6IyjsdIYRoLDgCwD5vxYoVtr3z60mAPMPfvn273WlfhcE4NAfe126F
f8Jjfa+z8YauD76MpxBCNBZsl3hismvXLly8eNG/LwEUFRVh/fr11RoAIYQQwi3wpIQj4wkJCbbz
91sD4EwC5AMPHHHnKbogR85nX2FOfMo7jKbCVxihPNPyFebIV5jz2VeYE5/yDqtpnnyFeaZV0zDv
tChf6fsKq2mefIU58hXmnRblK31fYd5p+Qrjer7CHPkKcz77CnPiU95hTMdXmPJ0Z1hN8+QrzDOt
moZ5p0X5St9XWE3z5CvMka8w77QoX+n7CvNOy1cY1/MV5shXmPPZV5gTn/IOYzq+wpSnO8NqmifP
MIoj43x8uV9PAuTO5+bmYu7cufaaByc9cAY45wTwPkhe5+VjgjkcwlsiuIzfee2WyxmPYTQQnDXJ
CV2pqal2Ihnf/MbRBU4aS0tLs7PH+WxlXj8m/MwwLmMcxuU6XJfb4La4TW7bM09Mm3lgGPPEvPE7
8+qZJ+6LkyeGcbtZWVkoLCy06TENps9XPnLfvfPEa+HeeWKl4G2TzBPDPPPEOymcfDJPLFfmiZ89
88TXL3vnidusTZ64nGGeeeJ2nDxx+0zHV56IZ54Yh3GdsuM2uH/cJrftmSemzTx4H0/m1TNP3BeW
s688edYx5oNl5J0n7zrmK08Mc+rYvfLEeE4d85Un1pF71fvq8sSw6uq9U8eYLsOYD+bJ+3gyjq86
5tR7J59OHatpvfdVx+pS753jWd9679Qx7zxVV++ZBydP/Fvfeu+rjtW03tekjjl5qq6O1bfesz7U
tt4zzKljzJNTx5w83a/e36uO1aTeM33vOsZ4Tp7qUu8ZVl2eGrLe8+w/Li7ObsevRwB4PZezHflj
CA8Px5YtW2zBLl++3Bbozp077cMQWOB8YRAr7LZt2+y1ES5nPMbnW5MiIyNt4XHiBA/Exo0b7WuG
WfB8zgDD+GQlPnWQ8DPDuIxxGJfrMIzb4La4TW7bM09Mm3lgXpgn5o15ZF65nGGMz32JiIi4I098
vWNMTIw94E6e1q1bZ4d6kpKSsGbNGhu2evVqe/BZCfgEO4atXLnSVh6+OTEgIMBWTOaJFZYPUtq6
desdeeK8ih07dtiydfIUFBRky5kVk+tyG5s3b0Z0dLStjEyDafGSTHx8vP0RMk/8YTh5YjiXO3ni
eswTt+PkidsPCwu7I0/MB/NEnDxxGeMwLvfDyRP3j9v0lSfmgXlhnpg35pHlx3JkPJYr1+M+eeeJ
+84yYFk4eWIZhYSE3FXHWKa+8sRj4OSJx4bHyLuO8Viyjnnmicecx551gGFOHWMdceo902+oeu9d
x2pa77l/Tr13yq429d6pY06euI3mXO+dOlabeu+rjtW13jt1rDb1nuXN7Tl1rD713qlj9an3Th3z
zFNN6r13HWOeGL+29Z75qku9d+pYfeq9U8c881STes/4rE9+awB4K1dpaamd5c/rHpwPwKESDnlQ
vDzAEQLCz9WFMT7X4/rcjhPG4RRnMpl3GOFnJy3G8RXWXPLkhN0rT/zr5MkJc9KvST6pB5UnJ6y+
efIM4/ZrkyfPsNrkyQnzlafq8sltO2HV5ck7jPGbcp48w76pPDlh98oT/1aXJ4b5ypNnGPWg8uSE
1TdPnmHcfm3y5BlWmzw5Yb7yVF0+uW0nrLo8eYcx/oPOE8NqmifPMG6/unzWNE8cDfA7A0DY+fPs
XwghhBB3w36SdwL46kPrS6MaAI4CCCGEEKJ6fPWfDUGjGgAhhBBCNA4yAEIIIYQLkQEQQgghXIgM
gBBCCOFCZACEEEIIFyIDIIQQQrgQGQAhhBDChcgACCGEEC5EBkAIIYRwITIAQgghhAuRARBCCCFc
iAyAEEII4UJkAIQQQggXIgMghBBCuBAZACGEEMKFyAAIIYQQLkQGQAghhHAhMgBCCCGEC5EBEEII
IVyIDIAQQgjhQmQAhBBCCBciAyCEEEK4EBkAIYQQwoXIAAghhBAuRAZACCGEcCEyAEIIIYQLkQEQ
QgghXIgMgBBCCOFCZACEEEIIFyIDIIQQQrgQGQAhhBDChcgACCGEEC5EBkAIIYRwITIAQgghhAuR
ARBCCCFciAyAEEII4UJkAIQQQggX0iQMwPnz53HhwgVXwzLwVTb+io55FW477v6M6nT967PKsIoH
1S40ugEoLS3FkSNHUFxcjAMHDti/boRl4Kt8/BFW7uPHj9v9dvMxP3ToEEpKSh7Yj118c7AdO3z4
sM/j7Cbq047xd3Dy5EnbJri5XTh48CDOnDnzQNqFRjUA3EE2guwMLl++bCkvL3cd3G+WAcvC3zsD
7p+zr2VlZa4+5vyR8wfPzsNXWYnmgXc75ut4u4H6tGOMf+rUKdvxX7x40dXtAsuD7cKDMAGNZgC4
Y9xBHvDr16+DunHjhiuhWAYsiwfl/BoL7hsr95UrV+x++yoPN+Do6NGjttH052Puz3i2Y85x9T7W
boFy2rGzZ8/Wqk5z2JvrcR3K1/bdAnX69Gk7osRy8VVeDUWjGwC6RYoVx81QLAt/NwCEBqCiosJW
dl9l4RYoDnkeO3bsG/+hi28GtWN3QtWlHXMMwKVLl+w2fG3bLVAcFWQ5ygA0IRx39k10XJQMgLug
Tpw4IQPQjGnuBsCRr2V1gfJ3A+DI17KGgOLcIBmAbwBf8hXPF7xGU1hYiGvXrvlcXh8oGYC644if
HaNGece7Fw/akFAyAM2bb7Id86zH1DdRP53hel/L6gLV1AyALznh9yrT6pZzoiN/t97hDQUlA9AA
OHK+82BGRkZi6tSp+PLLLzFp0iRb+Wvyw2IcXqt96qmnkJGRccd2GwJKBqBucDsrVqxAdHS0LUc2
IjzGS5Yssctqko6jmoY3BJQMQPPmm2rHHK1du9a2VRs3brTffcWtK9SYMWPw/vvv28++4tQWqqkY
AP7uebK2YMECfPXVV7YcJ06ciPT0dLts+/bt9qTOV/vgLOdEZc/l1Pz589GpUyf72XOdhoKSAagH
jtjRsFNwDiAVFRWFp59+Gjt27MDWrVvx4YcforKy0i7zlPe2HI0dOxYRERE3v1XJiVsfKBmAukGt
WrUKf/qnf2obEf7o+QP99NNP7bKaaP/+/bahcMTtMn979uxBUlLSzdCGPQujZACaN99UO8ZJsitX
rsSMGTNsO/XJJ59Yk+stxvWWZ3vnKV9hrN8fffSR/eykXR+opmQA+HfgwIHo3bu3bfO//vpre2JA
TZ482ebRW1yPomlgR+wtnggOGDDg5reGbRMIJQNQRyg2qjy7p7NdtGjRHT8InvH36dPHps/RgHnz
5tllvPVkypQpGDZsmG2QnUqQk5ODDz74ALNnz7bfR40ahbS0NAQGBuK9996z92w2RAWgZADqBpWf
n49HH33U/rgZNmfOHGzbts0uYzozZ860x5aza3k2xR9wZmambRyWLVuG6dOn4xe/+AWGDh2K+Ph4
uw4JDQ3FkCFDbANcVFR0a3veeagLlAxA8+abaMcoGtJevXrZzxTrXmpqqq0nPItlPeVtc6yLwcHB
Noxnpqz/NMBO/WW71bdvX7s9Kjw83K7LzpBpsS3jd8o7H3WBaioGgFBr1qyxv3/mJyAgwIbxN86T
OZ788S9HWnjCsHfvXltuNP38zm2wD2AZsb3ft2+f3Td+njZtGjZs2GC34Z1ufaBkAOoAFRsbi549
eyIoKMh26pTncs6ufOKJJ2wH0K9fP5sHihWCTpsHfvDgwTZs9+7ddtho165d1jlSNAAMX7p0qa0U
HCLyzENdoWQA6gYVFxdnO/F169bZHyVHBDZv3mzToRngZ3b4NHO8hNO1a1fs3LkT3bp1s8eeozrd
u3dHVlaWbVg9t02xoaRZ4FkYf/ANkXdKBqB58021Y/yNOGeZThjFEcyQkBD71+m42XE+9NBD2LRp
E8aPH2+HrmkCWO+3bNliO7/s7GzExMTYEQV2aDw5Ylhubq7fGwB27s8995wtz8cee8yGMX9vvPGG
/Uzz9Pjjj9u2n79xthk8UWzVqpU1Thw9YJnRTLHtYB4feeQRexxGjBhh2x7KV/p1gZIBqAMUDyLP
8NevX2+3T3kuZ2PLg0zl5eVh5MiRdhkLmteNORzWoUMHu5yf6Zg9RQPQvn17TJgw4WZI4/5wmiPf
hAFISEiwTp4/HDZ8NHc8y+FQ6sMPP2yPMzt/1g2KIzc8juzwKf6weZbvyHPbzCcbz0GDBtnGRAZA
OHxT7RgnGzt1lWL9IOx8OLrJS5c0sRTDnOv4NMHs9BmX5tZTrO/szNjhs3PjZDa2gRwZo3zlpbZQ
Tc0AcFTEuXzCSx5OeP/+/e1f9hXLly+3nznqwraJYplyH2ioWGa8JHP16lV7fz7bAoptTlhYmP3s
nXZdoWQA6gjFwuPwDA8gOwOnsaY4lPbWW2/ZgmX6zo+ELpnXgBcvXmwn+rEScPiXpoAdljNkxm3y
B8YKxYrVUMM/lAxA3aB4rNjpU+xQTRW1x4zp0KVzdIfHnseODd/o0aPtSAGH+ejyOapDw0enTzPB
vBH++Plj/+yzz+xDe6iGzLcMQPPmm2jHWL84Usk6yhMaprFw4UJrPnlJk20Pz+RffPFF2/7wWRId
O3a0nRMn9XE5P7Nz4oQ3mlcaXq7P9oy/A14G43qJiYnWFDR2O/ZNGgD2Bby864jlyxMDlhn/zp07
15aLE8Y8cASlc+fOtm1gm8Ey+/jjj+1ZP+cAdOnSxZYxjRhHmylf6dcFSgagHjhig80fkGc4rwvz
4LGx51A/h8AoXi7g2T0rCisBh4Updixvv/22dY68ftymTRvMmjXLDjG//PLLtoI0RIdAyQDUDYrH
hGaOZUfRyHHIn+JlGjaMHALkmT6NW4sWLew11ZYtW9rRHP6YOReABs+zThYUFNzaDtVQeSaUDEDz
5ptqx5xtsW6yreKENHZK7Jw4UsV2iiOVvGbNUUrWY7ZV77zzju2UKLZpPLvnEDcNBUUTwN8BT3a4
nEaidevWtvNtzHbsmzAA3B+KI3/OqK8jGiOWGfsDli/LhGafYcnJybZf4CgJTxJ4vZ/LnXkEq1ev
tst42ZCjKmxbmFZDtmcyAA2AI37mweHQDSsDh3N4Vkf4mZWD14495b0Nyvs75cSrL1RdfjjNkYY0
ANwGf8xs9PhD5rHkceVZP8No8vgjohjfU97fPeVs35HzvSGhZACaN99EO8Y6zY6Hk08J6zPrMXEm
sTly4jufHXl+duQrniOGNQRUUzIAPHt3ypFtgwOH8510HDmfnfU95fm9uvJuKCgZgG8AvmiBszi9
oYvmsA4PrIPnep7fPeN4x6sPlAxA3WB5eR9Pz+88u/c8XjX5/CCgZACaN99UO8bhee96zO8Md+qp
Z111PvsK9/zuHeZreX2gmooBIBy19Sw/B/7unH33xlm3umXVfW4oKBmAbwAeqHvJ1zoPCkoGoG7c
Tw39A20oKBmA5s031Y7dS77iNxWopmQA7iVf8ZsClAyAy6BkANwFJQPQvFE7didUUzIAzRFKBsBl
UG4yAM7DSnyVhVugaAA4WVUGoHmiduxOqPoYAE7YpXxt2y1QnLTJOzf81gAQ7iRn0fN5zG4X5yew
Y6Tz81VW/gIbBf7QnVnJbhZvveKPnA8e8nfT58/wN8t2jL9ht6uu7Rg7Ok7S5hwHqeoOtgcxMtio
BoCNHg84H3pB+CPi/ZZuwtlnZ4KPv3cE3D+eHTjH3Ls83ASPOX/o6vybN047xolmPK5ubMccWAZ1
accYnycFNA9OOboVtgs8MXgQ7UKjGgDCneQZEHfYzbjpLJD7yUdt+ioHN8E7T9xyzP0dtWNV1Kcd
43o0ARwJ8LVtt8AHlTnl4V1GDU2jGwDCHeVDKdzMgzjYTQkd84u67u9nqE7Xvx3j+vxd+Nq2W3iQ
7UKTMABCCCGEeLDIAAghhBAuRAZACCGEcCEyAEIIIYQLkQEQQgghXIgMgBBCCOFCZACEEEIIFyID
IIQQQriQBjUAZ40BuHChaqNCCCGEaLqwv24wA1BkNsSNCSGEEKLpU3C0qvOvtwHINS6CTkIIIYQQ
TZ9b/XddDECuMQCOexBCCCFE8yPHcLSmBmDYsI9Ty28Axy4azEpCCCGEaJ6w8y8HsHlL8P0NQI8e
b2duCtyGNes2W8cghBBCiObL5i3bMHbc5/c3AJIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSX6k//Jf/n/I/SrrH5RY+gAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabhelp)
	{
		
	
			return $true

		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
	Link-Scripts
	Link-Source
	Link-Packed
	Link-Workbench
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxFile.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoading_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-ScriptDirectory
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Dayz_Folder_Adds/*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchive_Click={
	
	start-archive
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="False">100</Line>
    <Line Disabled="True">108</Line>
    <Line Disabled="True">202</Line>
    <Line Disabled="True">475</Line>
    <Line Disabled="False">581</Line>
    <Line Disabled="False">655</Line>
    <Line Disabled="True">1056</Line>
    <Line Disabled="False">1057</Line>
    <Line Disabled="False">1060</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>