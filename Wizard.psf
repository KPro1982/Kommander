<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAIaxSURBVHhe7b0HfBVXmua9OzPf9Gx3T/f07OzM
7uzMbKcZd3IHu7ttt9ttG4wNxibnnHPOYHLOOecgoggKSEIo5xwBJZSzhHLOz3feurpwERcQQqCL
6nn4/VGFU3UqnDrvc06F+98oiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqJ0p9N/
/Vd/FfzTn/wkePbsOcFLl34TvHjxUkIIIYS8MSwL/uab5cFf9/wy+Ft/+7fBKrYLz9Zf/dVf3eve
vTuOn7mIoLspiEsvQkxqASGEEELeEGLTChUF8PAPw9y5c/GDH/wDmsP80/WTH/8w+Nip84hILoBn
ZArcwu7DnRBCCCFvFBK/A2NzEBSZgN69ez/fAMyeOSc46E4KvKNS4RWRRAghhJA3FM/wRESqBv25
85efbwC+WbY8OCm7DB4RyfCKJIQQQt5cvNuRN22dgqcyAXfSinHZ2vb5BmDZ0mXBiVklasEU+EQR
QgghbyZ+d1LhfzddkfbS+Clknb7RqWq9arydaN/tTH+4TiNiCO4qA3Dx8vXnG4ClYgCyS7VbALKj
hBBCyJuGBGzXoHict/XF2eveOHfDp22oZc9e94Kde4QWZN1D4nHttj+u3fLFNec2IssqnHwjDdsZ
GIfzNu2xnd646RmlmQDjcRATcC+9pPUGIEkZAJ9o826FEEIIsXQCYjK0gHjLOwpeYQnwVIG7rfiE
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
A6AzRHoyAMaPlZg7FnpBJAZAHlalAXgzYT32OKKXMQDywK7I3Lr1gkge2pQ3NzqtARBkJ+Upevke
s94lzydIYBTnZ+5YdRakUpAL3fhUsp4lr17JRS4fHurspq8zI9es1GNyDetdba3HJNDJQ9ryjANl
eIPtdfQMdqgBkEpPTrh89EKQi0jet9QTxn02PuDT2QOB7J+0DoznvOXx0BNyzuVCZ/B/szHWY/Kg
mZxXPdZjRuQYtKUek/TSKBDzYDyOekXqBWkYvI56oUMNgCA7KS0g2WE9o6dWoOynfGrT3HHQE/Lm
iV7OeWeH9ZiBl6nHZDkxAdITYG7dekE+VGY8Hi2PUXvT4QZAkB2Vj1Lomddxsi0JnvNy3vfvZLBM
v3w9JsvLdWFu3XrhddYLFmEACCGEEPJ6oQEghBBCdAgNACGEEKJDaAAIIYQQHUIDQAghhOgQGgBC
CCFEh9AAEEIIITqEBoAQQgjRIe1qAAqVASgrM6yUEEIIIZaLxOt2MwBJakWyMkIIIYRYPvFZhuD/
0gYgRrkIcRKEEEIIsXwexu+2GIAYZQCM7oEQQgghbx73FFmtNQBLly4LrWoCsssVaiFCCCGEvJlI
8K8CcMPO8fkGYPz4CZHXbR1w6coNzTEQQggh5M3lhp0D1m/Y9HwDQFEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEU1Yn03/7b/w96f9gKrHVXZQAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabhelp)
	{
		
	
			return $true

		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$checkboxEnableToolStrip.Checked = Read-GlobalParam -key "EnableToolStrip"
	}

	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	
	Update-NavButtons
}


$btnLinkMods_Click={
	
	Link-Scripts
	Link-Source
	Link-Packed
	Link-Workbench
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxFile.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoading_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-ScriptDirectory
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Dayz_Folder_Adds/*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	#TODO: Place custom script here
	Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">180</Line>
    <Line Disabled="False">551</Line>
    <Line Disabled="False">625</Line>
    <Line Disabled="True">974</Line>
    <Line Disabled="True">1023</Line>
    <Line Disabled="False">1024</Line>
    <Line Disabled="False">1027</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>