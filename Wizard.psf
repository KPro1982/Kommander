<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
0oh44YX/D3WM7yn5xF4eAAAAAElFTkSuQmCC</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabhelp)
	{
		
	
			return $true

		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard

	$buttonCreateUIFromLayout.Enabled = $true
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
	Stop-kDayz
	Start-kServer
	Start-Sleep -Seconds 10
	Start-kMPGame
	
}

$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	
	Update-NavButtons
}


$btnLinkMods_Click={
	
	Link-Scripts
	Link-Source
	Link-Packed
	Link-Workbench
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	Reset-BuildSuccess
	Start-Build $buildmethod
	
}




$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	$buildm = Start-Build -BuildMethod $buildmethod -Commandline
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountP_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}


$buttonBrowse_Click={
	
	Write-ScratchParam -key "DefaultLogFile" -value "None"
	Show-DisplayLogs_psf
	
}

$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxFile.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click={
	Write-ScratchParam -key "DefaultLogFile" -value "Buildoutput.txt"
	Show-DisplayLogs_psf
	
}

$buttonLaunchLogs_Click={
	#TODO: Place custom script here
	Write-ScratchParam -key "DefaultLogFile" -value "ServerLog"
	Show-DisplayLogs_psf
}

$buttonHotLoading_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n (1) Creates Kommander folder; `n (2) Copies and Customizes dayz.groj `n (3) Copies and customizes batch folders `n (4) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3={
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">176</Line>
    <Line Disabled="False">500</Line>
    <Line Disabled="False">540</Line>
    <Line Disabled="False">614</Line>
    <Line Disabled="True">847</Line>
    <Line Disabled="True">854</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>