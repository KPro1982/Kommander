<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
ENKMeOml/w95y3aglLsTgwAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabhelp)
	{
		
	
			return $true

		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
	Link-Scripts
	Link-Source
	Link-Packed
	Link-Workbench
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxFile.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoading_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-ScriptDirectory
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Dayz_Folder_Adds/*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchive_Click={
	
	start-archive
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="False">100</Line>
    <Line Disabled="True">108</Line>
    <Line Disabled="True">202</Line>
    <Line Disabled="True">478</Line>
    <Line Disabled="False">584</Line>
    <Line Disabled="False">658</Line>
    <Line Disabled="True">1059</Line>
    <Line Disabled="False">1060</Line>
    <Line Disabled="False">1063</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>