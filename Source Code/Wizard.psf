<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
jRvVExUEQRAE4fWF+breDMBJNSFOTBAEQRCE15/j56qT/wsbgFzlIugkBEEQBEF4/XmQv5/HAOQq
A2C4B0EQBEEQ7I8jinN1NQBTpkxNqagCzt9UqJEEQRAEQbBPmPwrAHj7Bj7dAPTr1z/D63AAXNy8
tWMQBEEQBMF+8fYNwPwFi55uAEQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFI
JBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgk
EolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJ
RCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
IpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRyIH0xhv/
PylGWZ/ihmxXAAAAAElFTkSuQmCC</Preview>
  <Form>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
F/diqOi9mC39bn6c//wv6ekLBETgAAA=</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
	Link-Scripts
	Link-Source
	Link-Packed
	Link-Workbench
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoading_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchive_Click={
	
	start-archive
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your dayz addons folder to workbench." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$button5_Click={
	Set-PopupMessage -Message "This tool uses the output from Doxygen which is an automated code documenter.  It is what Leroy uses for the online version.  Mine is essentially the same thing although I have tweeked the settings to provide more detail.  The current generation date is printed at the bottom of each page of documentation so you can tell if it is out of date.  If so you cane either check my repo to see if I have updated it or download doxygen to generate a current document set." -Title "Doxygen Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">228</Line>
    <Line Disabled="True">504</Line>
    <Line Disabled="False">610</Line>
    <Line Disabled="False">684</Line>
    <Line Disabled="True">1085</Line>
    <Line Disabled="False">1086</Line>
    <Line Disabled="False">1089</Line>
    <Line Disabled="False">1144</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>