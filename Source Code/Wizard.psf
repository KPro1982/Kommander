<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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</Preview>
  <Form>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
tUzLc/Oyn60d03ODs9Wv+o//AyqZJ8sZLwEA</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	

	$archivetime = Read-GlobalParam -key "ArchiveTimer"
	if ($archivetime -ne 0)
	{
		$numericupdownArchiveTimer.Value = $archivetime
		$labelArchiveTimer.Text = [int]$archivetime * 60
	}
	else
	{
		$labelArchiveTimer.Text = "Never"
	}
	
	$buttonStop.Text = "Start"
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	$servermods = ""
	$wbmods = ""
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listboxServerMods  $selectedmod -Append
	$servermods = Convert-ServerLBCollection
	Write-ModParam -key "AdditionalMPMods" -value $servermods
	
	Update-ListBox $listboxWBMods  $selectedmod -Append
	$wbmods = Convert-WorkbenchLBCollection
	Write-ModParam -key "AdditionalWBMods" -value $wbmods
}




function Initialize-ServerListbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = ""
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listboxServerMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listboxServerMods  $mod -Append
		}
		
	}
	
}
function Initialize-WorkbenchListbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = ""
	$mods = Read-ModParam -key "AdditionalWBMods"
	
	# clear list box
	$listboxWBMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listboxWBMods  $mod -Append
		}
		
	}
	
}


function Convert-WorkbenchLBCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listboxWBMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}

function Convert-ServerLBCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listboxServerMods.Items)
	{
		$addonresult = $addonresult + $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}

$listboxServerMods_Click={
	
	$selindex = $listboxServerMods.SelectedIndex
	$item = $listboxServerMods.Items.Item($selindex)
	$listboxServerMods.Items.Remove($item)
	$mods = Convert-ServerLBCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}
$listboxWBMods_Click = {
	$selindex = $listboxWBMods.SelectedIndex
	$item = $listboxWBMods.Items.Item($selindex)
	$listboxWBMods.Items.Remove($item)
	$mods = Convert-WorkbenchLBCollection
	Write-ModParam -key "AdditionalWBMods" -value $mods
	
}

$buttonLaunchWorkbench_Click={
	
	Start-ArchiveTimer
	Start-kWorkbench
	
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	if ($listSelectMod.SelectedIndex -ge 0)
	{
		
		
		$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
		$lblModName.Text = $modname
		$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
		$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
		Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
		Write-ModParam -key "ModName" -value $modname
		
		# initialize elements that require a modname
		Initialize-ServerListbox
		Initialize-WorkbenchListbox
		
		
		
		$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
		if (-not $modscriptsfolder)
		{
			if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
			{
				$txtScriptsFolder.Text = $modscriptsfolder
				Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
			}
		}
		else
		{
			$txtScriptsFolder.Text = $modscriptsfolder
		}
		
		$autoarchive = Read-GlobalParam -key "Auto-Archive"
		if ($autoarchive -eq $true)
		{
			Start-Archive -Comment "Auto Archive"
			
		}
		
	}
	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file. You need to configure this option using the gear below." -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory | where {-not $_.BaseName.StartsWith('_')})

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		# $labelPboname.Visible = $true
		# $textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all links in P:\ and the Dayz game folder and Workbench folder.  This will NOT remove links in the dayz\addons folder as it is assumed that you want these to persist."
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}



$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This is a way to make your addons semi-permanent from one project to the next. This option will link your currently selected addons to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods for e.g. or if you always have a list of expansion mods that you use. Not that the CLEAN UP LINKS button intentionally does not remove these links as it is assumed that you want them to persist. To remove them, you simply delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$buttonCantCompileEngineScr_Click={
	Set-PopupMessage -Message "The `Can't compile `Engine` script module! scripts/1_core: Path not found` error can occur when you are attempting to play on a remote server but still have folders symbolically linked to the dayz folder. If you get this error, try removing the symbolic links either manually or  by hitting th `clean up links` button."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool will re-generate batch files to match current settings."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Important! Changes won't hot load if there are errors, which there maybe even though recompiling on host reports success. Most (but not all) of the time that hotloading isn't working is because there is an error in the code you are trying to hotload."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}

$labeladdedToArchiveName_Click={
	#TODO: Place custom script here
	
}

$numericupdownArchiveTimer_ValueChanged= {
	
	Write-GlobalParam -key "ArchiveTimer" -value $numericupdownArchiveTimer.Value
}

$ArchiveTimer_Tick={
	#Use Get-Date for Time Accuracy
	[TimeSpan]$span =  $script:StartTime - (Get-Date)
	
	
	
	
	$labelArchiveTimer.Text =  "{0:N0}" -f $span.TotalSeconds
	
	if ($span.TotalSeconds -le 0)
	{
		$ArchiveTimer.Stop()
		Start-Archive -Comment "TimedArchive"
		Start-ArchiveTimer
	}
	
}

function Start-ArchiveTimer
{
	[CmdletBinding()]
	param
	(
		$Duration
	)
	$script:timing = $true
	$TotalTimeStr = Read-GlobalParam -key "ArchiveTimer"
	$TotalTime = [int]$TotalTimeStr
	$TotalTime = $TotalTime * 60 # must be in seconds
	
	if ($TotalTime -gt 0)  # 0 in minutes means don't autosave
	{
		$buttonStop.Text = "Stop"
		$script:StartTime = (Get-Date).AddSeconds($TotalTime)
		#Start the timer
		$ArchiveTimer.Start()

		
	}


	
	
}


$labelTimeUntilNextArchive_Click={
	#TODO: Place custom script here
	
}

$buttonStop_Click={
	if ($script:timing)
	{
		$ArchiveTimer.Stop()
		$script:timing = $false
		$buttonStop.Text = "Start"
	}
	else
	{
		$buttonStop.Text = "Stop"
		Start-ArchiveTimer
	}
	
	
}




$button5_Click={
	Set-PopupMessage -Message "This window will populate with mod folders.  It skips folders with names beginning with '_' as so that you can have subfolders in the mod-source for _published, _worksinprogress, etc."
	Show-messageform_psf
	
}

$buttonBreakpointsNotWorkin_Click={
	Set-PopupMessage -Message "This can happen on reload when the game was not killed first. Check that you completely closed the game before hitting 'L' to reload.  'K' will not kill the game if it is paused on a breakpoint in W B. This can lead to a situation where you assume that everything was killed because you pushed the 'K' button but the game is still open. If you push 'L' to reload without fully killing the game, the WB won't connect properly. The solution is to hit the green play button in WB until the game is no longer paused at a break point. Then Kill with 'K' and load with 'L'. At point, you should be able to use breakpoints again."
	Show-messageform_psf
	
}

$buttonAddonRequiresAddonJM_Click={
	Set-PopupMessage -Message "You are attempting to use a mod that requires CF (community framework).  Make sure that you have CF selected as an additional mod.  Click `link to Dayz Addons` on the additional addons page."
	Show-messageform_psf
	
}




$linklogs_Click={
	
	$logfolder = Read-GlobalParam -key "CurrentModFolder"
	$filepath = Add-Folder -Source $logfolder "Kommander\link.log"
		
	Request-Log -FilePath $filepath -InitialDirectory $logfolder
	
}

$button6_Click={
	Show-Link_All_Options_psf
	
}

$buttonUpdateBatchFiles_Click={
	Update-Batchfiles
	
}





$listboxServerMods_SelectedIndexChanged={
	#TODO: Place custom script here
	
}

$listboxWBMods_SelectedIndexChanged={
	#TODO: Place custom script here
	
}

$buttonServerLogs_Click = {
	
	Use-ServerLogs
}



$buttonClientLogs_Click = {
	
	Use-ClientLogs
	
}

$labelClient_Click={
	#TODO: Place custom script here
	
}

$buttonCombineLogs_Click={
	Merge-Logs
	
}

$buttonSidebySide_Click={
	Show-Display_SidebySide_psf
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">244</Line>
    <Line Disabled="True">432</Line>
    <Line Disabled="True">456</Line>
    <Line Disabled="True">527</Line>
    <Line Disabled="True">590</Line>
    <Line Disabled="False">693</Line>
    <Line Disabled="False">1140</Line>
    <Line Disabled="False">1170</Line>
    <Line Disabled="False">1221</Line>
    <Line Disabled="True">1316</Line>
    <Line Disabled="True">1365</Line>
    <Line Disabled="True">1382</Line>
    <Line Disabled="True">1410</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>