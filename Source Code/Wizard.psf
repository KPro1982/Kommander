<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
AJRSSqkFygBAKaWUWqAMAJRSSqkFygBAKaWUWqAMAJRSSqkFygBAKaWUWqAMAJRSSqkFygBAKaWU
WqAMAJRSSqkFygBAKaWUWqAMAJRSSqkFygBAKaWUWqAMAJRSSqkFygBAKaWUWqAMAJRSSqkF+lYH
gObmZu1/VUsIoJRSSulz39oAUFZWpj2ur6/XVpBSSimlz5U6KX/71tD+8BcLAGJ1dTUqKysppZRS
akKpk9JJNlVD9fqLBgC5CkAppZTSH9dU/ewPf9EAQCmllNJfRgYASiml1AJlAKCUUkotUAYASiml
1AJlAKCUUkotUAYASiml1AJlAKCUUkotUAYASiml1AJlAKCUUkotUAYASiml1AJlAKCUUkotUAYA
Siml1AJlAKCUUkotUAYASiml1AJlAKCUUkotUAYASiml1AJlAKCUUkotUAYASiml1AJlAKCUUkot
UAYASiml1AJlAKCUUkotUAYASiml1AJlAKCUUkotUAYASiml1AJlAKCUUkotUAYASiml1AJlAKCU
UkotUAYASiml1AJlAKCUUkotUAYASiml1AJlAKCUUkotUAYASiml1AJlAKCUUkotUAYASiml1AJl
AKCUUkotUAYASiml1AJlAKCUUkot0AERAGpra1FXV2fRyjYwtW3eVrnPDVrafn+b5TGt/3huaahF
V7Nl26lsqjdPu/CLB4Dq6moUFBQgOzsbOTk52l9LVLaBqe3zNiqNRHFxsbbelrzP8/LyUFVVpbvR
pL+80o7l5+eb3M+WpJ52rLWxFl7JZVhrn4eVdhaqTS62OOUhPrcCrSoMVZvYTv3pLxoApOGTRlCK
QXNzs2ZTU5PFKest20C2xdteDIzFX9a1sbHRovd5RUWF1mhK8TC1rejgsG87Zmp/W4J62rFmVewC
08sx62E+XNMakFDSgvjiZoszsaQZtom1mGmVi6T8yjd+JeAXCwBygEgDKD3Azs5OCF1dXRapINtA
toVsk7c5BMi6SdFraWnR1tvU9rAEjRQWFmqN5tu8z99me7Zjxv3ad19bioKxHausrHylYxotddik
er5PU+q16aitaMECZ4IqccavUNsuprZXf/mLBwBJi4IcOJasINvibQ8AogSAtrY2rdEwtS0sRaG0
tBRFRUXa56emthUd2LId663wOu2YFLp1DnkIyW3UpmFq2paiYBVXi2NeBQwAA0ljyn0ThUtgALAs
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</Preview>
  <Form>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
tINXm/5lzniWfbde/1X78X+bcFfclvoAAA==</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	
	$usebatch = Read-GlobalParam -key "UseBatch"
	if ($usebatch -eq $true)
	{
		$checkboxUseBatch.Checked = $true
	}
	else
	{
		$checkboxUseBatch.Checked = $false
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive -Comment "Auto Archive"
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your the currently selected mod to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods. To remove them, just delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Changes won't hot load if there are errors, which there maybe even though recompiling on host reports succes."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">242</Line>
    <Line Disabled="True">518</Line>
    <Line Disabled="False">621</Line>
    <Line Disabled="False">1075</Line>
    <Line Disabled="False">1105</Line>
    <Line Disabled="False">1156</Line>
    <Line Disabled="True">1251</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>