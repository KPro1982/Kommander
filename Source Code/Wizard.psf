<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
4oNwLjPQWQd+jq2/fPuhOAx+fLALx8db1+vNPBeMGbDmt6bxszyYli93+fZNZBe4LNdj6o8PteF6
+P2Smad8e18FkcrifHcaAKp82UteY/XtvNy5TW7LBDh7HjP/Hfn13i7zU5Hv8nJUbMfO7+11sB7K
t8s64YOHuD57ufLymW0yP8YkXL96DqkbF2Jolz7o17c3pszyx9FTF3GV1/Kt/HqX4esGwN6OVZYK
cTtML//uXZbyaVwn96U1n1fd22WxtlWxTmtfe9WdPf1e1925LicDYKXZ67XrkNs1v8u35VUmk4/y
bZaX3zufVh1aaXeuuyqqbACoym2lfL9X7GMzn5XmVU9Xrt/C5SO56N3mc3Qeuwanr920hlva66uu
ZACEeDBkAGpAtgHgTXAsW10UA5xtAJzS67R4gDfB5trNm7jJyz/Xr5vPG1bvAttR5flZVtsA8Hvl
9Loi5s02AHU5n5RtAKqVT2s/Xqq4jHfttlFwnLcKkgEQ4sF4pAaAj/clt/gQn7vgljSWx/vgyLMf
GgIaBH7yt53Gx6dWTuOyXAfTeBCz03gGVRNpnMbf9qd9ZmbPz0/+dkrj8t5p9vzcnp32TWWuapqd
d+8073Ldrcz8zoDglGYvZ+edaZRT2r3K/E1plcvFtMpl5idNgFOavRx/3yutcrnsNKcyVzWNn6xP
pt2rzPebxk87rSpldkrj9rgNfqd4bxDT+b/lJ483NOvcbuU0mkrvNK7nm9L4m2kUv3Ma0zgPf3MZ
ptnbuVcaP73TmNfKaXa5Kqfx9/2kcR2V07ite6UxP5XT7lYfldM4zamu7HU9SF1VLtc3pd1Pfdwr
jeuonOZdZu+0+60P7zT+tuuD3zntQerDXo6f9v+M8z0oj8wA8IDAjIeEhGDnzp3YvHkzCgoKEBUV
hcTEROTm5sLf3x+7du2Cr68vtm3bhpiYGMTHxyM/Px9+fn5WGh+Cwt9xcXGIjY215uM0pnGevLw8
JCQkIDo6Gtu3b7fWxbSAgADk5OQgKSnJ2ia3zTwwLTAwENnZ2UhJSUF4eDgKCwtvp23duhWZmZnw
eDwIDQ3Fjh07rDR+Mi01NdUSv3OdGzdutD6Dg4ORnJyMtDQ+tCfAWifTmCfWAfORkZFhlZlpmzZt
ssoSFhZm5Z/bZLm4HaaxzBEREVa5mVeWi2k+Pj5W3bFMrC+WkdOYxnn4m9OZznXY+eM83D7TuE2u
Y8OGDVYa85SVlWXlg2nMF5djPpmWnp5u5Z/lYHnsNNYj64n1GBQUdEd9sH44nemcz07j8nZdcb12
fTCN22Wds32wPrh/7bpiWbiv2D6YV7uuWC62gcjISKt9sPz2/rLrim2D4ne7rjgP5+UyXJbr53aY
xnXb9cFt2mnMC/PEemQemVfvuuJ+5/5n2VhGp7pyajusO++6suvjYbQd1pV327Hrip+sH7vtcD67
rrg818P1cb2V64rbr+m2w3q6W9vh+pjG9TON7Zh54jaYD26T+bKXY1mYN7Yd5pXlseuRZWaZWG6W
kWVmGj9ZP6wLit+90zgvl+GyXIfdPrhuboN1xW1y23a5mCfuR+aReWWe7f8g2xXbDsvG+mA92mls
V6wP1hXrg/XANH6yrtjeWB+cz64PLs+6Yjvlerl+O43bZdtlfTA/leuKbZ7/C5aD7cK7rvhfcaor
/uZ/jOne9cHl+V/i+rheuz7suuL2mQ/mh/my64r55X5k/lkO7/rgfmd57bqy64NprB/Wk11Xdpm5
POetqbZjp9lth2X0riu2F9YF68SprrhM5bqq3Hb4ncvzBIIm2FUGgM6mpKTEqih+stIPHTpk7Qge
OA4cOGDt/CNHjlgNtKioyNqRrIiDBw9aO8JO42/uEKZzPk5jGufhergM18v122lcN9O4Le5gpjEP
TGPF7t+/3wr43InFxcW307gj9+7di927d1s78fDhw1YaP/mbaRS/c347jTuSy/CGLe5gpjEvTOM2
uC1uk+u307hd5o0GiXllvuw077pi+e26YplZB6wPlpvf7briPPzNZVhXzCMbPfPGPxHnY0Nmo2I+
ePBgXtkQuX3mkflhvux65HzMN8vGcrA8dhqXZV3s2bPH2kbluuJ0pleuD++6qlwf3nXlXR9Mu1vb
YV15tx2nuqKc6orLcFnvtsPtchvcL9ymd304tR07jWVhmVg27/pgmnddVW5XnPdudVXTbce7rrzr
w64r7/rwriuuh+ur/D/zrquH2Xac/mcP0na866om2g7ndWo7TOM27Lryro9H0Xa4vru1HebjXm3n
XnVVW23HriuWx05jOe9WV6wf1gXF75xW3bbDfN/tf8byOv3P7LZTua44T+W6ssvl3XaYxrzSFPBE
mj1prjIA7NJg4GfhbNjFYWMXxp52rzTvgleev7bTvHFKs5d9VGn2b7pG6n5g1y/vcbCpvB17neRB
0siD5P1hp1WeZs9LHnUasdMfVZr9m1Sev7bTiJ1eF9IqT7PnJY86jdjpjyrN/k0qz1/bad44pdnL
Pqo0+zepPL93GmMoeyx4HHedAeA1CzotdrEQ+9rLnap4JoAXdw7p+0r2e094c5FTuqOu3TnUzx7v
XxnrMcJeur2tG87bKl/nV3l3mude8s5H+TT7+QOmeNe/Pv+d+ubt8hoSnSU/CRvX3US4r+iQeb3J
aX1SbevOfWzzzW3jIet2w/3qWqokSTUvHot58/DKlSutEzTXGQDeA8ACsCvD++aLr1R+kDu6Px2r
Vy7F0mXrkVxQat1BXDkgszIunjiIsGA/7Cw5f5+Byj6Ilt8wwmXOHduLEJ9NWLXcbG9puVb5xeEk
n+53vTzYc77zJTvgs3ENCo9e+Nq2rl2v2Ak3jTsLWYWQtF33mZ9ycd6zJbsR4OOD5G1F1u8b1y8i
M34rfHwjcfRM+Y0lTstevWbyeeU80uKCEZ174K7zMfCz64qfbDTlwf7OxmMbAKbLANQlsS1eQFZE
AKI8hda+Ki2Mx4pVW1B0mjcFPZqRNXyvwvVzxxAZthWZ+8rUViTpIYrHbsZRXpqwR6C5rgeA16ZW
rCh/Nn7lArIs++MW40+/+hm+GLcci8Z0xne//WNMDdpmzV+ZExmr8O//9BQmRfBJ+Xdy45pXYLa5
eQGz+3+MEes85kd52r6IafiXv/gzdJ+yHps3b7J6J3xCknHJSv0KPiEvLjYSB8oqp5iy7U9Ah9YN
EFZ4FruyYuEpKKpI+Qq+3rZydgjLTfZHz8a3nnoK33tvkPUY3lvH0vDCt58yO+aXCNlT/n4Ab9jj
YHdKwCzR4oVv41ddy5/h79Rj4mQAaITKduUgNi4Buyv2pwxA3ZPZZYZStP7RX+CZ1jNRWhCJ3333
b/B6uykovWjtNi9u3bVXi1i7/S7wyZqVueEwje3rdlM+k4P/+c+/RcuF/E/diVNZJEmqmngs5rDc
hQsXurcHgAXgjRdf7wEoP9Akzm5vMvM9LMk9juu4gvC1cxCQyFcFX0PsqvkYOGQ4+o6fj8IzN3Fh
mw9+/p9/h7mJZ3Dr9AHMGz4KQwcPxZQN0bjIA92Vw1g8cRj69uyJ8Ys2YVdeOH5vgur3XmmP3WXl
29sXORM/+ZfvYnnKMZw+fRLHy07g/OULiFw1Gf0mrURKzEb06TMFnpw0LJw3DXmmxnbHr8bI4SPR
u0tX+CbsQPKa/virP38Kn49eD/81s+CTVIBtUWvRrWs39OjdEwNnLcZRPiG4bB/mDh6I/v2/RI/u
3TDT32PVAzkYvwj/YQzAU3/3NBLLbuFg6Fj8FX9/+yUkHb2EvenrMLBnP/Tq3cd6RwK5cGg7pg0Y
gMH9uuKX3zcBYehGa/r9GAByemckurdoizGjB+DtjxshYW95NJEBqFsqj8HH0Pu5H+I/f/En/O4n
P0LD/stR/g+8gOiNU9G7d390HzwMGfuP4/yhTIzs0QPdTLvvM3gUJowZjp69umOiTwwOF+VhAtN6
mLRBIzFh7AgrbfTqUJy7chERK+aga5+BGDqgHybM88WZ65cRvHA0unbrjp59emLGlkjLeJZmx2Jk
ry8xuEtTfPcf/x/6+2SjJNsfY8z/om/3Tljon2pdHqjccydJUtXEYzeDPm9WdGUPAEcB8M5IDk1h
xr9WQJ66XC7Dqll90bLpR3j92ffRf/IalNy6grTFvfCdH/wvNianYOSnT+PXn47EvrwQ/P6/v4NF
sYUY88kv8OtGI5GR5I+nv/cvGLQlE5GTmuMf/+sVrF25Et36DkJEWjpaPfd/8WLnueZgV34qdCB2
Hn7893+DT77oj0GDBpjgPADzAzwoiFuM//72/8Hf/+Wf4/VO87E3eRX+7V/+GvPC4tH0P/8KL7ce
hOkju2HiijDsSliJn/7gHzHZ14OuL/2FCcTrsGngO3jqH3+G6fPG4vs//CdMC8/GlEa/w0/e6of4
mAg89x9P4T9bzrTyQGgA/uvPeMb/FNpM88P8zq/hr//qr/CXP30PfkHr8eKPvo1WE4OxbmxnfPeH
v0ZgZiEGvPkT/KbBWKRG+eGV//prvDz4/g0Az/SvnD2B0nOsh6No98nb2JjDF8/IANQ12QZgwGs/
t9rHU0/9E6bElvcy5W8cju999wcYvyEOE1q+jP96oxnC/Bfg/5n5Ggydi1bP/i3+4VefYOH4VvjW
T/+E+cum4t9M2kcD5+CLl/8Rf/uz97Fw0hf4y3/7BdbGZ2HBiF6YtjEa6evH4wff+X8YuzUV/Z7/
G3z3pdaYOfIz/O1vXkJ8agI++fm/4MMvNyDVZyp+8N1/Qv+1Aejxu3/C/9bvjtkTemPo9FXWU/9u
POp7FCTpMRGPxQz8HDboyh4AGgAObeCQMwagOwvI5+1fxcHCPBTs5d3nV1CcH4kmf/gWfj9wKua2
eg3/919+i0FjRmNIzzZ4r+s4ZCf44Olf/htmBQbig7/7C/ypfnuMGjMWbZt+jEFrfTHg2f/CnxqO
L8+AxWm0efFbqDd6a8VvXgKYgZ9+/18RWlwx4TY3Mb7ej03FfBt+fNFd4Rr85IffxkpPGXaEzUOX
Fs3R/ouGGDl3Kw5n++HXP/su1qYdxfB6/4x64zZj0+AP8NsPu+F82UE8/9sfotv8Rfjo77+F7qty
rbWPavYr/PyLOdZ3sjdyNn7z439FvXffwbf//p/wD9//HTq1a4wf/OFNTBjdFf/xFz9FCgPBuRT8
50/+A33mz8Frf/k3GBVe/r7Yrh/+GM/0WWN9v18DUN50riFmwzRM9Uu03ljItyfKANQt2Qag29P/
iufq98GIL97AU//yNLZduIXNvd/C9/6znnXZ6EbKNPyf//4D5i2agt/83Xfgu/MK5rb+IZ7rucI0
9FB8/8d/wKhpY/Dbv/9/WLftEpZ2+hn+YMwtimLwr//2c8yJ3Ia08CXo3a8PRg/qgR/+63fQdWkQ
hr3zr/h8chTOeJbhn37zPOYsGIufPvXP8D/KfO3Dc7/7d9OuM3EoaTV6tGqKDh0bo//oRSi9yHtZ
Hs39CZL0uInHbgZ+PjvBlaMAOITh2LFj1hjMrxuA8teLRs3pgn/5259gSWQu9u1KQ8P/+R7qjdkE
z6pR+I8fPIs5vvFYNbI7Ji0Px5HszfiPbz+FWRHbMKHBM/jVhwMRExqA4V06IGxbCULGf45//K+X
sXr5cnTq8SUStu9Bz5f+D37dbAKOn7ti5WtP6CR8+//7/2Hspkzk5+dY3SsFhfsQv2oQvvtP/4zf
/fx7+H3DociOXoZ//+5fmoNkFpZ8ORzrAlIwrO2/46lf1YcnYTN+/a9/jkHLYtDh+T/HG8PWYW3v
l/H9Z5ui5MA2/Ow//hZdlkVgXL0f4qfv90VkqD/++K//F7/vVv5eebJz6zj8q9neSn9//Micof31
b9sjcPmXeOoffol1/uvx8k++gxbjt2LN6I745//6LfzTt6Hrs/+An386Fls3rcS//cVT+N/eq611
PYgBOH/Eg0nL1sDEEoNuAqyLKjcApWj5g6fw26bTcOPCYTT62f/Bf5l2meRrztS/90OMXReDcc1f
wo/eaI7QLXPxz6YNLU0/gXGf/D1+1nImzuduwLe++98YOmEofmDS5iYfx/Qm38V/NR6PC9v98Df/
+COMN/+T177/FD4dtAoRG6fgr02barcwEH2f/Su8NcgXxZHT8dT3f4n1IVvxzg//Eu/23wjf2UOt
XokuK4KwfsRoLNuQiGn9foOn/vmXSCzif6zy/1ySpKqIx252+7t+GOC6deusaV8v4A3cvH4W8Sun
YVj/wRg9ZgBGzfHBCSs6XUfM8jnoZ6b37T4MEekluFyaj4ljBiJp/xXcPLkPcwYPxOCBAzBs1BIU
nbpqImEJlk4ejn69emHM3FU4feEy8rdwHcMRv6PUuv5+Yk8KxpoznoGDh2Do0CEYMmQIJkxYjDnT
R2D03BDsL4xC376jERUfjWmTRyPjYJnJxxT0/nIwBg8agIC0Hbh6pRQbJg7EoPGLMG/6YKyKyUNO
8BJMWrgJZ04cxYxJIxCYdwwX9idizPARVp7/+x+fwq86LbDqgc+4P1YYi/GjRmP7kTJsmNofS8ML
cWxbKPoOm4Z9Z69gT9o6DO71JXr37Qe/xPJehGM7YzGkT1982bcvunXrgSUR5fdW3LcBMJ8lueGY
s9Cn/MZDM00GoO6J/4sbN85g85ShmLEmwtr3JVn+6NljALYdO4oU/1no02cAeg4ZgcwDx3HuQBpG
9xmIjEPnELt2DGZsTsalw7kYOX4GIuMjMWXgYKQeOIukjeMxdUMcLpVsx4hRk5G29zAyw+ZiyPBh
GDSwH3r0HICgrB0IWTgCy8O34dTuJAwYOw27T1/DgVRf9OrVD3179Ub3HoMQsf0g0n3moXefQRgy
uD82Rnus1wc7tUVJkh5cPBZzFN1yY9Qf02GA5Qe7yvA9/xzudifm4GLPevPa1+58tsZHV7rt/o67
nG+WBzanO/PviVmuMk55trlmDoLlXMf6ae3xevuh2LB6Cn7xb9/HyM28ma/8Xojb+TBmwMb+dsvs
+MrwwFqpyBbedekt2wCwEdkGgBQlrkGPHmPN+aXByxhwGXv+yuuSHoW+arv8bTeXWzcqtwKvUQDm
f2FztXITdUq75dSivvqD2G301nWv/9Ftvr6sgr8k1Zx4DGcc5RMSXT0MkA8yIE6FfFzFQHqm7AA2
r1thHNwKhCQVWgH++jXn+Wta3D7vv7jfJwHSqB09elQGQJIkqQ6Ix2JXDwPkPQBlZWXW85jv1gPw
OOt2Z0AFtTlEiu6R9c9RGHyetP1sbCcxnc+m5k2bTuuSJEmSalc8hjPo890DrrwHgAGFgYVvZLK7
maXaEx0kTQDP7ukk+VlZ9nTuKzY4p/VIkiRJtSsevxn4+YZB1w4D5I1lfJUmrzU7FVJ6uGJQZ0P6
Jin4S5Ik1R3xmMzAz9cku3oYIN8GKAMgSZIkSfcnGgDe+JecnOzeYYC8xrx27VprmlMhJUmSJEm6
U+yZ5eXZZcuWuXcYIK8xcxgDM16521mS6qpu3KAezY2rdP6EvWaS5FaRJ/Hm75oSjwOMo64dBmiP
AvAPDEZuXgFycrdLkiuUkZmL3Xv2mwNZ7R7AaD5onNevX289QItvq5QkN4qvWj9w4IBlBpzaunRv
8VjAE+hFixa5twfg1KnTKCjchctXruDKlauS5AqdPHkK2Tn5tW4AeMZ0/Pjx20//4gFAktwmnq3y
JXCpqalWPHBq69K9xR4ABv2MjAx33gNQfgngJAp37K6YKoQ7uHjxEvLyCx6ZAdi0aZOVD+/LEg9b
3HblblzJ/eJ+ddrfD1MkLi7OugGcOLV16d5iPTLwb9myxc33AJy0egDIsX058Gzbi6tOTyCtIqeL
C5CaU4hLlR99+pAp3pmF3N2HHB/PK9zPhQsXH6kB2Lhxo/Vnd5rnYYhnG+U9dqekx0S8gYyBw96/
lff5wxSJiYmRAaiGaAC4/4KDg93dA2AbgL2hU/D0x41x0Kwq2n8BgnPLX217B7du4rL9HPRblxGz
eS4GDx6IgaPWYP/5rxf+iGclnn3vXSQV358D4B/hmonat87uw9S+XdB/pt/tZ/CfP5iM3u07YkVY
YcWUu5O0pCteeK8LSuUAHkueJAPA/8TZs2dx6NAhK3DwYFM5mEjuE/cjh2HzEd8ckVWbJoDIAFRP
3F+8lMLLKI+FAcCpAnzRsx12nryBcN95xgAcKZ+O6ybolzeashxfdBw9DReuXEWOzxi0GjwZhw/v
Qv8G7bA6pcIw3Lpq5q+IvFePoEev5ojZb5uGa7h85U4zcP3KZZS/ffgcJo/thbWph3Htynks69cE
3/rHn8Bvxzlrvo0jPsTf/v0LCN5laqmCK5cu4lqlOr9+xZwp7QpC1y59caj8LcPiMeNJ6wHgA7t4
gGHAKCkpkR4D8V0gNHbcp7wuzzNKp33/MERkAKon7i/24vBmysfiEgBKMtC6Vxds27kD/ft0gt/2
0zhdlIiZw7qjb/svMHFNINbMb4Ef/fZpDJq1EVGbp6PBp50Rm38ct65fNRVwFcd3x2Jwr97o3fkL
rMzaaU7pj6BTt2ZIPgqcPpyCYX36oE+XdliSWv4K3eyQxejcsQtaNGuHOUtm461nf4y3m/REZP4h
pIb6omfThmgz1R+nzdn/kF7t0aLlGOSwqNfPIWTmVPTs0QttW3aDX2aJmXgDSZtnoXXbXujY4TO8
3X4Ajn/9xX3iMeBJMgA8O2Sw4JM7edCOiIhAZGSk5HKFhIRg165d1nGYJoBty2n/PwwRGYDqiT0A
jKOuHQboZABadWuHg+aEe/awzzEndR8yl/fDux93Q2pKLnbtOYmjWavRpN9wXCxfAjlRs9HozXfQ
Y7wvLt26jqnt3kWXycGID5yEjxr2R+npw+jRszUyj5/Fom4focM4PySETsfHDfpi54F0dPusBdKO
X8LRPUnYXXQQI/o3xZqM49a6A1atRGhIEHq2ro/mXYchPiIU3dsMRPYNYG/AeLRqNw3nrt3E4bDF
aNByPHbti0WHxh2Qe+ImzuauQdPWvXHE6U2pwvU8qQYgMTERsbGx1g1ckrtFE8AHsfFYLAPgPrEH
gD03rh4GeIcBOJGH9n0746gJmssnt8f8uP24Yc60t66bjU4dv8CM0FyUZK5D08HjrdnzUlNQYnWx
F6Pr++9jVWIGhn7yIlr1mYx582ZjwpS1OHHmCPr174RtJ8swpv5zaNZjvEmbg4lT1yIncQM6tBqL
y9bayAX07/UZfAvKyxK8djVS9p5G6LiWeLXdDOBmKbq36I+dJi1xVjt0HuFnzYfTqWjbfAjCQxai
dZsx1qRbewPQtecglD34/hAuQAbAOahI7pEMgLvFHgAG/fT09MfjHoDj6WvwhxefRXB6AfrU/w0a
j1mFCJ+lmLF4M0Z1aY4WY7ei9GA86n/wERasSsXiKd3Rsmc/rFk7H917D0HGoTKELRyGTkNnIjA8
FOk7inBmbxSef/F/sSqjGNErxqDj4GkIDA1BSt5uXDy5G4O7NEDvWYvgszoMu4+cwoKBn6JRh/nI
yM7G4E4tMGRFKm5eu4jTF6/h9A4//P7nv8fsxGKc3xWJzvWaYNaSlRj9ZRf0WBqGK6d2oFvrDzB4
2SqsXTgEz/3xDUTsPWmVTTxeyAA4BxXJPZIBcLfsYYD+/v6PhwEo25+DAP9A5BbsQEJ4AIKSt+HI
/nz4rF8Pn8AEnLK6068jNyYMURlFuHHzPJJjNmPduvUo2FvebQ9cQ2K4L9b5BuPUdeBS6S6rgjL3
lFmpKVF+WLd5K46ZgE4ulhZio1l/fMYh6/f5I4UmD/E4Yg6ysYG+iMjea00np4q2wT/AH55t5Tcn
ntibifXr18E3OgeXrCnA2UO52LhpM7L2H0JqdBByDpyqSBGPEzIAzkFFco9kANwt2wDwdfqPhQEQ
wi3IADgHFck9kgFwt+xhgB6PRwZAiNpEBsA5qEjukQyAu2XfBLhkyZLH5CZAIVyCDIBzUJHcIxkA
d+vxGwYohEuQAXAOKpJ7JAPgbtk9AIsXL1YPgBC1iQyAc1CR3CMZAHfLvgeAdah7AISoRWQAnIOK
5B7JALhbGgUgxCNCBsA5qEjukQyAu2UbgICAABkAIWoTGQDnoCK5RzIA7pYuAQjxiJABcA4qknvk
ZAAYVHhm+TDEddttisgAVE+sU90EKMQjQAbAOahI7lFlA3Dz5k1rH3NIGV8zW9Pi8d42AUQGoHpi
XXLfaRigELWMDIBzUJHcI28DwDbFgFJcXIzS0lLrd02prKzMMhiHDh2yghS3Q2QAqif2ANBY6UFA
QtQyMgDOQUVyj7wNAIM0xS7lhwUDFA2GDEDNiPVIQ5Wamqp7AISoTWQAnIOK5B5VNgA88+d3wssB
NSm2VbZdGgC2KSIDUD2xB4Bn/kFBQTIAQtQmMgDOQUVyjyobAHbTM4gQpyBeHbGtMmDJANScWJ8M
/H5+froEIERtIgPgHFSk6is+Ph7xDtNrWtUyAKbtsf1RjumVJANQ8+IlAO6vjIwM9QAIUZvIADgH
lZpQfHwCPCYwMDikJCU6zlNjio1DcqoH6Z4UE3RNucy2U9PS4UlJMulVK2d8YhLS09PL827WTyUk
pZhpaUhKjC+f5rCcJWveZCQnP+RyG1XVANgh5uZN+9s3mwAZgJoX65P3bCxatEg9AELUJjIAzkGl
eoo1wTMZKcnRWDx3GqZOm4NNAaFISExwmPfeYh6TUzzwmEB69/zGIyEhGhuWLsTC1ZuRaOaPjwzG
0vmzsWjFRsQkJD7wmTjzGua/EXPmLYBPUCSSkxJMQE9CVIgvFs6fh02BYXctT3xCEpLig9Dzs9fR
vO90Y0xSjRn6+nw1paoYAIaXq6d2YXbfzujarQs6DpuOorPXrLboNL8tGYCaF3sAuO80DFCIWkYG
wDmoVEvxSUhNNAGwWQO8/mk7fPH5R3jmvVbYmpKDvJwMpCanIjsrEynmLDohKRVZ2dnIzkhHolk2
1gTzZE86ss20DE8yUlPSsG7pNExfvRX5WR6z7kSkZ2aZ9CyzfEJFGRLgSU/AxA7v4//7q3/G6BUR
yPUEo8Vrz6Bpn6mIM4Yg1ZNWsU4G40RkZOcgK8MYhfgEpJkz+kQToFPSzHqz0pFg8pGYnIJIn9n4
/b//HX7yemtEevKQnxGLnvV+hb/+599h9uZIpKaacqZnWOvNTPeY5WJNfsx6PBnYsacQiwY1xjuN
+yLB/K5zBsC0uYvF2+ATGGvOOg+g5Ru/xpSww/dchpIBqHmxPjkMcOnSpeoBEKI2kQFwDirVUXJa
BtZN6Y4/vNgIQZ7tyEoKxbQJk7F63TIMHzAWS1cvQrc+X2J5QDRi/FegZ5eu6DlqEkJN0E1OiMLq
GWPQvVt3jFlkzt5jtqD+Kz/Fr1/7BNMW+5j0UIwb0BNdu/fD6tAIc2Ze3sWeYs6yNy2Zio9e/COe
fvUzBGZkYG7/HpZxyM70mLRp6NKlC0bMW4bomAAM79kd/cfNRkxUOGZPm42A6HgsmTwAPfuNR5Ax
FAkJychMDcXgtk3wi1/8FiNWRSN6/WS88+zv8eanAxFhDEx6ciJWTB6Nrl27YvC4uYgyZibNk4R1
CyajZ+/eaNr4bdTvPASJKel1zgBQdog5uysCvUdOwp6T12Aao+O8tmQAal72MMCUlBTdAyBEbSID
4BxUqq54pGenYFzHD/Bhm1FIN2f27BLPzM2DJ3AhnvvJL/BB9z74vEs7jJoxE50afYTuI2aiY8t3
0X3SKkRsmY+hg4Zh6pCuePr5elgdHI5ODZ/BG027wicgECM6N0DD9iMxvn9TfNyuL6KSU5EQH28M
QDKWTx+JoWPnoNfnL+ODDiMxbUhfTF8bgsh1k/HRe59i1JRJaPzZh5i0YhN61TfrbDca0YFL8fsf
fg+DVwRiZq+maNh6NGLSUiwD4InzxZe9B6FP+8/xfsuuGNirC/p064YPGnZHRF42lo/sjk8+6IDZ
s2fgs1ffRPuxqxG5fiLefbMehk+dhw6fvYK3Ww9BkqeOGgATY66f24GxE4fDc+TiN85PyQDUvFif
PPMPCQmRARCiNpEBcA4qVZcxADmpGNf+fbz0cT+k5WRb18+jIqOQGeePJm+9hn4LtmJHYSFClg/B
7/7zf9CiUw80/egtNOk83pydh2DO5Kno37o+fviL57AyNAMT+nyK9hPXoLggFJ/87qd4q2F7dGrd
CG+81RIbY5KRklBuAFZMH47eo5YjJWQBnv3VL/Dc659iaUAkVoxojv/5nxfRsXs31HvlVfSd6oOQ
1ePwWdMumLt4Ljq3a4m2PYdh8tihWB2ejLSkeOsyRlq8L3p2GYT1m5bj9f/6J7zQaiyCFk/E2x/3
RFx+LDq+/Uf0nr4V+w/sRcC0/vioSR+M7tsczTpNw87iI9gwuTMafTEQ8XW1B8C0uwuH87A5PAk3
zLy3bjnP5y0ZgJoX65OB39fXV5cAhKhNZACcg0p1lJSaga2Lh+G3v/wTRq0Jgu+CCaj3yRcICtuM
9//4e3SautG67h+5aQpe+d/nMGTWSixdMA9rN2/CsDaf4KMvxmDF7CH4z9/8FnN9EzG2y7t4v+0I
BPmuQZO3n8HnPcZj7crFmDF3CcLZXR8fj1RPEhaM7oWWXSciq3A7lo5sir/5s+9g/OYE+M3qgWee
/RCzV67FvFmzsMY/DBlxfmjwwo/xZqOBCN26BK/++L/xae95SE5LtW4YjE8wxiJyLVo2boMlW8Kw
ZNpozNkYhqDZ/fDb5xogMCMdY1q/jY+bDkVUVAT6t/0Yn/WdjmXjvsAL9VrBLz4aQ1q+gZc/7Y6Y
5HQkJDjXVU2oqgaAHElaicYft8ceOgCNAngksocBZmZmqgdAiNpEBsA5qFRP8fCkJmLZtL74pH4j
NGrQCJ1HLUaQz3zUe/stdBg0G/HpHqQmx2GBOWv/9LPP0X3ASGyNicX6JRPx8SeN0W/4OLRv/REG
zd6IoNVT8Mm7jTFuYSACfZegVbNGaPFFFyzZ6G/diR9vTEBKahQmdGuBDz/rji0xKchKCcGQzl0w
Z0ME0pIjMXZIDzRu1gyDx89AaGw8MtKSMG1gW/QctcTMG46eLVti4qqQimGDxsSkJCNw5RR8+MGH
GDp/E/Jy85CbmYQ5wzrijbc+xMz1EUiO2oSeLT5Dk8aNjSkZik0xSUiP2Yp+nRqgYcceGDKkNz5t
2AzL/WORmvTgIyDuV1U1ANTV8ydx8EAxLjukOUkGoObF+tQwQCEeATIAzkGl+mJQ9piAmozklFRj
CJIr7rhPN4Gf4+q57fJ5Us08SUlJ5iw5HknJKWbeFPM7Gelp6Ugy0zj2Ps2TiiQT7L3Tk0wZbm8v
1gTt5PLtWOuOT4SH4/V55m2+p3o8SE5OKt9OfLwpO+/WL39OAEceeKzx/uXTb6+T6zDLMQ+xFduw
nwPAUQMc6uhJM/kyefGkmk8zX1xC+TLJZjssG/P9sB8GVB0DYIeZWw5pTpIBqHlpGKAQjwgZAOeg
IrlH1TEADyoZgJoX65PDAJcvX64eACFqExkA56AiuUdOBoDfiVMQr45kAGpe9jDA5ORk3QMgRG0i
A+AcVCT3yMkAnD1rIsBDgm3p0KFD1ieRAaieaAB45h8aGioDIERtIgPgHFQk98jbALBN8bOoqMgK
JjyzpBmoCdnr4tk/b1pj4CIyANUTe1R47d/Hx0eXAISoTWQAnIOK5B55GwCe/bM9MZDs2bMHu3bt
wu7du2tE9rq4DQYttikiA1A92cMAs7Ky1AMgRG0iA+AcVCT3qLIBYNtiUHG6hl8TsoM/RWQAqifW
J3tUFi5cqB4AIWoTGQDnoCK5R04GwGn/PwwRGYDqiWaN+y4vL0/DAIWoTWQAnIOK5B7JALhb7AHg
MMAVK1aoB0CI2kQGwDmoSO6RDIC7xR4AnvXzP6l7AISoRWQAnIOK5B7JALhbNAA88w8PD5cBEKI2
kQFwDiqSeyQD4G7ZwwB5LNAlACFqERkA56AiuUcyAO6WPQwwOztbNwEKUZvIADgHFck9kgFwt+xh
gAsWLFAPgBC1iQyAc1CR3CMZAHfL7gHIzc1VD4AQtYkMgHNQkdwjGQB3yx4GuHLlSvUACFGbyAA4
BxXJPZIBcLfYA8B3LCQkJGgUgBC1iQyAc1CR3CMZAHfLNgDcjzIAQtQiMgDOQUVyj2QA3C17GOCG
DRt0CUCI2kQGwDmoSO6RDIC7Zd8EmJOTo5sAhahNnkQDwE8GfwaOqKgoyeUKCQmxXtPL43BpaakM
gMukYYBCPCKeJANAFRcXW2cYPNPgQUdyv8rKyqygweDPu8kZUJz2/cMQkQGonjQMUIhHxJNkAOwD
zYEDB1BUVIRDhw5Jj4n2799v9e5wHzvt+4clIgNQPdnDAFevXq0eACFqkyetB4AHG/5nedYoPT7i
mSP3rwyA+8R9xlEAvJ9DowCEqEWeNANA8YDD7VM0BJK7Ze9Hp339sEVkAKon2wBER0fLAAhRmzyJ
BkCSakpEBqB6onljD866det0CUCI2kQGQJKqLiIDUD2xB4BBX8MAhahlZAAkqeoiMgDVE3sAOJpD
wwCFqGVkACSp6iIyANWT3QOgYYBC1DIyAJJUdREZgOrJvgdg7dq16gEQojaRAZCkqovIAFRP9igA
1qOrRwEU7thdMVUId3Dp0mVs277D+u7053xYkgGQHgcRGYDq6bEwAKdPn8H2gp3WQY0vG+FNDSyI
/djRS5cuWQ+s4CefemSn8XvlNE5neuU0+/rI3dJYiUzjtu208rydttKYV6Yxf95p7HZhGqd5p3E6
xe/eaZyX07msdxrXzTRuyzuNefFOq1wfD7uuKteHXVd2fXinVaeu7rc+KqcxP3Ya88K0+6kPpzRO
p+5VH95pZWUnkJCYYvJ3yvojOv1BH4ZkAKTHQUQGoHqyLwGsWbPGOo7yGOU6A8ADuZ+fPxYvXoxt
27ZZjzXkG8f4sopNmzZZQxyYlp+fb13riI+PtxoOX4HImx8WLVpkfa5fv/72W8o4LjIvL89K4/I8
WPJhCQkJCVZlcV1cZ3Z2Nnx8fKyXmyQlJWHVqlW307KysrBlyxaEhYUhJSUFK1assPK3ZMkSZGZm
wt/fH8HBwfB4PFi2bJmVtnTpUqSnp2Pr1q2W+J3TmMZ5OC+X4bJcB9fFNK47NTUVoaGh1ja5bbvM
K1euRHJyMiIiIrB582Yrz3aad12xjHZdseysK9YF64R1411XrDvWIeuS89ll5vKsc66P6+X6veuK
22c+mB/mi2ksA/Pr5+dn5Z/lWL58+e26ysjIQEBAgFVu/tkr11VQUBACAwOt+ey64vJcD19WwvVW
rivuj/DwcPj6+n6tPrgfuT+5X73bDvc79z/bgXfbYV2xvbCeKO+2Y9eVU9thmVmvYWGhVlB2+oM+
DMkASI+DiAxA9eT6mwBZCL6NisGE8OBGbt68ebsg9jTvNIrUVBq39aBpnP5Nad7TCOf9pjTyoGlO
eSBVTeO2HjSN078pzXua/Xm3NK7nm9LIg6Y55Y88aBp/8ztNCnsmaqsXgNt8VAaAZZQePznt64ct
IgNQPT0mwwBPWGdVPLA5FVKS6qJ44GT7ZQ/Bk2AAWD6W075UIj0e4nH4UZgAIgNQPXG/Meizp9OV
PQB8vzjfMMauXOJUSEmqq2JA5OUJtmOn9IehR2EAeKDh/5WvBD527Ji1fenx0NGjR6196rTfH6aI
DED15PpHAfOGKjZAXotml6pTISWpLsoOivPmzXsiegD4yljer2PftCm5XwwebMM8BvMGVwYUp33/
MERkAKonHnP4n3Tty4BoAEpKSqwbt2QAJLeJgZ834DzuPQAs3+HDh63y8sZS3iTKg47kbvGmXd6D
xUtZ7AWozcuwRAagerINgGtfB8wDy/79+607z4lTISWpLsruAeCIhce9B4D/U/YAsJwcHWKPtpHc
LY6W2bt3r9WOZQDcJ/bYsOeGo59cexMgC8DhXbXZ+CSpumLAZw8WD6QMkDIAktskA+Bu8ZjDoM9h
y669CZBdUBzbTZwKKUl1Ufzz0cDyeQQyAJIbJQPgbj02wwDpYNQDILlJDPhsw7wDV5cAJDdKBsDd
snsA+DA01/YAHDx40Hr6XW0dzCSppsSAyCcCsh07pT8MyQBINSUZAHfLHgbIZ5G4sgeABxQOQeEB
RaMAJDfJ7gF4EoYBygA8npIBcLd4zOEoAO5H1w4DLC0ttZ7tLgMguU0MiHwKl3oAJDdKBsDdsg0A
31Pi2mGA+/bts7owiFMhJakuyu4B4Hss1AMguVEyAO6WPQyQxyBXDwPcvn17rTY+SaquGPDZg8WD
GAOkDIDkNskAuFv2SYirhwHu2bNHwwAl18k2ADyIygBIbpQMgLv12AwD5ONU1QMguUm2+16zZo0u
AUiulAyAu8VjDoO+a4cB8oDCYYD+/v61djCTpJoS2y//fAyQTukPQzIAUk1JBsDdsocB8lH6rh0G
yAMLG4JGAUhukt0DoGGAklt1NwPAtvywZLcpIgNQPbE+Gfj5NFJXDwNMTU2VAZBcJwZEDQOU3KrK
BsA+BrMrmcPLalpsR7YJIDIA1RPrkvuK/0lXDwNcv369Nc2pkJJUF8U/H9vwqlWr1AMguVKVDQC7
lLmfKT6grabEV77zs7i42NoW/ytEBqB6socB8iZ6DQOUpFoUD2LsweJ71b3PbB62ZACkmpK3ASgr
K7OOxWxbDwsGqcOHD8sA1JBYj9x3GgYoSbUsGQDnoCK5R5UNAC/H8jvh5YCaFNsq2y57AdimiAxA
9WQPA1y4cKE7ewB4AGXD0zBAyW2y3bcuAUhuVWUDwMsADCLEKYhXR2yrDFgyADUnHnO4v/hCMlfe
A8ADSlFREQIDA2vtYCZJNSW2X90EKLlVMgDuFuuTgX/z5s3uHQbIa0JRUVFWI3EqpCTVRdk9ABoG
+GBKSEi0Xv6VkpyEhPh4x3ketuJNHpKZhwolm7zEO8wXF5+AJFPer02vpMRElsU57V5iPrj9xISv
6iEhIclMS76PuomHJz0T6anJiKvi/qiyAbDm8OaW83xekgGoefGYw8AfGhrq3mGAbHQej8dqJE6F
lKS6KgZEPQjo/hQbG4ekVA8SYkOxasVyrN0YgFgT5BwDb03J5DMxKQVpJkjaeU4wwTYiJBAbN23E
2lUrsXzFSqzf7I9oE1DvyIvJW2x0BIJCQhBr0m5PN4o1SjFlSUlKsLYREhKE8KgYxD+ACbDyERyA
DT6+iIiJNybATDeGID46HL4+mxAUFmUMgrMJoHFIjAlEv9b10XPsEsvMVKUeq2IArEB+oRgbJg5B
3379MGzeRpy6csOa7jS/LRmAmhcNAG/8S0pKcvcwwHXr1lnTnAopSXVRdg+AHgV8f0pMTkG0/zI0
/vBj1GvaBi8++wo6j12ElDQPkk0wzcw0Z7NpqSaQmaCd7EFGRpo5Ey6fnmwCYWJyqvWdQTfJmp6B
RBOk7elp5qw5zpiMlLR0pHnMmb1ZZ3ZWDsL91mDO6s3Iyki3gmRSSiqCVk3Ac7/4Jd78pBk6tmmO
V//4ARYGJmNbbjY8yUnGqKQhN287ItdNw6dt2iIwKtUEWZMns53M9DSkJydjzcoFWBccjx2Z8ej6
RX2MWhJoLc8ypHrSrfkSzfbKzYL5zWWN0k3eyvORguBVE/Hrf/8HPNekPxIzcpGXEYd+jf6If/qP
P2LO5ghT/iQke9K8lou1jFSyWV/BzjxM6vgO3moyEElpGbVqAC4cSMfcBWuwc1cGGr3yS0yPOHzP
ZSgZgJoX65MjN5YvX65hgJJUm2LAZw8WD6IMkDIA95AJ1Olp8ejX5E283Wo0snfthM/88Rg8bh5S
s3MQsGI+hg0bhsnzViHZBIQtaxZi8rRFWLtyHkaMGQ/f6FgErFuEsePGY5VvsJU+ZtRE+EXFI3TT
MgwfNhyz12xGqtnG8tkzsXjlRqxYNheTFyxB31Yv439e/gBTF6xFNM+wE5KRmeiPdh/Ux6wtSchI
isCmNX7wXbcYo8eMxbLNgfBdOhejJ87Cwlnj8eW4GYhLSkNM8BqMGzkco6bPg1/Acrzzws/xZtPe
WL54PgYOH4b1fsFYOX8m5i5ajcVzJ2K0mS/MbC/VGIpNy2dZeRw7bhymzl2BqPiE8nwkB6Fno3fx
41/8ATP8UhG7aRre+P3P8crHAxGVxe79FPgsnGXVzcwlG5BozEtKajICWH6zrk6tP0KjbiOMYSk3
N451fw9V9RKAHWJulqajZ7+ByDp8CaYxOs5rSwag5mWfhOTn57t7GCDfZ0ycCilJdVG2AeBBTAbg
3oqPT0ZK3AZ8/NILGLE0BNmeRCSZM/cME+R85o5Co7c/x2AT5D5+6U10nbgG0WtG46c/+CO+GDwW
bd57EQ26T0DgyvH48Q9+gAFLQrBmVFv86aUWWL5mJpo1aIz+wwbh088bYMnWaMzt3gg//O276DSo
LV5v1RGdmr2K3732AcbPXomoCgOQYQxAy9eewWvvf4LnX30bE1fHIj1kCV795U9Qr894TPqyGep1
GIG5I9rjDx+1QFiED1q/+Tw69RyCjo27YNby2Xj/5V/i7aa9sGzeVLz65nMYtyIIi/o3wX/894cY
PmEY3vrjHzFgoT+i1kzEW+9+iL6D++J3P/8RGvSdac7gzdm8yUdqtA++7DUA7T+vZ8o4DKP7dUan
tl+gXpM+iM7PwdpJA9Hw3ZYYMWwg3nv+bQyY549Yn2n48O0P0HPQSDR8/xm8134kUjy1bABMjLlx
aT+mTR6CsF1l1vy3HObzlgxAzYv1+VgMA+Sd1OoBkNwk233TvOoSwL1lGYD4dXjn909j8PytyElP
QWKSOQNOj0L3es+h/ch12HNgP4JmDcSrH3RHYsIWfPpmAyyIzkLQ7N74uFlPZJiAOLj5R+g5biFm
jRuA2X6RWDW8Kf7n16+jz4B++OC559Fr6maELBiIP77dEsGpWcjKzsei0V+gfq/R2Fm4HQkmL7Em
8KbF+6L1ux9g+Jx1WL1yGTZsCUVGzjYkBS3Fm8/8HE2HzULerv3GiEzA202aIywmAr3Ntt9r2AYT
F2w0Z+ap6NbmXQxeForDBSlo8/mbGLEyEgnLRuPVD7sicXcBxnf4EN0mrIb/nJ546cP2CIoKRJN6
b2PMihBkepIQZxmAjejeZQjWrJqNZ3/wHbzRbix8Zo/C25/2QUJ+NL5480/oOzMIBw7sxrpR3VCv
1UCM69sUzTpPx67iI1gzrh0adRiKxNruATDt7uLRfGyMSLRuCORvp/m8JQNQ8+Ixh/uLl4hcPQxw
69attXYwk6SaEtuvhgHeh+ITzIE+AX3rP4dnGn6JhNwszB3YC33GzsKI9h/h01ZjkZaVhRnmzPuN
ZsOQFrMW7734MRZEerBhUke89ml7xGXvQtCiIfjt736Oxl+ONuvIx/IRLfG/f/oIs5etwvTJk7F2
azQ2TeiC379hDECKMQBZuZgzqAleb94DW/1CEWICTkJiCtLifNDsjXcxekU4tmXGYVSPLliwORCr
p4/H4C874u1338WYdZEIXzkaL7xXDxuDIrBu9TosnzMEv/nVs5iwaiu6NX3FGJdliA/ajIYfP48B
i4IQMXcQXnqvM+IKMjGwxRtoMXQR0kJX4fMP3kL9xp+h7+hpSPCkIZE3C1oGYAM6tO6OjSERmGDO
/sevDEHInIF49q0vEJ3nQb/6L6J59znIzkrFqE4N0KjnJMwc2MTUUV8k5mZgZNu38X6rwUiq5R4A
cjRlLVp+1g37bvCXDMCjEOuTgX/Lli3uHgYYEREhAyC5SnYPgIYB3p8SklKRELwK7Zq+i3qfNcbL
73yKYQsDkRi2Bl988iEaNvoMH7bohCWh0QhdMhrPPP0cBs9bjym96+F3z7yFRVvikZsUgJYN3sXw
pX7IzEhDXIQvendphcbNW2DQuBmITozChK4NjCl4Fwu2RCAtIwMha6fg/ZfeQpchSxGZlGS9eCxg
+QS8/qdn8PZHDdGk4Yd48502mDC+D1576QOs9A1At8Z/xK/fbI3hX7bF0396BSOmzkDHzz9G8xZN
8GmbPvCPScKS0Z3w2hutMW78JLzz4h/QsO94zOjfGn98viGWbVyHtu//Ea+27I9lM0fig7ffQduO
ndCseWP0mLbUGpmQkpoCvyVj8MpLr2HYgi3Iz8tDbmYipvZugt8//Rrm+MYixm8hmn/wPj5r1AAf
teuJ1eEJSAlZi1afvYFPOvVAr87N8dq7jbBqa3z5iASHer+XqtUDUHYQHmOyzt28ZX47z+ctGYCa
F+uTgT84ONjdwwDT09N1CUBynRgQ2f2mHoD7UGycFfhSk+IQHhaKqLh4JCUmWJcCkhJjERYWhph4
E6CTE63HK8fGxSAm2sgEibhYfpptJpgAmJKCJPPJ4XcJiclINoEvnMua9XE8fbQ1vwmenN9sl2P0
47m8+W6PrY8x648x80RGhCE0LByx8WZ9MdGIMstYZTN5jY2OQmRUdPm6zO+42CiTx3DEm/VZ+Taf
XA/v8uf8MWZ5e9tW/mPjkZYaj5EdG+GTFv2x0dcHgzp9gFda9EBccrr13ABrGTNvdEVe4+KY74p1
mE+OWEiMjzF5DLN6DFhWljkpPhbh4ZHGVHHkg/fyD6aqGgDqNg5pTpIBqHnxpIM3/tHUunYYIBvg
2rVrrWlOhZSkuii7B4BDWNUDcP+KN0E4wQRwBmO729qexk9rvtu/mWbm5Xeveb27uysve/u39zwV
67J/2+u/La7Tmla+7vJt2tPK1307H+b7V+uoPI/XOsy05JRkBG9YhP6tWqJVq1Zo13EoNgdGWwbC
Ox/eebu9vtu/K23XnnZ7e1/N+6CqjgF4UMkA1LxYnxxFt3TpUg0DlKTaFAM+2294eLgVIGUApK8p
lpc+UpCemWH1cmakp30V/OuAZADcLfskxPXDAPlCFeJUSEmqi+Kfj5eweCCVAZDcKCcDwCBC2LZq
UoQG4NChQ1abIjIA1RPrk8MAFy1a5O5hgHycqnoAJDfJdt98CpcuAUhulLcBYJti8GeA5nGZ+7ym
dfToUWs7/K8QGYDqifXIoM/eJdcOA2SD412MtXUwk6SaEtsvX2XNg5tT+sOQDIBUU/I2ADz7Z3vi
GeXOnTuxY8eOGhfbkG2UiQxA9cQeAAZ+Pz8/9xoAXhPiHcAyAJKbZPcAaBig5FZVNgBsW2zHDCz8
rGlxvXabIjIA1RPrk13/fI6Oa4cB8mCWkZGhSwCS68SAqGGAklvlZACc9v/DEJEBqJ5oqnjZhm/T
dfUwQL5RjTgVUpLqovjn4yiADRs2qAdAcqVkANwt9gBwFN2SJUvcPQywoKBAPQCSq2QbgNDQUCtA
ygBIbpMMgLvFYw73nYYBSlIti38+XsLig1hkACQ3SgbA3WIPAG/aXLx4sXuHAfJglpWVpR4AyVWy
3feyZct0CUBypWQA3C0ec3jWzzp09SgAdqPW1sFMkmpKbL8aBii5VTIA7hZ7ABj4AwICZAAkqTZl
9wDMnz/fasfqAZDcJhkAd8v1BkCXACS3igGf7ZdDWBkgZQAkt0kGwN1y/SUAHlh4E+Dq1autaU6F
lKS6KP75OApg06ZN6gGQXCkZAHfL9TcBahig5FbZBiAkJEQ9AJIrJQPgbvGYw33n6mGAbIDqAZDc
Jv75eAmAAVEGQHKjZADcLbsHwLUPArLvAdCjgCW3yXbfS5cu1SUAyZWSAXC3eMxx9aOAeUDRy4Ak
t4rtV8MAJbdKBsDdYg+Aq18GxAOKXgcsuVF2D8CTNgyQB+2IiAgreEjuFo+7u3btsu5lKS0tlQFw
mexhgK59HTAvAZSVlSE7O7tWG58kVVcM+Gy/6enpVoB8nA0AxZ46/mePHj1qfT98+LDkcvHki2eQ
PAbzWrIMgLvEYw6DPo9Brh4GqHcBSG4T/3w8c9q8efNj3wPAsjFQHDx40DpTZHcxPyV3i/uRZo6q
TRNLERmA6sm+CXDRokUaBihJtSnbAAQFBT32BoDiwebs2bO3zx55SUByt7gfaQRqs/3aIjIA1RP3
GeOo64cBrlmzxprmVEhJqovin4+XAJKTk5+ISwAUTcDNmzelx0hsT7Ud/CkiA1A98f/IE2iORHLt
MEB2Q/EahnoAJDfJdt98CteT0AMgSTUpIgNQPfGYw7P+1NRU944CYDcU7yrWwUxym9h+n4RhgJJU
0yIyANUTewB45s/RHK41AEVFRdY4Rh3MJDfJ7gFYsGCBegAk6QFFZACqJxoABv4tW7a49xIAh6Dk
5OToEoDkKjHgs/3yAPak3AMgSTUlIgNQPfGYw6CfmZnp7mGAK1eutKY5FVKS6qL45+MoALpv9QBI
0oOJyABUT+wBeCyGAW7fvl09AJKrZBuAwMBAGQBJekARGYDqicccxtG8vDx3DwNcu3atNc2pkJJU
F8U/Hy8BpKSk6BKAJD2giAxA9WQPA1y2bJm7hwGyEXBMqlMhJakuynbf7H5TD4AkPZiIDED1xGMO
z/r5LBJXDwOMioqSAZBcJ7Zfdr9pGKAkPZiIDED1RAPAM//Q0FB3DwPkdVQdzCQ3ye4BWLhw4RPT
A8AuR25ferxUW23XW0QGoHqyhwHyfSSuHgbIh6mwIToVUpLqonjQZPv1eDxPxD0ALB+vN/JtgNLj
I74LgDez1rYJIDIA1RP3GYN+VlaWu4cBrlixwprmVEhJqovin48HTr6L+3HvAWDZONyIL5Ch6WF5
+Sm5W9yPPHPka4Fr2wQQGYDqyR4GyF5IDQOUpFrUk2QAaNT5ylgGjR07dmDbtm3Wf1Zyt3j/CnsA
ePbINlWbx2AiA1A98ZjDOOrqYYD79u3D+vXrrWlOhZSkuij++RgQ+SKOx/0SAMvHs38andjYWERG
Rlo37kruFm8e2717t2VkORpLBsBdsocBsgfdtfcA0IHyIKpRAJKbZLvvJ+EmQG8DkJiYaJmAuLg4
yeWikeNzWNiOZQDcJx5zeNaflJTk3lEAPLBER0fLAEiuE9vvkzAMUAbg8ZQMgLtFA8Az//DwcPca
gIMHD8Lf37/WDmaSVBOyewCehAcByQA8npIBcLd4CYDX/jdt2uTemwB5F6OGAUpuEwM+L2E9CY8C
lgF4PCUD4G7xmMOgn52d7d6bADUMUHKj+OejgQ0ICFAPgORKyQC4W/YwwAULFmgYoCTVpmwD8CS8
DlgG4PGUDIC7xWMO953rhwFu2LDBmuZUSEmqi+Kfj5cAeABjO5YBkNwmGQB3yx4GuHLlSncPA+R1
VI0CkNwk232z+009AJIbJQPgbvGYw7P+hIQE944C4POoeUCRAZDcJrZfDQOU3CoZAHeLBuDs2bOI
iIhw77sAOAyQj1OtrYOZJNWE7B6AxYsXqwdAcqVkANwtexggL6G7ehggz6Jqs/FJUnXFgM9LWMnJ
yVaAlAGQ3CYZAHeLxxwGfVcPA+SzqDUMUHKb+Oejgd26dat6ACRXSgbA3XpshgHy7WLqAZDcJNsA
bN68WQZAcqWcDADbMT8fhhiw7DZFZACqJ+4rBn1XDwPcv3+/dTAjToWUpLoo/vl4CSA9Pd1qxzIA
kttU2QCwPTGI8MZs7m9+1pS4Pt6oZv9PiAxA9WQPA1y9erV7hwGWlJRY11E1CkByk3ggYxvWMEDJ
rfI2AGxTPB4fOnTIurOc02pahw8ftrqs+V8hMgDVE+uR+yo+Pt6dowDY4OgOWQAZAMltYkDkeywY
IJ3SH4ZkAKSakrcBKCsrs3oBGFAeFmxHNBhsU0QGoHqyDUBUVJR7hwEeOHAAvr6+1jSnQkpSXZTd
A7BkyRL1AEiulJMBYBAhPCGrSbGtsu0WFxdbbYrIAFRP9jDA9evXu3sYYH5+vtU4nAopSXVRDPjs
wUpKSrICpAyA5DbVtgFgwJIBqDnxmMP9lZOTo2GAklSb4p+PBjY4OFgG4JEqFvEJSUhJSUZC/FfT
4+MTkJySgsSEeK95JW9V3QDcGWSc57lTMgA1L9an64cBsgAaBii5TbYB2LRpky4BPCTFxsXDk5Fl
znCykZWVhezsHKSnJt+x/fiERIRv9cW6Tb6IjGHg57QERIUFWXUUGmUMQvyDmYDk1DRkW9vLQEpi
vNne1+fhOrmt29/NJ/OblpaO5LssU9dUVQNALh07iNzcPBw+VR7MnebzlgxAzcvuAeB9SK4eBujj
42NNcyqkJNVF8c/HSwAZGRnqAXgYMmfwiXHhmDasJzp06GCpXbu2GDNvLZKSk28H3aSUdAQuHoHf
PvNHTFkbgYzURCQmexAdsACv/eZn6Dl1EzLTkq11frMRiDfBPxk+S6eiffv2aNdxKFb6RSApKcFK
916ePQz2NH6nkmJCMX7cMKzyj0RKxTLWPBWft39by3jn5SszUZuqigFgeLlU7MGXLVug/6C+eL9h
M8TvNVHjHstQMgA1L9YnA/+aNWvcPQyQBxU2EqdCSlJdFAM+2/D8+fPVA/BQlGDO/hMxus2reP61
5li0ap0JOm/g9TaDkJadh+RkE3BTUuDxeJAeF4QmDV/HmGXByM7wIDUlFVnZiejf4h10H78Smelm
WmoKkhJ5qSDVulSQkJSCNE8qks1nakq5QUgyZ/7BK8fjo08+xNSVK9DmzbfQou8cpOVlwWOMQWJS
spk3BelJsRj65RcYvsgPhemx6NerLSauCkV+chj69m6PeRvDkZHmMcEtxaqvFLOdpAQT5BOSrHwk
mnww30kJxuQkp5iyJJmyJJv8GdNQiz0HVe0BuHq6FLsPnzFznUe3+i9hXmzJNy4jA1Dz4jGHowD4
f3TtMEAaAL7OkI3EqZCSVFfFgKhhgA9L8fBkpWHB4GZo3WUaCvbuR3TgRmwKDMKyscPx+SeN8NEH
jTB+sT+yE4PQ6NPXMWF1NDyR69C5WSM0afw5/vji0+g70wd56VEY168TGjT4FK2HjkZ8WjxGd2iJ
ph0Hokfvpnir7UBEJxgjYIJRwJKheOHp1zBtQxSSYiMR6BeG+Ogt+NLM36jBR+gzeyFC/OfiDz/7
Hn778qfoO6gTfvPzf8HTrzfFqOED0KhtR2zw34rhnZqhQfN++LJnC7zfqA3WRCQgNWILenVsjPoN
Psarr76GjsPnwG/1FHRp+Rnqv10PIxauM2Yh5Ws9Bg9LVTUAdojJC1+Mkcv8cf66+WHaotO8tmQA
al62AWA9unoYoC4BSG6T3QOwdOlS9QA8FBkDkJ2GxcNa4Q+/fx3NP6+PDz7rhrUrJ+Oj1xtjhX8C
fKb0xwsvN8OW0EA0bfQWpm8Kw4T2H6JRl6mIiw5Ayw9fRL85fvCd1gXPv/oZ5i+dg09efwkjlgRj
w5j2+NHTH2HqqvkYNWMeomITrW78dBOQ1szpj1f/8Ed82GIIIjJyML17PbxSvweWLxiJ119+Gws3
BaFj09fRZcIKZMQGonH9l9Fv5kZkRG7Ce+8+h0nrY7F5bCf87JmW2BwRiLZvvYAv5/lhzeiWeLlh
H8TG+eGN55/FyFUb0efjZ/F+075YMn0RVq4NQGJKokNdPBxV2QCYGHPlRC7Gz5uHo5et2R3n85YM
QM3LvgSwdu1a3QQoSbUpBnz2YLH3igFSBqCmVWEAhrfCxw17YcWKRZg4eRamDmqK9xv0Rfquw9iZ
shGfvPox5m/agjbNP8LcDRvQ8b1XMWJpNPbvSseA1h9g+BI/LO5fH7/4jQnYPXqgecNmJuiHwndK
TxOMeyIhpxDZ1ll3rClbPLZsWAvfkARszwpGuzeeQdthMzGo+at42pztd+/eBY0bfoGVW0LQueXb
GLhoK/ZmROHzRq9jzJpI7PaEoEnjtzHTNxnB0wfiw5bDkLU3G4PbfYhB8/wRuWo03nr3Uwwa0gtN
Wn2BDRHJiPRdgS7tGuO9Rq0xbU0QkpPdYABu4fSeFCxd4YdzZt5bt5zn85YMQM2LxxzuL1ffBKhh
gJIbxT8fDWxoaKgMwMOQORv3pCdgePPn8ewrLRGUlI3cvFyEb5iOes+9gl7DZ2Fgl6Z4o3U/hPit
xHNP/wx9Z2/A5J6f4pXGrTFr8XS8+/ufoGG/WfBdOBzvvNsQU+bNx6zZCxAcE43pnT/AD37zATZE
p1h3+nObnjQPlo3rhFffrYeZC6ajzecfY6BZ55JxnfF2/baYt2AOZs9bjJiEWPRp9jJe+7gXVq7a
gC+avIj3mgzFohmT8PTvfoT2E1dhYZ8m+NmzzRGcEIyGz/8Ub3ebjLC1M/HpG6/iw08+Rb8xsxEd
G4phfftg8oypeO+5p/HZgHnwZKTV+UsApCRtI75o0Qf7b/DXvbv/KRmAmhfr87EYBqgHAUluk20A
NpizTl0CeAgyBoCjAOaMGYA+fQdhTUAkkhMTrLv0/VbORo/uPdBj4AT4xiUj2hiAfn36YNLiTUiO
CcWYQT0wYMpcLJg5HkPHTkdMsgerFk5Bjx49MHv5eqSkxGDBpGHo22cY1gdFlt98Z7bJIYVx0UGY
OXmQNe/4KQsRm+RBanIMZk8ebqb1wrJN/tZNfcEbFqFfr2FYGxSP4HXz8OWX47F0+TIMNAF97Jwl
WDx1NPoMGIcNPhswdmBfjJw+D6P7tMXHLbtj9tzZaNP0VbzXfThWzJuEHj17YtDY2QiNNWX+xpEK
NaeqGgDKDjO3HNKcJANQ87J7AFz9ICDeA8BXqhKnQkpSXRUDYmZmptWOndIfhp6cSwBfPQcgOzsL
yQkcWx9rVH63fnZ2NrIz0810E7gTU6zf6alJiDNBPCMzG5lpqeaMPgOZ6eVn1CmedGseT0qStY7U
9EzkZGdad+ffMWY/PhFpJs1aX7rHujTAEQnl07KQklRefg415HMCksz2E1PSkJWVboxFCrKyc5Dh
SUGK2XZ2lklPTEJGdi4K8jyY2L0FGn7cFqNHjUCbJp+h97gFJi3P2lZWZpoJ/iyzV14esqpjAPgw
ILY/57SvSwag5sX6ZOBft26de4cB6mVAkhtF9802rGGA0n2JQ/7iIrB2wWxMmzYNi1f4ITk5tcJg
OMxfC6qeAXgwyQDUvHjM4SiA6Ohodw8D5PPU2UicCilJdVUMiBoGKN2veIkhxZNmBT0+V6C2rvXf
TU4GgN9J5QBeXbGtsu3qbYA1J9sA8P/o2mGAfBIgH6dKnAopSXVRdg/A8uXL1QMguVKVDQDbFe/J
eljwnhn2APC/QmQAqif2qJw8eRKrV692702ALICGAUpuEw9i7MHi5SsGSBkAyW3yNgBsU9zXPEMv
KiqyAnVNiuvl/V68UU0GoGbEemTQ1zBASapl8c9HAxseHi4DILlS3gaA3f/sqrfvyzp8+LC1z2tC
9roYoHjWyjZFZACqJ9blYzEMMC8vTz0AkqvEgM82zDtwdQlAcqMqGwC2LbZjfla+hl8TsoM/RWQA
qifuKwZ91w8D3LJlS60dzCSppsSAyNfUsh07pT8MyQBINSUnA+C0/x+GiAxA9URDxcDPZ5G4sgeA
BxR2N7Ex0iE6FVKS6qLsHoB58+apB0BypWQA3C0eczgKgPvRtcMAS0tLrQdoyABIbhMDIrvf1AMg
uVEyAO6WbQD4PhJXDwPkwYw4FVKS6qLsHgDewKoeAMmNkgFwt+xhgKtWrXL3MMDt27fXauOTpOqK
AZ89WAyGDJAyAJLbJAPgbtknIbyJ3rU3Ae7Zs0fDACXXyTYAERERMgCSKyUD4G5pGKAkPSLZ7nvt
2rW6BCC5UjIA7haPOQz6fJmUK3sAeEA5ePAg/P39a+1gJkk1JbZf/vkYIJ3SH4ZkAKSakgyAu2UP
A+SxwLXDAHlgYUPQKADJTbJ7ADQMUHKrZADcLR5zGPj5NFJXDwNMTU2VAZBcJ/UASG6WDIC7RQPA
bn/+J107DHDfvn1Yv369Nc2pkJJUF2X3AHAIjnoAJDdKBsDdsocB8iZ6DQOUpFoUAz57sKKjo60A
KQMguU0yAO6WfRKiYYCSVMuyDUBUVNQTZQD41DEeuGkCJHeLQ1h5/JUBcKfsYYALFy50Zw8AD6Bl
ZWXW+4zVAyC5Sbb7Xr169RNzCYCffGw3TQB7AiR3iwGYL2Nj4OC9WDIA7hKPOdx3fCGZK+8B4IGz
qKgIAQEBtXYwk6SaEtvvk3ATIA80fGkXzTrLTOMuuV/clzwOFxcXW8+U5xml0/5/GCIyANWTPQzQ
x8fH3cMA2Y2qUQCSm2T3ADwJwwBZNpqcQ4cOYefOndi1a5f0GIndyLUZ/CkiA1A98X/JwB8aGure
YYC89uTxeGQAJNfpSekBoHiwoVhm6fER225tmVdvERmA6on7jTf+JScnu3sY4Lp166xpToWUpLoo
/vnYhtesWWMdSGvrIEoDQNO8efNm6z8jhFtJSkqyTv6IU1uX7i17GODy5cs1DFCSalMM+OzBehSj
APifmTVrlvUALbp/SXKbeObPu9fT09OteODU1qV7yz4Jyc/Pd/cwwJUrV1rTnAopSXVRtgFgN2Zt
GgBuh9vjnb8cy8078iXJbYqPj7dGIjBw1fb9B4+LWG+PxTDAnJwc9QBIrpLtvmlea/MSgC0hHgd0
3K+6eMxh0M/MzHT3MMCtW7daGXcqpCTVVbH90rzyjNwpXZIk6WGJPQAM/L6+vu4dBnj48GHrkZQy
AJKbZPcA1PYwQEmSJIoGgIE/JCTE3cMAeSOIuoIkt4mBn9fi1QMgSVJtiycdvPGPT+d07TBAvoxi
7dq11jSnQkpSXZTdA8AhrOoBkCSptmUPA1y2bJmGAUpSbYoBnz1YfKFKbY4CkCRJouyTEA0DlKRa
lm0A+FY1GQBJkmpb9jDARYsWuXsYIB+nqh4AyU2y3TdfZa1LAJIk1bZ4zGHQz8jIcO8wQL5gJDg4
2Mq4UyElqa6K7VfDACVJehSyhwH6+fm5dxggX0UZHh4uAyC5SnYPgIYBSpL0KGQPAwwKCnLvMEC+
2YxdGLoEILlNDPx8Cpd6ACRJqm3xpIM3/vGdIK4eBsg3qhGnQkpSXRT/fBzFsn79evUASJJU67KH
AS5ZskTDACWpNmUbgLCwMI0CkCSp1sVjDuNoXl6eu4cBrlq1yprmVEhJqovin4+XsPhWMxkASZJq
W/YwwMWLF7t3GCDvAeDjVNUDILlJtvvmU7h0CUCSpNoWjzkM+nyUvquHAfJlBsy4UyElqa6K7Tc3
N1c3AUqSVOuyhwEGBAS41wBwGGBoaKgMgOQq2T0A8+fPVw+AJEm1LtsABAYGutMA2JcAOJRKlwAk
N4kBn+2XQ1h1D4AkSbUtHnN4419aWpo7DYB9E+Dq1autaU6FlKS6KP75OApg48aN6gGQJKnW5fqb
AO1hgAUFBeoBkFwl2wDw/hX1AEiSVNviMYdx1NVvA+SDgNQDILlN/PPxEkBCQoIMgCRJtS67B8C1
DwLSPQCSW2W776VLl+oSgCRJtS4ec3jW7/F43D0KgE9TY8adCilJdVVsvxoGKEnSo5A9CmDr1q3u
NQB6DoDkRtk9ABoGKEnSo5BtAPz9/d1pAHgJoKysTE8ClFwnBny2Xz6FS/cASJJU2+Ixh0HftU8C
5IFT7wKQ3Cj++TgKwMfHRz0AkiTVuuybABctWqRhgJJUm7INQFBQkAyAJEm1Lh5zGEddPwxwzZo1
1jSnQkpSXRT/fLwEkJSUpEsAkiTVutgDwBNojkRy9TBAPk5VPQCSm2S7b47BVQ+AJEm1LR5zeNaf
mprq3lEAhw8fRkREhJVxp0JKUl0V26+GAUqS9CjEHgCe+fMypKuHAbIAMgCSm2T3ACxYsEA9AJIk
1brsYYBbtmxx7yUADgPMzs7WJQDJVWLAZ/vlm7h0D4AkSbUtHnMY9HkJ3dXDAFeuXGlNcyqkJNVF
8c/HUQC+vr7qAZAkqdb12AwD3L59u3oAJFfJNgCBgYEyAJIk1bp4zGEcdf0wwLVr11rTnAopSXVR
/PPxEkBKSoouAUiSVOuyhwEuW7bMvfcAHDt2zLqOqh4AyU2y3ffixYvVAyBJUq2Lxxye9fMkxNXD
ACMjI62MOxVSkuqq2H7z8vI0DFCSpFqXPQyQL9NzrQEoKiqyrqPKAEhukt0DsHDhQvUASJJU67KH
AW7evNndwwBzcnJ0CUBylRjw2X49Ho/uAZAkqdbFYw6DfmZmpoYBSlJtin8+jgLw8/NTD4AkSbUu
exggeyE1DFCSalG2AfD395cBkCSp1sVjDuOoq4cB7tu3D+vWrbOmORVSkuqi+OfjJQC+iEOXACRJ
qm3ZwwCXL1/u7mGAvI568+ZNx0JKUl2U7b75FC71AEiSVNviMYdn/XwluWtHARw5cgTR0dEyAJLr
xParYYCSJD0K0QDwzD8sLMy9BuDgwYMICAiwMu5USEmqi1IPgCRJj1K8BMBr/z4+Pu69CZB3MfKd
6roJUHKTGPB1D4AkSY9KPOYw6GdlZbn3JkAOA1yxYoU1zamQklQXxT8fDSx7r9QDIElSbeuxGQZY
UFBgZZwFYk8AD6ben5z+IGn276qkecspzf5elTR7Wm2n2b+rkuatB02zv1clzZ5W22n2729K4ycN
LIcB2vN6q/Jy9rSqptnTajvN/l2VNG89aJr9vSpp9rTaTrN/VyXNWw+aZn+/W5o9rS6l2b/vluat
B02zv1clzZ5W22n27wdJ431zjKG8D8m1PQD79++33mZE98JCcFTA2bNnUVJSYn0eP37cMglMKy0t
dUzjDRDeaXRDTKM7ckrj0weZxu/2urzTKKc0LlM5jevmNpjGbTqlMY9Ms9dlp7FMTKtcZv5mmlN9
8LddHzVVV3Z9PGhdfVN93C3tm+qjcppdH0xzqg+mOdUHf1elPpjmXR/8Y9lp3vVhv8fi6NGjt9Mq
l9le7pvqitt0SqtqXX1TfVROs+vjQevKro97pXmXy077pvq4W9rd6uNuaXZ9MM2pPu6nrrzLxc97
1QfTvqk+mGavq3Kad5nttG+qK27TKe1udWXXx93q6m71cbc0uz6Y5l1m77Rvqo+7pXmXy05zqg9+
2vVRU3Vll5lpD1If/G3XR+W0u9XHvdKYX++68t4Oj0GrVq2y5nHlTYAs0Ny5cxEXF2eJrwamo+HN
Vbw3YOPGjYiKikJiYiJWr15tPfSAadnZ2dbNDxEREUhOTraeJsg0vp2N10S2bNmC0NBQ6xotLzFs
27YNS5YssR6byLO24OBg6y2ENB9MW7p0KdLT07F161ZL/M5pTOM8nJfLcFmug9thGtfNtzHxTkxu
k9tmGvPCHcMhGgwSzCvzzLwzjWVJSEiwRkCwjCwr01h2PheBdREbG4v169ffUR8bNmxATEwM4uPj
sWbNmtv1wccpb9q06XZdcdt2fXC7vr6+CA8Pt/Jq1wfTWBY+zY4vlGBdcUypXVcZGRlWF3dQUNAd
9WHXFacznfNxfqZxea6H6+N6neqK+WB+vOuD+WW+mX+Wg+Wx01hOlpflZvm964r1w3pifbHeKrcd
1i/r2antcL9w/3jXld12uD+968qp7XBdM2fOtJZjHdxv27HriutmXbGdVm47bM9s12zfTm3HrquH
2XaYxu3yWePcZ07/M+5j+3/m1Hbu9j+ribZj15X3/8yp7dj/s8pth3XFeqIeZtthmt12WDYOe65c
V3wfSuX/mXfbuVtd1WTb4bGXbYdtxLvt8JO/Ob0qx+iH0XZYX5Xrg/XK+q3qMbqm2g7ntduO0//M
qe2wru7nGO3ddlgfrHPOzzjqOgNAh8QbqdilQTNA8doGp7GLg5/8zZ6CB0mzf9tp9vx2Gqc/jDRu
0zvN/m2n2fPfbxrllGbnoapp9jR+2vPeLY3Tq5rG9d4rzZ7GT3veqqZRTml2/u43zf5tp9nz22mc
7p3Gbri7pd1rucpp3KZ3mv3bTrPnv980yinNzkNNpNm/7TR7fjuN06uaxvXeK82exk973qqmUU5p
dv7uN83+bafZ89tpnP4w0rhN7zT7t51mz1/dNDsPNZFm/7bT7PntNE5/GGncpnea/dtOs+e/3zTK
Kc3OQ1XT7Gn8tOe9Wxo/2XvgqksALIzdTSJJkiRJ0oPLvmzA+wFcYwCEEEIIUTNUJfgTGQAhhBDi
CUQGQAghhHgCkQEQQgghnkBkAIQQQognkEdmADiEisMX+DADvhXwSRDLSvHOzaretCHKYf2xHu06
darvx1HFxcXW/4b/H+EeONyZD3h5Eo93vEu9KvAQuTrnDLoHHkXvrSXoFfT4qzcVcBTjY8tw+vLD
/48/MgPAgxifcGQ/4vBJEp/mxCc7iapjPxWL42Cd6vhxFQMJ/zcMJsId0Kxyf9Gwej/W9UkQ/580
A3xa3YMSUHgOA0KNaTp7DeeuXMfZy4+/zhmdN2VdmXUKg8OO4dqNh3ui+EgMAP8QPJPhWQy/8/NJ
EeGDHfinEFWH9cfnSRCnen5cZf9feGbFT1H3YSDk/iJP4vGOY9Rp1h+UgWGlyD96qfzHLbOuJ0Vg
0L+FHoFHceLiDav4D4tHZgD4h6Abdmo0j7NYdhmA6sNn8NMAPGkHVFsyAO6BBoD/9yexrbLMVTUA
QyOOoaCUBuDJqzeWuU9wCY5fkAGotirjNI+TvHFKr4pkAGqGmjYANvzOddpUnq+uSAbAPTwsA+CN
U3pVVZPtn+uqqgEYZgzAtpKaNQCV4TTm8V77hjil21SeXhOSAaiGKu8svnvAfuMSn59MvNOdxHUU
FRVhypQptx+z6DTfg4rrkQGoPjVtANg+bLh/+HIN7neneSuLeSBOaQ9LMgDu4WEYAMI2ymMa10+c
5ntQMY88Rk6dOhUHDhyodp65fF0xAKwn+82zrDf7BTpMu1csckrjcnxpD1/8U906cpIMQBXkDX9z
O6R3795o2LAh+vTpgzFjxuDgwYO302yc1sGg0KBBA+zdu7diSvX/ZNyuDED1qSkDYLeD0aNHo127
dta+ofF77733rLebEe+2UrndEK5n586dFb+c25I9raYkA+AeatoAEL5KvW/fvtYxbfLkyVZA84bz
VW6rlddhU/k3j8vdunWz3p5HvJd7UDEPdcEAMB+8cZjH81atWqFfv36oV6+eVW98QyDfslcZLkdm
zZp1x//bhm/kGzx4cMWv6tVTZckAPIBs+JrECRMmYOHChbf/bISvs+RrLAmdLV83SXgnPl/p6H32
x2X4ylQ76A8dOhS7d++2Xt3I11NWN8/MlwxA9anJHgDCV3p+61vfsg4GhAfXPXv2WN8J28m+ffus
/c9XcPJ7YWGh9ZpP6sMPP7Rel0rzwHUyXzyojB071npNqE3lbVdVMgDuoSYNANfBdQ0cONB6JzyZ
N2+edWxiut1OCc/k2fYY5PgqXcJ5CA0EX0vL3lHCAM1l7R5SHkP52l3ivf0HFfNbV3oAyLhx46z/
OuEre/kWPb46mfXD/xR7Pfi/PnTokDUPYwNfZcxP/vdZR/z/c59ymWnTplmfrLea2L+2ZADuU1wX
nd3s2bMxfPhw6x3T7Nqx0wkb8scff4whQ4bcNgIckjNnzhzLxU2fPt3qFuJO5VkfXXXPnj2t+ejw
2Eg6duyINm3aWHmuzo7msjIA1aemDQDfWc6DA90+D47sEaAJ5DAmvmOcB0SeafH95R999JH1rm8e
hDt06GC9l/ull16y0vnObjtPbId8//eIESOs9dJw1kR+KRkA91CTBoDwbLR///7Wd67Thu+i5/Fs
/Pjx1gkL2x+Pey1atMDIkSOtQEcKCgowadIkNGvWzGqvDM40EVyWx1HC34+jAeAJYvv27dG6dWur
nsigQYOwbNkyy8j/5je/sXqJR40aZfUUM9/169e3vs+dOxdLlizB559/bu0DGoU33ngDEydOtNJ4
rKip/7cMwH2K8Mzrs88+w/bt263fxDt98+bN1gGdbpg7ii6PwYMHcx8fH3zyySfWn4XfFyxYYC3D
IE1oBGgC1q1bZ/2u7g7m8jIA1aemDQDPBrjvMzIyrD852wvPnMLDw632wV4kGkD2HnH/MdjzoEH4
fm6aARvv9RL2IDVu3Pj2Adh721WVDIB7eBgGYMCAAdZ3exphj9XGjRvRtm3b272cPLkJCgqyTC17
M0n37t2tkxrCvHXu3NkyCDQQNAxk/vz5j60B4ElgVFQUtm7dak3jWf3MmTOt77wMyDxzPh4TCA0B
e5cZO7gs4waDPU8a2FNIunTpYpWTOG37QSUD8AAi7M7in4I7izvI/rMRBnb7zJ8ulzdvsNeAgZ1p
zz33nJUXHux5psbleNAm3MGLFy+2unO5THX/xFxeBqD61LQBYLcez4oID6Lf+c53rMDOs/vmzZtb
N/uwDbFXYNeuXbfPBthzxIec8KDK/cqDMPNEsWuQZxk8W7MPJk7br4pkANxDTRsAdk9/+eWX1kkL
sc9eaUoZ7F977TUrwBF2UTONZ6sMaoRnvHwOi/1OeRoDnsUyEK5atcqahz1eISEh1nenfNyvWOa6
ZABYRzT53tCY8/9M7IDO/6192WTYsGFWPOD/nnXE+mMvSnZ2tmWwCE8UaQqI07YfVDIADyh7vexy
pfvld4rQ3dLZ8QA/Y8aM2+6XlwB4T8C7775rneERLtupUyfExMRYQeatt96yLiuwYTRp0kSXAOoI
NW0AePbPLlHCabzkY18PZQ8TuwT5Z+cf/+2337baCw+cvKmI8MDZtWtXZGZmWr+Zr+DgYKvt2O2w
8narIxkA91CTBoAifLIgL1nxmMbgxf8C2xoDOW9y48kQDewHH3xgHePYpc/jHAM+gzGDGsV8MUDz
jJ/rY28p4U3TdjCsTr65bF0wAMwH9wP/43Yvrw3/x5xOk0/zxP87642XQ3jSx/87TwIZF+w65/0X
/GTvIE3Bq6++avUIEKftP6hYZhmABxTXa2P/5gGZZ2AcCcCuLt4HQBPAM33uXHbzMiDz8ar28vYN
IAwA9iM8mc5GXN08cxsyANWnpgwAl+dZOw+YPODR+TPQc/gnv7M3gPCyEdsL4bbtNsHv9rrYpon9
26a6eXSSDIB7qEkDwHXwjJXBib0APKbxchXP9NlG2S44DwMUt8tjFu89ofidxx7Ctmy3Z8JjHS8T
EG6H83Idlbf/oGJe6ooB4L08/I/zv87gbYtn8owDNEcsM+vFPu6zvvjd7uljHdld/VzGTuNyvFHQ
adtVkQxADYnBnN24vERAsSuWjo2f/IN4w/mZt8rfvfFed1XEdcoAVJ+a7AHgH9luI2wbdvvgJ7tP
vdvB3dqETeV1PyzJALiHmu4BsLui7TZrt9XK7xfhvJWx82Bjr9PmbulVFddXVy4B8DII64v1Zv/P
KbtH2Amn/zvh+pyovM2qimWWAagB3Qu7sdemuE0ZgOpT05cA7oXTMo9aMgDuoaYNwL1wmv9RimWu
KwbgXjjN/yglA/CYSgagZqhJA+BGyQC4h5o2AG5SdQwA3wWwvQYNgJv0RBgAp4I/7mLZebcoyy+q
zpNsAFhm+22aou5jGwBSeV8+7iI0APy/PihDwo9hxzHeiPskGgCgx9ajOHb+MTQAhH+Iqrwj+nGA
1+p404ioOrxuz5vwnkR4zVI9SO6BB3Qafvupe08aPNbxhroHZYHnJKYkPJn/8dSiC+gVVIJL15zv
QagpHpkBYDc4n67EG1o4xvJJEcvLs7fKNyCKB4OXjxgEn8T2w7u9+f8R7sG+y/5JbK88+7fPah+E
c1duYnxMKXr47sUg/70YGPD4axBlytrZ9yAKj1+pqImHxyMzAISNgt1DFMesPu6yy8kuXFF9WI/e
9fq4y/6v0PwI98H99qS0VYpltZ+lUR32n7iMPccvYe8TIJaTuni1dv7jj9QACCGEEOLRIAMghBBC
PIHIAAghhBBPIDIAQgghxBOIDIAQQgjxBCIDIIQQQjyByAAIIYQQTyAyAEIIIcQTiAyAEEII8QRy
6vy16hmAQmMAdh89bzkJSZIkSZLcoUNll6yT+CobAC5I0UVIkiRJkuQO2cG/2gZAkiRJkiR36r4N
wNChw1IvAjhiFuBCkiRJkiS5V+dMTA8Jj/lmA9ChQ8esUDOjX2Co5RgkSZIkSXKvGPynTZ/1zQZA
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCOE2nnrq/w+ZnkSav24uFQAAAABJRU5ErkJggg==</Preview>
  <Form>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
ahqe505VrOae67ml2eav2o//A5iRfKdQBwEA</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	
	$usebatch = Read-GlobalParam -key "UseBatch"
	if ($usebatch -eq $true)
	{
		$checkboxUseBatch.Checked = $true
	}
	else
	{
		$checkboxUseBatch.Checked = $false
	}
	$archivetime = Read-GlobalParam -key "ArchiveTimer"
	if ($archivetime -ne 0)
	{
		$numericupdownArchiveTimer.Value = $archivetime
		$labelArchiveTimer.Text = [int]$archivetime * 60
	}
	else
	{
		$labelArchiveTimer.Text = "Never"
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-ArchiveTimer
	Start-kWorkbench
	
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive -Comment "Auto Archive"
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory | where {-not $_.BaseName.StartsWith('_')})

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		# $labelPboname.Visible = $true
		# $textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your the currently selected mod to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods. To remove them, just delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Changes won't hot load if there are errors, which there maybe even though recompiling on host reports success."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}

$labeladdedToArchiveName_Click={
	#TODO: Place custom script here
	
}

$numericupdownArchiveTimer_ValueChanged= {
	
	Write-GlobalParam -key "ArchiveTimer" -value $numericupdownArchiveTimer.Value
}

$ArchiveTimer_Tick={
	#Use Get-Date for Time Accuracy
	[TimeSpan]$span =  $script:StartTime - (Get-Date)
	
	
	
	
	$labelArchiveTimer.Text =  "{0:N0}" -f $span.TotalSeconds
	
	if ($span.TotalSeconds -le 0)
	{
		$ArchiveTimer.Stop()
		Start-Archive -Comment "TimedArchive"
		Start-ArchiveTimer
	}
	
}

function Start-ArchiveTimer
{
	[CmdletBinding()]
	param
	(
		$Duration
	)
	
	$TotalTimeStr = Read-GlobalParam -key "ArchiveTimer"
	$TotalTime = [int]$TotalTimeStr
	$TotalTime = $TotalTime * 60 # must be in seconds
	
	if ($TotalTime -gt 0)  # 0 in minutes means don't autosave
	{
		
		$script:StartTime = (Get-Date).AddSeconds($TotalTime)
		#Start the timer
		$ArchiveTimer.Start()
		
	}


	
	
}


$labelTimeUntilNextArchive_Click={
	#TODO: Place custom script here
	
}

$buttonStop_Click={
	$ArchiveTimer.Stop()
	
}

$button5_Click={
	Set-PopupMessage -Message "This window will populate with mod folders.  It skips folders with names beginning with '_' as so that you can have subfolders in the mod-source for _published, _worksinprogress, etc."
	Show-messageform_psf
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">252</Line>
    <Line Disabled="True">530</Line>
    <Line Disabled="False">633</Line>
    <Line Disabled="False">1084</Line>
    <Line Disabled="False">1114</Line>
    <Line Disabled="False">1165</Line>
    <Line Disabled="True">1260</Line>
    <Line Disabled="True">1309</Line>
    <Line Disabled="True">1326</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>