<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
j5n/jvx6b5f5qch3eTkqtmPn9/Y6WA/l22Wd8MFDXJ+9XHn5zDaZH2MSrl89h9SNCzG0Sx/069sb
U2b54+ipi7jKa/lWfr3L8HUDYG/HKkuFuB2ml3/3Lkv5NK6T+9Kaz6vu7bJY26pYp7WvverOnn6v
6+5cl5MBsNLs9dp1yO2a3+Xb8iqTyUf5NsvL751Pqw6ttDvXXRVVNgBU5bZSvt8r9rGZz0rzqqcr
12/h8pFc9G7zOTqPXYPT125awy3t9VVXMgBCPBgyADUg2wDwJjiWrS6KAc42AE7pdVo8wJtgc+3m
Tdzk5Z/r183nDat3ge2o8vwsq20A+L1yel0R82YbgLqcT8o2ANXKp7UfL1Vcxrt22yg4zlsFyQAI
8WA8UgPAx/uSW3yIz11wSxrL431w5NkPDQENAj/5207j41Mrp3FZroNpPIjZaTyDqok0TuNv+9M+
M7Pn5yd/O6Vxee80e35uz077pjJXNc3Ou3ead7nuVmZ+Z0BwSrOXs/PONMop7V5l/qa0yuViWuUy
85MmwCnNXo6/75VWuVx2mlOZq5rGT9Yn0+5V5vtN46edVpUyO6Vxe9wGv1O8N4jp/N/yk8cbmnVu
t3IaTaV3GtfzTWn8zTSK3zmNaZyHv7kM0+zt3CuNn95pzGvlNLtcldP4+37SuI7KadzWvdKYn8pp
d6uPymmc5lRX9roepK4ql+ub0u6nPu6VxnVUTvMus3fa/daHdxp/2/XB75z2IPVhL8dP+3/G+R6U
R2YAeEBgxkNCQrBjxw5s3rwZhYWFiIqKQmJiInJzc+Hv74+dO3fC19cXBQUFiImJQXx8PPLz8+Hn
52el8SEo/B0XF4fY2FhrPk5jGufJy8tDQkICoqOjsW3bNmtdTAsICEBOTg6SkpKsbXLbzAPTAgMD
kZ2djZSUFISHh6OoqOh22tatW5GZmQmPx4PQ0FBs377dSuMn01JTUy3xO9e5ceNG6zM4OBjJyclI
S+NDewKsdTKNeWIdMB8ZGRlWmZm2adMmqyxhYWFW/rlNlovbYRrLHBERYZWbeWW5mObj42PVHcvE
+mIZOY1pnIe/OZ3pXIedP87D7TON2+Q6NmzYYKUxT1lZWVY+mMZ8cTnmk2np6elW/lkOlsdOYz2y
nliPQUFBd9QH64fTmc757DQub9cV12vXB9O4XdY52wfrg/vXriuWhfuK7YN5teuK5WIbiIyMtNoH
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
uhcWgqMCzp49i5KSEuvz+PHjlklgWmlpqWMab4DwTqMbYhrdkVManz7INH631+WdRjmlcZnKaVw3
t8E0btMpjXlkmr0uO41lYlrlMvM305zqg7/t+qipurLr40Hr6pvq425p31QfldPs+mCaU30wzak+
+Lsq9cE07/rgH8tO864P+z0WR48evZ1Wucz2ct9UV9ymU1pV6+qb6qNyml0fD1pXdn3cK827XHba
N9XH3dLuVh93S7Prg2lO9XE/deVdLn7eqz6Y9k31wTR7XZXTvMtsp31TXXGbTml3qyu7Pu5WV3er
j7ul2fXBNO8ye6d9U33cLc27XHaaU33w066Pmqoru8xMe5D64G+7Piqn3a0+7pXG/HrXlfd2eAxa
tWqVNY8rbwJkgebOnYu4uDhLfDUwHQ1vruK9ARs3bkRUVBQSExOxevVq66EHTMvOzrZufoiIiEBy
crL1NEGm8e1svCayZcsWhIaGWtdoeYmhoKAAS5YssR6byLO24OBg6y2ENB9MW7p0KdLT07F161ZL
/M5pTOM8nJfLcFmug9thGtfNtzHxTkxuk9tmGvPCHcMhGgwSzCvzzLwzjWVJSEiwRkCwjCwr01h2
PheBdREbG4v169ffUR8bNmxATEwM4uPjsWbNmtv1wccpb9q06XZdcdt2fXC7vr6+CA8Pt/Jq1wfT
WBY+zY4vlGBdcUypXVcZGRlWF3dQUNAd9WHXFacznfNxfqZxea6H6+N6neqK+WB+vOuD+WW+mX+W
g+Wx01hOlpflZvm964r1w3pifbHeKrcd1i/r2antcL9w/3jXld12uD+968qp7XBdM2fOtJZjHdxv
27HriutmXbGdVm47bM9s12zfTm3HrquH2XaYxu3yWePcZ07/M+5j+3/m1Hbu9j+ribZj15X3/8yp
7dj/s8pth3XFeqIeZtthmt12WDYOe65cV3wfSuX/mXfbuVtd1WTb4bGXbYdtxLvt8JO/Ob0qx+iH
0XZYX5Xrg/XK+q3qMbqm2g7ntduO0//Mqe2wru7nGO3ddlgfrHPOzzjqOgNAh8QbqdilQTNA8doG
p7GLg5/8zZ6CB0mzf9tp9vx2Gqc/jDRu0zvN/m2n2fPfbxrllGbnoapp9jR+2vPeLY3Tq5rG9d4r
zZ7GT3veqqZRTml2/u43zf5tp9nz22mc7p3Gbri7pd1rucpp3KZ3mv3bTrPnv980yinNzkNNpNm/
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
pQAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	

	$archivetime = Read-GlobalParam -key "ArchiveTimer"
	if ($archivetime -ne 0)
	{
		$numericupdownArchiveTimer.Value = $archivetime
		$labelArchiveTimer.Text = [int]$archivetime * 60
	}
	else
	{
		$labelArchiveTimer.Text = "Never"
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	$servermods = ""
	$wbmods = ""
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listboxServerMods  $selectedmod -Append
	$servermods = Convert-ServerLBCollection
	Write-ModParam -key "AdditionalMPMods" -value $servermods
	
	Update-ListBox $listboxWBMods  $selectedmod -Append
	$wbmods = Convert-WorkbenchLBCollection
	Write-ModParam -key "AdditionalWBMods" -value $wbmods
}




function Initialize-ServerListbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = ""
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listboxServerMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listboxServerMods  $mod -Append
		}
		
	}
	
}
function Initialize-WorkbenchListbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = ""
	$mods = Read-ModParam -key "AdditionalWBMods"
	
	# clear list box
	$listboxWBMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listboxWBMods  $mod -Append
		}
		
	}
	
}


function Convert-WorkbenchLBCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listboxWBMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}

function Convert-ServerLBCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listboxServerMods.Items)
	{
		$addonresult = $addonresult + $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}

$listboxServerMods_Click={
	
	$selindex = $listboxServerMods.SelectedIndex
	$item = $listboxServerMods.Items.Item($selindex)
	$listboxServerMods.Items.Remove($item)
	$mods = Convert-ServerLBCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}
$listboxWBMods_Click = {
	$selindex = $listboxWBMods.SelectedIndex
	$item = $listboxWBMods.Items.Item($selindex)
	$listboxWBMods.Items.Remove($item)
	$mods = Convert-WorkbenchLBCollection
	Write-ModParam -key "AdditionalWBMods" -value $mods
	
}

$buttonLaunchWorkbench_Click={
	
	Start-ArchiveTimer
	Start-kWorkbench
	
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	if ($listSelectMod.SelectedIndex -ge 0)
	{
		
		
		$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
		$lblModName.Text = $modname
		$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
		$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
		Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
		Write-ModParam -key "ModName" -value $modname
		
		# initialize elements that require a modname
		Initialize-ServerListbox
		Initialize-WorkbenchListbox
		
		
		
		$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
		if (-not $modscriptsfolder)
		{
			if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
			{
				$txtScriptsFolder.Text = $modscriptsfolder
				Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
			}
		}
		else
		{
			$txtScriptsFolder.Text = $modscriptsfolder
		}
		
		$autoarchive = Read-GlobalParam -key "Auto-Archive"
		if ($autoarchive -eq $true)
		{
			Start-Archive -Comment "Auto Archive"
			
		}
		
	}
	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file. You need to configure this option using the gear below." -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory | where {-not $_.BaseName.StartsWith('_')})

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		# $labelPboname.Visible = $true
		# $textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all links in P:\ and the Dayz game folder and Workbench folder.  This will NOT remove links in the dayz\addons folder as it is assumed that you want these to persist."
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This is a way to make your addons semi-permanent from one project to the next. This option will link your currently selected addons to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods for e.g. or if you always have a list of expansion mods that you use. Not that the CLEAN UP LINKS button intentionally does not remove these links as it is assumed that you want them to persist. To remove them, you simply delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$buttonCantCompileEngineScr_Click={
	Set-PopupMessage -Message "The `Can't compile `Engine` script module! scripts/1_core: Path not found` error can occur when you are attempting to play on a remote server but still have folders symbolically linked to the dayz folder. If you get this error, try removing the symbolic links either manually or  by hitting th `clean up links` button."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool will re-generate batch files to match current settings."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Important! Changes won't hot load if there are errors, which there maybe even though recompiling on host reports success. Most (but not all) of the time that hotloading isn't working is because there is an error in the code you are trying to hotload."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}

$labeladdedToArchiveName_Click={
	#TODO: Place custom script here
	
}

$numericupdownArchiveTimer_ValueChanged= {
	
	Write-GlobalParam -key "ArchiveTimer" -value $numericupdownArchiveTimer.Value
}

$ArchiveTimer_Tick={
	#Use Get-Date for Time Accuracy
	[TimeSpan]$span =  $script:StartTime - (Get-Date)
	
	
	
	
	$labelArchiveTimer.Text =  "{0:N0}" -f $span.TotalSeconds
	
	if ($span.TotalSeconds -le 0)
	{
		$ArchiveTimer.Stop()
		Start-Archive -Comment "TimedArchive"
		Start-ArchiveTimer
	}
	
}

function Start-ArchiveTimer
{
	[CmdletBinding()]
	param
	(
		$Duration
	)
	
	$TotalTimeStr = Read-GlobalParam -key "ArchiveTimer"
	$TotalTime = [int]$TotalTimeStr
	$TotalTime = $TotalTime * 60 # must be in seconds
	
	if ($TotalTime -gt 0)  # 0 in minutes means don't autosave
	{
		
		$script:StartTime = (Get-Date).AddSeconds($TotalTime)
		#Start the timer
		$ArchiveTimer.Start()
		
	}


	
	
}


$labelTimeUntilNextArchive_Click={
	#TODO: Place custom script here
	
}

$buttonStop_Click={
	$ArchiveTimer.Stop()
	
}

$button5_Click={
	Set-PopupMessage -Message "This window will populate with mod folders.  It skips folders with names beginning with '_' as so that you can have subfolders in the mod-source for _published, _worksinprogress, etc."
	Show-messageform_psf
	
}

$buttonBreakpointsNotWorkin_Click={
	Set-PopupMessage -Message "This can happen on reload when the game was not killed first. Check that you completely closed the game before hitting 'L' to reload.  'K' will not kill the game if it is paused on a breakpoint in W B. This can lead to a situation where you assume that everything was killed because you pushed the 'K' button but the game is still open. If you push 'L' to reload without fully killing the game, the WB won't connect properly. The solution is to hit the green play button in WB until the game is no longer paused at a break point. Then Kill with 'K' and load with 'L'. At point, you should be able to use breakpoints again."
	Show-messageform_psf
	
}

$buttonAddonRequiresAddonJM_Click={
	Set-PopupMessage -Message "You are attempting to use a mod that requires CF (community framework).  Make sure that you have CF selected as an additional mod.  Click `link to Dayz Addons` on the additional addons page."
	Show-messageform_psf
	
}




$linklogs_Click={
	
	$logfolder = Read-GlobalParam -key "CurrentModFolder"
	$filepath = Add-Folder -Source $logfolder "Kommander\link.log"
		
	Request-Log -FilePath $filepath -InitialDirectory $logfolder
	
}

$button6_Click={
	Show-Link_All_Options_psf
	
}

$buttonUpdateBatchFiles_Click={
	Update-Batchfiles
	
}





$listboxServerMods_SelectedIndexChanged={
	#TODO: Place custom script here
	
}

$listboxWBMods_SelectedIndexChanged={
	#TODO: Place custom script here
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">244</Line>
    <Line Disabled="False">432</Line>
    <Line Disabled="False">456</Line>
    <Line Disabled="True">527</Line>
    <Line Disabled="True">590</Line>
    <Line Disabled="False">693</Line>
    <Line Disabled="False">1144</Line>
    <Line Disabled="False">1174</Line>
    <Line Disabled="False">1225</Line>
    <Line Disabled="True">1320</Line>
    <Line Disabled="True">1369</Line>
    <Line Disabled="True">1386</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>