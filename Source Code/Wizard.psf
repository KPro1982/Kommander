<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
YII=</Preview>
  <Form>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
/PhuVOk+RrVSBdyMOT6l1tTL87OHFpcov+c0dtaScppcTNWipbHU7XdHH+3bSqunVSvVainP8/ER
f/86bw7nRpdP3nEzcZZqcd306PadGxVeniqJmnx+NuTEbu1t2BRijUKx1xjetd/0Qfr15oF75S7b
b/3ntph7em5m5dZjZXbZixfeW8VGvTfRi6mnt9owFxtk3vhF/y7K5gbnZ9VUYi62uvmWUm9GM69S
Tm0VpXldyT/EE7etzHDUFPnpZYY3HodPyUFEmj4YN5FiOlO9f6neVvJSu9SsRaR4tS5n387P+ple
WxjkO5HHSrUsNoT3maxoHXX2yiaVt4Ja0jMJ7aHVndfuH/KVjtgSJnykPxJmw8nLTSVWyb/3hx+D
nng7ZfOR8zM5Lt49z95mfP1JU2+HraTCTtO3pV4kMlBEsTjJpWuPb3ft13Yrk5w13/p1Xo08XEql
Xv6Be6/PGh9CpC2M02/zmlo5P7t7HLFd404V3+QcVxLrmiY9DLKZXh4UuZdo5FbiIh+9TjqKUJXJ
S4XmuDF9nGSzf9wsAbuBdNK1M4EOE6Wp9jrGXf7WTo6QNwvDboAWbGCcCOXxJEmUx5KCc97d0+Ic
GAEX0c8di4Bz1afUnPdIwL32ioAltqJrfCffnd8U5tEbJVcuRVuFTue1keXUhni/EOvFntoWH0eD
+eL87PW5ky/x+XJ2Xn8Wy6V68qHeKYzunxv8c7d1V47dtGKyPEjmZk/5VFqQm/Ld4LJyU7n84Oav
7abYaBX7T++1m2GhHymen3XKnW69yV5mY2qOT8ZbtUliNrzP5sZyni+/jJ5aOVmIFDnxpcq9Jvv9
qZHtPzfyrXZ/yj+9P4uzZCWbr90Wi5P6Kw817Sbmr5n7/EwwmhO+yi643vQ5oxUivDKoXL6Pc6+x
2Wz88Vgql4ZvEV3Ia/m7EXjNd1LTZjI+FOLP3fupXqo/1zPs+RmodKXUW6b83KgUokNhYMwaseZ9
ppNkdUFp5tKDWbeQqA3jl293k0Tuxug0GiklP2513uvdpybPJ9qv/L2qDofGY+b87L3eBuP7ZDym
lUp54+Zd+GgMM+rT46I0+oi+GizbiDSNIjtfzHKiki20+Vhr9Np9GHUXoDhi9YmQiQ4ilUfhdlw2
zs8+GveRZ1aRp2o1J9RqOe6+e58d159i3fvJ2+NCuP1oD3NybPYWv8zmKrEqr/TqGS3yluDE23Yq
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
iXC4klP/8f8HK2Vk3RUBAA==</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	

	$archivetime = Read-GlobalParam -key "ArchiveTimer"
	if ($archivetime -ne 0)
	{
		$numericupdownArchiveTimer.Value = $archivetime
		$labelArchiveTimer.Text = [int]$archivetime * 60
	}
	else
	{
		$labelArchiveTimer.Text = "Never"
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-ArchiveTimer
	Start-kWorkbench
	
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive -Comment "Auto Archive"
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file. You need to configure this option using the gear below." -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory | where {-not $_.BaseName.StartsWith('_')})

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		# $labelPboname.Visible = $true
		# $textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all links in P:\ and the Dayz game folder and Workbench folder.  This will NOT remove links in the dayz\addons folder as it is assumed that you want these to persist."
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This is a way to make your addons semi-permanent from one project to the next. This option will link your currently selected addons to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods for e.g. or if you always have a list of expansion mods that you use. Not that the CLEAN UP LINKS button intentionally does not remove these links as it is assumed that you want them to persist. To remove them, you simply delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$buttonCantCompileEngineScr_Click={
	Set-PopupMessage -Message "The `Can't compile `Engine` script module! scripts/1_core: Path not found` error can occur when you are attempting to play on a remote server but still have folders symbolically linked to the dayz folder. If you get this error, try removing the symbolic links either manually or  by hitting th `clean up links` button."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Important! Changes won't hot load if there are errors, which there maybe even though recompiling on host reports success. Most (but not all) of the time that hotloading isn't working is because there is an error in the code you are trying to hotload."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}

$labeladdedToArchiveName_Click={
	#TODO: Place custom script here
	
}

$numericupdownArchiveTimer_ValueChanged= {
	
	Write-GlobalParam -key "ArchiveTimer" -value $numericupdownArchiveTimer.Value
}

$ArchiveTimer_Tick={
	#Use Get-Date for Time Accuracy
	[TimeSpan]$span =  $script:StartTime - (Get-Date)
	
	
	
	
	$labelArchiveTimer.Text =  "{0:N0}" -f $span.TotalSeconds
	
	if ($span.TotalSeconds -le 0)
	{
		$ArchiveTimer.Stop()
		Start-Archive -Comment "TimedArchive"
		Start-ArchiveTimer
	}
	
}

function Start-ArchiveTimer
{
	[CmdletBinding()]
	param
	(
		$Duration
	)
	
	$TotalTimeStr = Read-GlobalParam -key "ArchiveTimer"
	$TotalTime = [int]$TotalTimeStr
	$TotalTime = $TotalTime * 60 # must be in seconds
	
	if ($TotalTime -gt 0)  # 0 in minutes means don't autosave
	{
		
		$script:StartTime = (Get-Date).AddSeconds($TotalTime)
		#Start the timer
		$ArchiveTimer.Start()
		
	}


	
	
}


$labelTimeUntilNextArchive_Click={
	#TODO: Place custom script here
	
}

$buttonStop_Click={
	$ArchiveTimer.Stop()
	
}

$button5_Click={
	Set-PopupMessage -Message "This window will populate with mod folders.  It skips folders with names beginning with '_' as so that you can have subfolders in the mod-source for _published, _worksinprogress, etc."
	Show-messageform_psf
	
}

$buttonBreakpointsNotWorkin_Click={
	Set-PopupMessage -Message "This can happen on reload when the game was not killed first. Check that you completely closed the game before hitting 'L' to reload.  'K' will not kill the game if it is paused on a breakpoint in W B. This can lead to a situation where you assume that everything was killed because you pushed the 'K' button but the game is still open. If you push 'L' to reload without fully killing the game, the WB won't connect properly. The solution is to hit the green play button in WB until the game is no longer paused at a break point. Then Kill with 'K' and load with 'L'. At point, you should be able to use breakpoints again."
	Show-messageform_psf
	
}

$buttonAddonRequiresAddonJM_Click={
	Set-PopupMessage -Message "You are attempting to use a mod that requires CF (community framework).  Make sure that you have CF selected as an additional mod.  Click `link to Dayz Addons` on the additional addons page."
	Show-messageform_psf
	
}




$linklogs_Click={
	
	$logfolder = Read-GlobalParam -key "CurrentModFolder"
	$filepath = Add-Folder -Source $logfolder "Kommander\link.log"
		
	Request-Log -FilePath $filepath -InitialDirectory $logfolder
	
}

$button6_Click={
	Show-Link_All_Options_psf
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">244</Line>
    <Line Disabled="True">522</Line>
    <Line Disabled="False">625</Line>
    <Line Disabled="False">1076</Line>
    <Line Disabled="False">1106</Line>
    <Line Disabled="False">1157</Line>
    <Line Disabled="True">1252</Line>
    <Line Disabled="True">1301</Line>
    <Line Disabled="True">1318</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>