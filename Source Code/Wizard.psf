<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
gg==</Preview>
  <Form>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
Y3fawatN/zJnPMu+W6//qv34PzYxG9qY+gAA</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	
	$usebatch = Read-GlobalParam -key "UseBatch"
	if ($usebatch -eq $true)
	{
		$checkboxUseBatch.Checked = $true
	}
	else
	{
		$checkboxUseBatch.Checked = $false
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive -Comment "Auto Archive"
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your the currently selected mod to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods. To remove them, just delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Changes won't hot load if there are errors, which there maybe even though recompiling on host reports succes."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">242</Line>
    <Line Disabled="True">518</Line>
    <Line Disabled="False">621</Line>
    <Line Disabled="False">1075</Line>
    <Line Disabled="False">1105</Line>
    <Line Disabled="False">1156</Line>
    <Line Disabled="True">1251</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>