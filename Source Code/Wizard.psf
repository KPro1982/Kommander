<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAHxtSURBVHhe7f1ncBvJvu2J3jg3YiZiPryYeW9i
PryIF3Pnnjuzz/anu3fv7r27e7e3si3vvffee0N57703pESRIkVRlOi999577z0Jkuvlv0BIIAVB
EkS1QGGt0E8EqrKysrKy8r8yqwD8F4qiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KJvT5f/6b/8W/j/+/d/DFy9eEr527frw1avXEkIIIaTfsC58/foN4YMG/BL+P/9P/1O4iu2Cef3b
v/1b0k8//YTzV24hLDEHqfnVSM6tJIQQQkg/ISWvSlEJn+AoLF26FP/b//a/ojvMv1j//t//W/i5
SzcQk10J39gceEVlwJsQQggh/QqJ36EpJQiLTceQIUNebgAWL1wSHpaQA/+4XPjFZBFCCCGkn+Ib
nYlYNaC/dsP+5QZg/boN4VnF9fCJyYZfLCGEENJ/8e9D+luegq8yAQl5NbC/c//lBmDd2nXhmUW1
asMcBMQRQggh/ZOghFwEJ+Yr8t6YIIXkGRifq/JV7/uIvi1n/tM8DYghSFQG4Jb9vZcbgLViAIrr
tFsAcqCEEEJIf0MCtmdYGm7cD8TVe/645hRgGWrbq/f84OIdowVZ74g0OD4OhuOjQDh6WIhsq3AP
jNWXMzQVN5z7opz+eOAbp5kAQz2ICUjKr311A5ClDEBAvGm3QgghhFg7IckFWkB85B8Hv6h0+KrA
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
vvcyU+vfBJG1GABBZm2N68+AXHeGY++NYdsXrXvR675CRAPwFpATZU6mtvmtENEAWMbL1NcXaF8h
ogHo37ytfsycTKW3FkTWZADMyVR6a0BEA2BjiGgAbAsRDUD/hv1YT0TWZAD6IyIaABtDZEsGwPBl
JabqwlYQiQGQh1VpAPon7Md6InoTAyAP7IpM5W0riOShTfnkxntrAAQ5SHmKXr6P2dYlzydIYBTn
Z6qu3hekU5AL3fBUsi1LPnolF7l88dD7bvreZ+SalX5MrmFbl6X9mAQ6eUhbnnGg9J9g+y1mBt+p
AZBOT064fOmFIBeRfN7SljAcs+EBn/c9EMjxyejAcM5714ctIedcLnQG//6NoR+TB83kvNpiP2ZA
6sCSfkzSy6BAzIOhHm0V6RdkYPBb9Avv1AAIcpAyApIDtmVsaRQoxylftWmqHmwJ+eSJrZzz9x32
Y3repB+T7cQEyEyAqbxtBfmiMkN99K6jvuadGwBBDlS+lMKW+S1OtjXBc97A+/7vGWzTb96PyfZy
XZjK21b4LfsFqzAAhBBCCPltoQEghBBCbBAaAEIIIcQGoQEghBBCbBAaAEIIIcQGoQEghBBCbBAa
AEIIIcQGoQEghBBCbJA+NQBVygDU1+szJYQQQoj1IvG6zwxAlspIMiOEEEKI9ZNWpA/+b2wAkpWL
ECdBCCGEEOvnafy2xAAkKwNgcA+EEEII6X8kKYpe1QCsXbsusrkLKG5QqI0IIYQQ0j+R4N8MwMnl
4csNwPTpM2Lv3XfDbQcnzTEQQgghpP/i5OKGHTt3vdwAUBRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF
URRFURRFURRFURRFvUf6L//l/w8tO2cbuBrr2wAAAABJRU5ErkJggg==</Preview>
  <Form>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
AA==</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
	Link-Scripts
	Link-Source
	Link-Packed
	Link-Workbench
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoading_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchive_Click={
	
	start-archive
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your dayz addons folder to workbench." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$button5_Click={
	Set-PopupMessage -Message "This tool uses the output from Doxygen which is an automated code documenter.  It is what Leroy uses for the online version.  Mine is essentially the same thing although I have tweeked the settings to provide more detail.  The current generation date is printed at the bottom of each page of documentation so you can tell if it is out of date.  If so you cane either check my repo to see if I have updated it or download doxygen to generate a current document set." -Title "Doxygen Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">228</Line>
    <Line Disabled="True">504</Line>
    <Line Disabled="False">610</Line>
    <Line Disabled="False">684</Line>
    <Line Disabled="True">1085</Line>
    <Line Disabled="False">1086</Line>
    <Line Disabled="False">1089</Line>
    <Line Disabled="False">1144</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>