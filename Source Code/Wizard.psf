<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	
	$usebatch = Read-GlobalParam -key "UseBatch"
	if ($usebatch -eq $true)
	{
		$checkboxUseBatch.Checked = $true
	}
	else
	{
		$checkboxUseBatch.Checked = $false
	}
	$archivetime = Read-GlobalParam -key "ArchiveTimer"
	if ($archivetime -ne 0)
	{
		$numericupdownArchiveTimer.Value = $archivetime
		$labelArchiveTimer.Text = [int]$archivetime * 60
	}
	else
	{
		$labelArchiveTimer.Text = "Never"
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-ArchiveTimer
	Start-kWorkbench
	
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive -Comment "Auto Archive"
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your the currently selected mod to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods. To remove them, just delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Changes won't hot load if there are errors, which there maybe even though recompiling on host reports succes."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}

$labeladdedToArchiveName_Click={
	#TODO: Place custom script here
	
}

$numericupdownArchiveTimer_ValueChanged= {
	
	Write-GlobalParam -key "ArchiveTimer" -value $numericupdownArchiveTimer.Value
}

$ArchiveTimer_Tick={
	#Use Get-Date for Time Accuracy
	[TimeSpan]$span =  $script:StartTime - (Get-Date)
	
	
	
	
	$labelArchiveTimer.Text =  "{0:N0}" -f $span.TotalSeconds
	
	if ($span.TotalSeconds -le 0)
	{
		$ArchiveTimer.Stop()
		Start-Archive -Comment "TimedArchive"
		Start-ArchiveTimer
	}
	
}

function Start-ArchiveTimer
{
	[CmdletBinding()]
	param
	(
		$Duration
	)
	
	$TotalTimeStr = Read-GlobalParam -key "ArchiveTimer"
	$TotalTime = [int]$TotalTimeStr
	$TotalTime = $TotalTime * 60 # must be in seconds
	
	if ($TotalTime -gt 0)  # 0 in minutes means don't autosave
	{
		
		$script:StartTime = (Get-Date).AddSeconds($TotalTime)
		#Start the timer
		$ArchiveTimer.Start()
		
	}


	
	
}


$labelTimeUntilNextArchive_Click={
	#TODO: Place custom script here
	
}

$buttonStop_Click={
	$ArchiveTimer.Stop()
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">252</Line>
    <Line Disabled="True">530</Line>
    <Line Disabled="False">633</Line>
    <Line Disabled="False">1084</Line>
    <Line Disabled="False">1114</Line>
    <Line Disabled="False">1165</Line>
    <Line Disabled="True">1260</Line>
    <Line Disabled="True">1309</Line>
    <Line Disabled="True">1326</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>