<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
DcBlZQBu3KieqCAIgiAIry7M1/VmAE6oCXFigiAIgiC8+hw7V538n9sA5CkXQSchCIIgCMKrz4P8
/SwGIE8ZAMM9CIIgCILgeBxWnKurAZgyZWpaRRVw/qZCjSQIgiAIgmPC5F8BwNc/+MkGoF+//lk+
B4Pg5uGrHYMgCIIgCI6Lr38Q5i9Y9GQDIBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQi
kUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKR
SCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFI
JBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgk
EolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJ
RCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
TqTXXvv/AU59Vp2Wa7JtAAAAAElFTkSuQmCC</Preview>
  <Form>sjDL1y/OlvoAACODCAAAAAAABADtnetzqsi2wL+nKv8DNx/mzDnJSQTfd2b2LfGRGDUanzF1q3ahtkpEmgBG
TZ0//naDJj4AuwFR5u6ZqT1bpWH16l+vXmv1gz+rvTfQ17UflxcM86f5gdGXCvjrqrHUdDC97Yjy
AM612wJUp+afN4zVTzdMG6iaCOW/YrcR/O8Nk51J+kwFf8lgpquCdMPUZj1J7JfAsgknQP6rl0wK
8X48waajMRBJpa8YWZiiJw/VaUf8FNTBFdMfi9JARddeZaGsq1DSrgxRkbA1FSpA1ZerQpl+Hyg6
P9N1KK+vQVfVwRCg8n2wuqxnXFAQZVEbXzF365vdre9md/eZDht9QQI5cQpkXE0kSPqGYdPkRStw
AK5+FFA9DpbJCkhiibAy5sUUlclKIpD1hviJxElF2BsmwSYOFsJyX/3ICtOeKgqo4pxyuBoYDB6q
A6A29KWEKy8uwCAnChIcHSxcEdSRiGofu2FW/xEUWYhTVC0eLtCzBEkDB4s8oT+vfnwRd/D6hi6o
eg1qoi7ipskiRaLa9VUA5INlm2CBVFiC06kgI50wv6vgg+EiXPSWvU39c794/gPdfVW2DIXBhpw/
8ec/74wrrC6vwJkG8li2zULf3zoUrQPNIOO7mPnNTpHDtsLE9+jWwuwErJOt2G+KMuwLZgsmY9Eb
Zr8Xu+LRDq+ViATXm50yFr9hoiS3bwq9IkIJ0c6S3N0E8H8IrmxpoC1qM0EyOi4v9CdZKEEEU1Od
7XeqHYKQfelPvmr90/i4Q8+dic+ZwtSEUDKstUumEtGgmFpLSowWG+GOyRaWhyEUyD/G1lrwB7Wa
IAPp6KQp+ClROsK2dCTImiKggvvDsBOaHBKZTR4XTbNqxEgm4imEJEeHZMTq8sNtWxZ6AbSt1MM4
GspwbF8LZ1Huj43mhYpFBS08LEnQV75VDSozwkKGK1cR+yrU4FBnGgglpgFUcWj6dTeMhm/5Fw+l
fYfIGS+kNKuWccQrYuBFVswE7Fu/RIVMzJIxbPnIHvMNGuH1yPhlJHEkY7UOBhIw/ULrshZm7LtC
ViZs34id9/C5DkhoTNsafB6iO6AQsy6OxiSWzQwmkIeKJMbhCX4ylUGMs4kbJp6IBzFaE4u3GqtZ
+rGa6GpjqP5NmCp/EEuEBussnCpIaT0J4BvUAY5hRHlkP157Gu/PnHEsvjfCy2BIP3QHBCqu3VEx
Jfcof5P0PxiDVUKhAifVyTPFZUMYAK3zY8Fb8GqJqk8kYqnAOoWplKN2CxKnecN6E0t0Vn3ClNqf
XoFUtyLz6D1DF3p981GHk9OOjv0NszkEkHcU/BDUdBUgzxq6KipbccRuarhvXjxFF2v4YvY7P2yR
IT447JDYaw8dbFe3JJ0MSIgNMHDw0+3igDgSjahGzmHAFuGmOEaH2q3Mz6/f9tz6zTvkgOZwj41f
9+5C1E1qwggE0UfMyqJohjb0/SYOocOlaKNIe+QcoPsSlqhYTRgMjNahfNyKu2gSFbCYMKInz25Q
MKvDkNaH1qRbG/VNNVpHr2SZGVHTebg4fm4GPYeYUespLUHH3TAvC2gwHThoa790EdXsAWB7j/wD
axIOZFcs82QeuoZtimVTTYQlTc65tJHOs8oxOpO+PwdpAd2W2c+OBXmEm2BL2p9W1+wz6TBjtn07
u1kz4xbbHgsp68FkIfFTVrONGj3pxry10aIUgDulFtO3yThBctGpA0Sxu08KMmGK0bYHbKqPqgek
ojeMxYz6If4tc9qWRTbnka1Fc8dlgDMfHD2QW3aQjZEq2KMhNKWlav9oBPMWJy30TYCN03PuNsY0
lfkFsppoXHQ1rJ6jsUkHa2r2tEjFHBtzZ3SsMif2NmflYK6FtPc0z938HFguYqUB4slXy8J7q6Aa
SH8SKekbI2A8QCfQVBWl7Yth+awtmROItv7imaVGD0zZH2o/Lo76KRe304+HJnROXlplFp3a0XYJ
0qF2tFwsYlPIdjmS9fX08apxF9tEZNQuXLU0YOeHIoEPdRDFKDkYPpFoZ7v8J9FuED4/ErmQk/gA
JKWAfCw0xAEjOUIQbx5E097FPxqb+/UICla7ZND5sbqvo5DDi/D8QBqgil8c3cOGKH3YLP5xxj6W
QNRbrs47KvX7CqCknoskUcRFPpIcDj/ssF+JejgCoeoJ1lsFDneFfcWFtyvoclYFgg6ewPzEPYAc
Yu/8b9c6MOwpypjYG0IySMqTAb+tqTBz7sVF8YtxjiMf8P2g3KU7455wCh/IINz0KBhqOf1F3JVH
s/fV/hdnNUOfGQzw9sUQTM+bkh5/jt06JLUGlUImF/Pr52MnjcfEvMzSxDmcCrRNdfmcq1wJTJes
TDlEay4mqqkiNT/iNHvXNGa7FMNVaj5Q6sqiPGnCnLD8JDNVjvnyKBc4hLvy003kpGKuoKSbyMEi
MjpksJD/SyWlv5juqirE1I6BpOAFYpi7KXSz4mJjWXMKWaaAJritpQ/CjhKXOKEd3dWLv4AGth0x
s6qCgPeZBbUYaNcKBzWbvltdOvvLcZbHehyC2S5IsvUiVwIythK6RCrAdZReqTrpYkqDyQTp7LYP
yyk9QBlljaCLnkrbhQJWm1D3ZHQIg8nWZO7cjmxh5lmb0u+VOic2qTReon/Lk7wY1kTClWEl7aFb
K5T+HvbVH9BOamVjwdpYz5RG8fkobiytbZeiWb3uj7088/wjqhppCv4ckpAb4h4/E0kmm2nqkGDO
+fK/Xz4Srz0oyspM18z5Ak8xdgI7+hHSvIkvUfau/FSmyXFtiYtlUOcUZu8qJsR5IN/4jCQC5zNo
NukyQLe3tyeBcx/MqF9k4ooF4U3iveDewMThCj5DQAL66iTTxmw0AijGUxQgk25W2LxLA87UvrEc
XgJm9XOiivQFVRGQOm3f3YVNs7i7kDpuHrvLrj7pOgteI8/R79WwTjGdfbhs6mkxlbyg5yFSNtaS
si62TLiOlXdqTBcmRyOuwmTiEoYpNSW8RSIyDjKGYLTFjkNZWMKZ7pNHGA/IgliLH8SgS7w358j+
YAjo8o0s7MsFS1bQVIXDldvUSohdOW9chsKVS7hIbrv15Nz3lf9fnpx37Dy4cckkgsLFmgjXXpxr
KtiIu5kO4iNTzCU8hnh/A/et0VdFxb+MHulEvG/+25b8QQy1YVh/uKeYUC6cMSY+veHp1eql0ADj
YgLN/Tyva5rZSNyV2aM8gsKUL7x2T5f9M3jGQBNUhnhH8F9Bxb5O/DVygUUUC90HI3f2EQXx6The
I4oddZ5TRHHmSwPKwkzuHzh3+jxWBZiSEpU5ybGh1i6DXSRBXJejLCHIjkF/EoSh6+MH9eAC1YIX
9MOgOaKWxN4O8eS6R5uyKzmVTeHixkYs+sWjdAEpko3pYeGYITLaGjOEKiOJ8sQ4sjigYRmrCQy+
Vlbtqu3n9gWhXF/QgeqkB1CHLcMRPcDFKTLle7uceVEW1OUPsc1X6/NI6X4EM+ifp0ZrnG+N0N/4
Iv7cyWa66H+5p5fUgsdf8PcDvtnKZzLl+1r2bjHmn/G30rxRkD4vL9Bfqx/4enXOS73FsoF/7bUf
6/lCq5q/ltiKpvKdfHdxV1hwdzBXLnGtQqfz1sjGlIb4uBTrxZ7SFp/Hg8Xy8uLttZMv8flydlF/
FculerJa7xTGj68N/rXbeihH71pRWR4kc/OXfCotyE35YXBduatcf8YWb+2m2GgV+y8ftbtRoR8p
Xl50yp1uvcleZ6NKjk/GW7VpYj56zOYmcp4vD8cvrZwsRIoxcfgUe0v2+zM9239t5Fvt/ox/+XgV
58lKNl+7Lxan9Tce1bSbWLxlHvNzQW9O+Sd2GevNXjNqIcLDQeX6Y5J7i87nk8/nUrk0eo9oQl7N
P4zBW76TmjWT8ZEQf+0+zrRS/bWeYS8vQKUrpd4z5ddGpcCNhIE+b0Sbj5lOktUE2MylB/NuIVEb
xa/fH6aJ3J3eaTRSMD9pdT7q3Zcmzyfab/yjooxG+nPm8uKj3gaTx2Q8qpZKef3uQ/hsjDLKy/Oy
NP7k3nSWbUSaepFdLOc5EWYLbT7aGr91q+PuEhTHrDYVMtwgUnkW7idl/fLis/EYeWWhPFOeckKt
los9dh+zk/pLtPs4fX9eCvef7VFOjs7f49fZXCX6xMNePaNG3hMx8b6dyue5evz5rS5P5u+zu8sL
Hk4SbagofLn9EE0XejDbg/1ObdwWx/y1toApdTa+fimqUjbLvlxX66OHaYx9VpL5YmXBy5FxcZx7
qxaTnxlQkC4vsrFuq197H2MGM3mp0Jw0Zs/TbPbPuxXeW/2C1oXkOGTvuaBO3tvv6nSrWPGGLPoz
+Ij9Tn9zRZvVDPHCL9ONQnVwsUb7l1n+ZZZ/mWVXZhn7tsmAJgt3O3ogRplURL9nyteVDLFJripA
5mfIFP/ylX8Z5V9GOVBfORbocqfNnh6IVSadZvbXKm9WM8R2eSJKkiAdeEWsM2MJfE4KG9QqoS2x
6fmin/niiN8eccJJ/pU+Qgwizk96P6wF4RSosVtLHQiIdPuvTwPiWiEhJtGw6uRHU/rkq7bw54bp
q2YjeaU1c+mrvtbXvmqbzWlw3Mn3F3cPL7VO/blZTcTfss/Thti9LyozvlN61ubvGY0XW/eXF1y3
3i5nhVKr3i2V+pNRfqSMJ6+5ZHyoJeXhnZJ8/fyU5Voq8Vbtp++Ww3g0CuLXvfzkYVzpPnNqqQLu
JjE+pdSU68uLaiuWKH/kVHbeknKqXEzVuNJE6va748/2faXVU58qT0+lPM/Hx/zj26I5WuhdPvkQ
m4vzVCvWTY/vP2LjwvClkqjJlxejmNitvY+aQrRRKPYao4f2uzZIv91VY2+x6/Z7/7Ut5l5em1m5
9VyZX/fihY9WsVHvTbVi6uW9NspFB5l3ftl/4Njc4PLiKZVYiK1uvgXrTS7zJuWUVlFa1GG+Gk/c
tzKjcVPkZ9cZXn8evSQHEWlW1e8ixXTm6XH4dF/JS+1SsxaR4k91Oft+edFH4YEwyHciz5WnstgQ
PuYyVDvK/I1NwveCUtIyCbXa6i5qj9V8pSO2hCkf6Y+F+Wg6vKtEK/mP/uhz0BPvZ2w+cnkhx8WH
1/n7nK+/qMr9qJWE7Cx9X+pFIgMoisVpLl17fn9ov7VbmeS8+d6v80qkei2Vevlq7KM+b3wKkbYw
Sb8vakrl8uLhecx29QdFfJdzsZJYV1WpOshmenlQjA25yL0Ui3z2OmnuiCmBdEATcxadNwj3kyUt
4q+d3apnOI0tPuRV/QBq1nx9Gho5gJfB35wWsD0i9whrsHalDwQ3upng0yzE2lVMWPk0OtmqHmU/
8AzKN90XPRA26ZZDn4TNXb2EFc2vmTrfrCcO4i3fxX0cQK0qEAikdIucTwKplW7CCio+V9bdaVmk
J/w7rAxLpIK0ueuq0i0JczzY34FjuhXZxjHDFMK5Os3fBue1XkKLsDEBZ3o197ixPdhZNhKsk7or
Oz2brIuNJHSOgCkjYwrJXDMUcvpodHc1FU5av4NDL5SmA06jGgIHgybd8E8j2BEC/BAzaHanL0/G
I43BeaZWwgdDJuWAbhpNWhmPsTTlS4Zw4ro2/S42W6FSWHdPkDh2+ab632w6fsP8Ox2gf2q/u8QR
ZjdzVS5YJicYb01DWuxJAJevA/RM1djXQ7Gx13fPIazwl0Q30/8+BWfBLRswKxpIaEb3AgIKsfwM
yvBjiZE9882KOsS8hmCvoiHo8bcc2mxBtcSvSSzSUXYc3qtwpgSx43CEH9SDC3M78woQTy9Vw21D
PB3j0XxZSk94B9Jdr3YQskljYbcLO0h83rHQa+hQOWDHLPE1FcIc0MhZHWOCmgMMmjCjIvY+wBNR
QsnC9yQ5zWS/WAHd/upHVpj2VFFAo9ttMq7oxKU38lgG/OTvIyU+EMWuB9iojvguK5ZjrMM5HW6i
MzswfzdkxW92E0xpjV//aUeoy3f1BogtnotAbkKArG6M0HGng2OPRduqxpSIJZ3O3nHjNtoR5iye
W6KCPDwRDWgeqPrGAwcS0QBf47wtO7UJSjmcK+ImqN7x8XELfu273xb158Zvfr4yPPBzI7BFWY0C
3tDhongvMXlreGbHoga0AEWjDodIOM4ZUloYLCNDK6SbxMpulGpzeMSGzg6eH+Ee5kDT5GtXBs49
m8A4OYreX2S/I7wbG2ibVnRCmHwgXyG8cr6QjP8VKMKbafJvPXl7nf15RtSeXk3OniCIJi3lNXCO
pZChTrs47Ydi7sh13Gyci4Zqx9gngM7PWmZVIOgAn0TncdSP4ZyfHXZHs5ff4lPay3TSNkV5ACUK
N8EMKgwRGSoZ/TaX32qiMpfnimurWFDh1Dwk2vMgfypoNytBO9inOLf0UofEJr2tIjNE0jKU4h6H
403NhZxnfJT0ulLeSGbTJ2F5swKUFOPlxu4gps0c2m3cPD6wm+r5O3qqUa+eKkd8LpdPrirppIsv
rir5ZPwG3RQr8N36qnh9kaYIfdtSZ2gmK3Am6zVvRjKGkbNdH3RUI2mKH5iJJB8IzsFEmsoJ+Vie
hcqyImr4lhl5gOAcigQHMx3wThOuJgQ9eacW1aDFNsDoCknLrMRlBHnAmAIb4ZbGFGUdGovfnV6p
EATkVkoNO+4SEOSWgreiEGxFOr8gbEP84PCmpRsLybQUhk5M3+nd0FXIqTUc8u/O6IM7EbyF3qlD
YD4FxQzrGfgUGxoKObOmd5RTPU/Npk7h/G5IH5idpZ3TMmRkav/N0InpN7Ybqgo5skYH9M1BMOzs
iXJbHtwE14aW1k04saF16x2EJMfFeZ6NJZ5+9CnHRbpXyJccV4piTTL1y1fcp7jKcBUEhiTFVTIP
piB5Q5kTb+n0KSzll/C0E1mRqMtVK7Qmkl5Cv03llwQhH9p5USZ7D8TZhfwrySkZTblFlHZtIBKP
oZLPb0JX+vE2hp/5xrYxcljCsK8Ny0lUwtO2NutsqzWeD6QSHWVXW7CvIRsvM4gOvbLMD0Rde4B6
GXp6nx7eIpMO9vVKFlWg8u0S8SBea4vEZAQk5z90ZrpkABaVGUOdkaCAPdPTnLhspbtw7kU3swrL
Chx0ELLGASjo0cWs4OlgOyQRG+wbEKyqEAjNdBvPK0tmCgfMHGKee1hU9KfOFJm+gL8ZiiPUigxE
X83Hy5OgbaXIEKNdnOKVDMhQVOXME5ijuhUJUvoH0I4EtHjavgqBoE13oEjxH1PEtSEog2daGRnM
DdiR0/oV2Ri062OEOCIf/6jpoiQx2hgRgC/s8CeB3krFIYbe6MM5CDRZbyDNtpSi3PAKfYJ0Tb1/
5nynBoEwT/e+h5U5H2BBkfnGGDMzBYOsGWv9DX8Fkp7TcgRDvqPCEDNt+FiGy9cRtFVv9co08WuM
fGHaqgaBME2cfjWjuG/nmpkL2pdNx5ZbRnyvYcffnwRsKz26PVVn9+OZQf+EW8QR8l1Vr49H4yEq
P71h6uJobLUa36Fj4O25cUtz76pbOHUJXD+CIqtUMMvZ4E/nwlhj/5swVf7A8jC/jfQ/CIq5OBPN
a7+w7xNYcKs+sMX39odt1DO1Yv6pif6OUcYL4XgVYQ1UNIYAVc6JggRHCF44B2pjDJDL1tBnAxF+
Ex+/Td1ybJSEeXmGTz8zazE0HtYzHzY1HjYwHsZeMXdWglr1yS2J17IeuYNuCR5akbnwiRylELmq
ABlP8QUkLequ8hA9bo3DuhPudPscGAroCXlsdnQLA7h7PaqBDrBVwNYJV4f5/RaV++d//oX/958M
6o3GPCb6/K+DN8O+IE7U2hiZLROD71pFNmanXj/N7zctjZNpObuG4cLXMLT6xY4CEqoC5FlDR5HI
8Q8JMR84RQ/U8ANZJ7dlt+pFJNmmT4M/O84GQSgZ1cL1wxcfr3qbvmQdDAGqTx+sxB4ACehgT5i1
fTLHX/zN12B8AAHTNdpT5WF0VlPl1ofcbHVpLI7hJxhnfOw+6efGz166d4ANdKAtHDVtU4hY38bu
tINXm/5lzniWfbde/1X78X+bcFfclvoAAA==</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	
	$usebatch = Read-GlobalParam -key "UseBatch"
	if ($usebatch -eq $true)
	{
		$checkboxUseBatch.Checked = $true
	}
	else
	{
		$checkboxUseBatch.Checked = $false
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive -Comment "Auto Archive"
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your dayz addons folder to workbench." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Changes won't hot load if there are errors, which there maybe even though recompiling on host reports succes."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">242</Line>
    <Line Disabled="True">518</Line>
    <Line Disabled="False">621</Line>
    <Line Disabled="False">1075</Line>
    <Line Disabled="False">1105</Line>
    <Line Disabled="False">1156</Line>
    <Line Disabled="True">1251</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>