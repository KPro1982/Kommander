<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAK6SSURBVHhe7P13cBvJtuaL3pgX707EjbgvZuKZ
P+a+FzPnnJmzzdm9TfvebeW91JIoQ3lKIkVRpDzlvffeO5KSSImk6L333nvvvfcESID4Xq4CQIIU
5NktUlhf908EqrKyMrOycn1ZVQD+NxaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgs
FovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwW
i8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaL
xWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovF
YrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8Vi
sVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKx
WCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFMjjZ
/t/+039K/J//9m+JW7ZsTdy7d3/i7t17GYZhGIYZN+xL3L//QOKcWTMT//P//r8nithOvF7/6T/9
p5zp06fjgd0zJGSXIb+yFbnlzQzDMAzDjBPyKloEzQiLTcG2bdvwX//rf4EmzL9a//av/yPxvo09
0kqbEZ5ehpCUIoQyDMMwDDOuoPgdn1eHhPRCzJs3780GYIvV1sSErDJEZpQjIq2EYRiGYZhxSnhq
MdLFhP6JveObDcD+fQcSS2o7EZZWioh0hmEYhhm/RI4i4y1PIlyYgKyKNjg6e7zZAOzbuy+xuKZd
bFiGqAyGYRiGGZ/EZJUjNrtSUPHBxAgoz+jMcpGveD9KjG45Kwfz1EKGIFsYgGeOrm82AHvJANR2
SLcAqKIMwzAMM96ggB2cUAB7j2g8do3EE7eo90Ns+9g1Ap6haVKQDU0qgEtgLFz8o+ES8J7QtgK/
6HR1OePzYe8+GuWMhHd4hmQCtO1AJiCnsv3tDUCJMABRmfrdCsMwDMOMdeJyq6SA6B+ZgYiUQoSL
wP2+RKUW4YlLOIISCuEWFIvw5DzEZZUhNrN0kPjsciTnVyO5QEB/pdc1SMqveiktQc/auQozEJYi
8naNQmB01kvljBTrYugKgSBCvI5KLRbbisBOl/aTX65TpNj+8YtwBCcWIi6nSmoHMgG5VR3vYADq
OhGdRZcjRlKF+LxakXGlaNwaJOTV6Enz2xKXUy3KUIM4PetGQmWMz63Wu+7VUB3rkJBfh3jRgLFi
f/Q6IV+n3vn1ou6Ur05a0dmG51GrSTOUN5VdN5/h2zAMwzCjBY39NCumwBmaTBS/FyFJRdKY7egV
i4DYfHiGxCMxly61ExRk1XEiPK0Uz7xoNh6Op+4REo9dw+ASmKBOK+KCNn10ZhVSCuvhE54oXVF4
Kmb/UWklYn/ashYJY1CMgLhcPHIOwoPnAVJQ9wxLw117HziI/YQKAxAq0oRo0gcniaAv6v3MM0YY
lYLB2EcmIK+68+0NQFl9l9iwWgQpXShglSAwPAlROXWITkqFV1iqZrkIyhoore57XV61TrsP3fd6
14vAH5OWIzm6GBFgddPoQs6HAm1kQppowDzJqOhLRwzft0iXXQr/oGC88A1HSFoVkrKL4RMQCNfA
RMSIekfEJsLVyw8+0bkifblIGwIXn1CEpFZIAV/KM6cCoVEJ8IvJQZwohzbv2PQ8+AbHITyzEqEi
n+Bk4QLzhZkR5dWWg2EYhvlwKAbQZXUKrPRMWwQ92K6LzoNyg4xMIwhPFeO0GNudfOIRGF8A77Ak
MavXxAsNaaUtuGXrhvMXb+LxE0c8tXeWsHv8HMdPXoazXxxSi5sG08fliG2KG+EXmSJdAXDwiBWz
evUT++Gp9LdEMhWX7jiI/Jzh/MIbB07cwOkL9+DlHYiLl+/iiXuYNFGntGEpwjyIfBJELHkujEpw
onhNk03RDrFiWV5tF545va0BaOhGgihkogicQ9QhKS8fbu6BCErMhYdvoNhJCZILGwRiXUG9oA6J
YjacLJwNvdb+TaK/ojCJYuasXqb9q10n8hfrte+l1yLfYdvSNqIBY5IS4CycVUxhM5I1+6T16jzF
/kVZaYaenFsET79QBKdUIKWoUUpHZZPS6yDVjfKRyicaLDMfoYl5CAqLgEdQAoIi4+EtTI9fYAh8
IjIQkZyP8KR0uHkEISS9CFEphQgOC4eLbyLii0RbiDxjUjPg4uIGV78kJJSIfQuzQpeBgiPD8OyZ
l9hOBPzkVLgHxCAmV1P/YW3NMAzDfAg0Ftt7iDFWGICo9HJB2SCxNCMXE7GoDHpgbghphp4pXuuk
jUwrE2N4DZyFAQhOKBRxIBkpwgDo7iuzohXnrz9GbGwsEhIS4e7uA3cPHxQUFMBJzLwfOQYgo7x1
MD3F13QRG/yjUkT+xXDwjEWs9MDeEHFiEm77Ihi37z2FTCZDUEgUikvKUVNTh1MX7sI7MlO6sqBN
T2YlURgVR+84hCYVSfXX7quwtvvtDUBFY48IvBTAdWkQgbQEXq5ueOYRLGbHFUgva0ZiVg48vQPw
wsMPQcliFpyZAx//MHj4BMArNAn+wWFwFsEyPKtaBO8UePmFwU2k9xXOx8fPXzRqFGLyhTMSQdPL
LwAeIWmi0GUICAyDu8jjhXcEovOEGcjMgodXAFw8vcWMOx4JhdUiSEfC3TscYZnCMUXFwsUjRMzE
y5AqyhWXlAyvYOHUSmoRKIK3q28MIjOLEBQaCQ+/KATFirJFpSOpuAXR8WK2HlcgHBqZmXqkV7Qh
RizzDoqDj0gfmtmIlPRkuAYnI7W0HWnUDt6hiMoVJiKnFMFRcfCPyUdKidoApIoDG0t1DUpBUlkT
Uqj9hMlIK6tGgH+EMACVyCypFO1EVxkqNPsd2d4MwzDM+5IqJmTawBotXXavlEgQ4/YLMSM/d+UR
Lly1xaXrdhLSexHEfSOzxCy9djB9VEalNH6/8EsA3RKgWXtqIU06aZJKk9B6ZFV24PJtB0RHRePg
kQvYf+ouNu04DVu7Z3Bx9YSdSwiyKtoH09NkOKOsBQHRaYjOoFsHcYjLoof26J79EPSFfJfvvcC5
C7cBDKC6qhrbdp2UYlGyqJ9uWnU5a6UrFXRVQBtXaKJb3ND7lgZg997EyqZeMduuR8owGpEm3Ien
8zM8dvYXwa8J2ZX1IqD5wysqDwnpGfAIiEBoQhKeC7cTnZUPlxeu8EsUwTk0BB7h6QiLCoOjcGSx
aSmiMN6IyCqDn48vfOJLkZpbAC9fbzx97oPwjFy8cPIUwbEY/r7+8I3PFkYiBAEJJYiMiYCLXyzC
42Jh/9wdru6ecAlNgK+vL9xDskQQbkR6eROiYuPhE5aNtMpKuLt4ICBFOMCYcJG/hzAKXnARZfXy
jxb1qESgMCmh6dWSI6MGT0jPgqdYH5NZjoDQMIRlNSMtMw1uoaki+NcgIDgU/sIwpJeK/cQlwN0v
BIHxwgCUtohlYv+CGDIgQalILqdlTdLlnrSyKskAhAoDkFHZiJCQSAQmFot9CpPwUnszDMMw70ua
GIefeQkDIMbxGDGb1t5/Tyluxrlrj5EYn4i21hY0NzVKdLS3wd3NG7cfe4n41zyYXnu//oVfIsJS
S+EXlSoMAJmMRgEF2QZkV3Xi4s2niIuJha9fEGzsHPHgkQOSk1Ph7OwGW+dgES87BtOTecgsb0Vg
TLqIM2V47h0vDAA9u0D7VD9fkJBXC3cR6E+eu43U1DREREQjXcRZLzExPn35kRTk6faytI2ATA5N
NskA0O0Mqj+1Q3JRPUqaZHj+tgagqlkmZrEiaFFAHKRZBMgSePuEICgqEa4+kWJ2W4dAEaADUqqR
VVwBn+BwYQDEzDcgGWnVDfDzDkR4TiMSkuPFbDwZocId+UYWioBYAg/PMCRUtCIiLAz+EWnwD4xA
QFwqPL2CEJaeAy+vMMSLBooMDxeOKxW+QRGIzG1GclqiCLixCImKFGYiHNH05GWxCOL+QQhILEdm
RQsyKsTBEwfXNzwb6VVV8PYMQnSBCNbhwXD0jJS2SRLuKZYu1fgEwScqA6nCjaULkrLz4BsSh4Si
NuRVNUrBPjijDonJCfCOSEVIZBxCU8uRJQ54elEdMqp7kJGTBVfvEMQI15iQLYK7KENccjK8g9KQ
ViUMRWYJEgsakVkpzIMfXbGoRnZ1I4KFAQgRxiSjXBiMYW3NMAzDfAg0rj6nmbUwAHQ/nQIlkSpi
2dV7jrhz5yE8PX3gKmbohLe3Hy5cvCHN1ul2szY9mQCaTbsIAxCRVoaAGDGui6CaUiQmbkUiyApy
qrtw/YEz7tx+CD+/ADEh9YefL/0NwLlz1+DoHS0MQOdgejIP9OU8QbHpiMuukAwA3b+nKw/a5wTS
y1px8ZY9rl+7Axcxid1z+JIwAzelSfHBw2fg6BMj1WXwuQLaRkw0yQBEZYi4UqaOK3RFuqy57+0M
AP2KUHWLXAqGlMEQrcgsKxPuJgJxxW2IjY2BZ2gS4tLEzNjTH65egQgSwSxRzJS9xcw3vaoBAQGh
Img3IjElGX50/zwuHv4xhcgoLYW3bxQShQGIjIxCUHwegsVM29U3CG5eoYjKLhSNGIUEYQCioqLE
zL8Y8UnxcHYPgLu3D9yDUkQD0mV4P7iJ8oSk5ovZdASCkytEo4pyioZNzcqCtyhfankd/P3DEJUv
6pOfJ4yHH9z9w0XaMmQUFwt35qUOyJWtyKpsR1x8FJ65+AgTEwq/uFwkpGXDw0d0Ev9YxKUXwd3T
Q5ifUHiFxCM6NVcYkxC4CUcWnFwugn6iMDppyKjpQmJaOvzDspFZ2yAOWLDYR73oJPUIDo5BZE4d
8iqq4RsciajcBlHmkW3NMAzDfAhZYkx3pNvF9ImAPPqkFgVX9bNoIYmFuCNm+jceueGmjbvE9Yeu
ePQ8ANEZFVB/skudPi6nVkx+m0QMSJICa1BsBjJLm8REtlVAV3hbxGy+TXpe4OEzP9x76o379j4S
dx574qlbqHQLIUOk0aanhwZzqzsREp+FhNwqEbQTkEzPB0i3CNSX7ckoBCcWSPncsvWQPhXgGZoq
yumCp66hkjmRriaIstLzbUSWqPcL30TpCgLFQmoHulVf3qp4BwPQKpceWMgsp4rpQlcByFm1IVsE
rVQxA86qbENaYZX0sEGmCKCZZdQwTeqZeCmlFdtplmXQX1EYbT6UpzoNmQtRkTxyWrR8+HoyI7S/
lPxK6XJGRikd3HZklIiDmVMuGoGWUf5iXyIdGYCcShFswyIRTLN1kR+VI1t3myIKvOIAljRI+6cg
TA9yZJY2iP2I+uSWS/dqskX9UgtEQ4uDQSYhraharKuQHraQLrGIMiXma+tOl/+p7lQfqrOoK7UD
tZkomxToxTbUZjHxcfAOT0dGVacoH7UtwzAMM1pkV7WJmXe8iE/10mw6rUQEXgmKQW3Ir+t9ibza
HjFWU1qaPavTpwryazrhFpiMSGEOQuIzkVfVLgJ4t6BLgq4AFIjty1oHXqK0RYm8mp7BtNr0xY19
CE/KkWIJGYD04gYRM4ZMBZWBnhsoqJMhv75Xek23GgoaqJy9UjkpxkiI+EK3r/NrOuDil4TYrCop
dlE7UOyraFO+vQGoaeuTAixlMJIcUXH16/bB1zlVHaJCHXqWj0wr/krvddaJv9Iy+ivyeGlb7Xop
D1qvm6ZDNKbm/WA6DWJdZrFwVMIVDZVtxDbSe81+BtGUY1iaEa+ldZTnUJkGtx3Mb+i17j7oNZGc
Wybdi8rVWccwDMOMDnkUtINSERidgzh6wl/M0N+H2PRyQRmchJmgSSF9CRBNIjNLxMSzuO790GxL
VwBo0ugWmIrg2FzEZpQjJk3sdyRUFn3Lh1GO6LRSUc4E6coAffkPtQNNOKvaB97eANS1KcTGnVIG
hDbIjStEACanRV+AQK/1pvlYiPLk1XSPzbIxDMN8AtD4mi4mWV7hWfAISYdnSMZ74x6chuj0CjHD
7kKmmG1HpNA37+UJM5D/3oQl5kkfP6c804qa4BWWKcop9heqh1ct14G2dQ+mhwqrpCsW1Aba+F3T
gXcwAO3CAIgMaKasni1TZgzDMAwzXhDxSwTXwobeD6aoQYb82m51nsJY5Nf2IL/uw8kT5fvtykkm
SMRvgQjnb2cAdu3aLRkAKhg5KKKmqQMNLR2ob2YYhmEYZixD8Zp+1E+6ki9ieK0wAG/1PQD6DEBL
Wzu6OtvR2cEwDMMwzFiG4nVpnfrq/QcbgObWdnSITNvbGYZhGIYZy1C8ZgPAMAzDMAYGGwCGYRiG
MUDYADAMwzC/OR0dHejs7DQIqK762kCX37o93q4MbAAYhmGY3xAKRnV1dSgvL//kKSsrQ01Njd52
0IXS6Nt+tGhsbHyjCWADwDAMw/xmaIN/ZWUlurq60NPTg+7u7k8Wqh8Fd6qvvgBMy6qrqyUo7Wi3
B+VHVwDIBNTX1+stgxY2AAzDMMxvRltbmzQr7uvrg6FoYGBACsAtLS3DAjC9pmW0TqlUalL/NiKz
Re3OBoBhGIb5KGgNAAU8lUr1m0PB92NDoisAzc3NLxkAWkbrfsuyUt5kuNgAMAzDMB8NMgBVVVVS
QOrv7//NIaOhLyj+nowFAyCXy9kAMAzDMIYBmQ0KfNrgSn9VqpeD48hlepHCuFp6178G0qgZAKm8
73Z1g9KyAWAYhmEMhuEGQCUFYkmawDik1wdT2l7RWQ1P+4eIyK1/p+BLkEbFAEg5DZfedCNgA8Aw
DMMYFGoDoH7YsDkvGCvnTsG6k06DgbQ1zw9GP0/C/jth6BdBkgLloHQCsqS+Fhwx+gLGhz2kt7pp
VTrBVh+kDzUAtDtVbz2eHd8O8w2bsMx8HyKKG4aV81WwAWAYhmEMisErACIADygacHr1dPw///vn
8CrqEUuUcDwyB/+v//ITnNNFINWop70ZTa0d6jcqTfDv70VrWyf8bm/Fzitu6mVC3W3NaOtSGwx9
gVcL6cMNgFjfVADbhw4obOzADbNvMGeXvZQ3lVPfNlrYADAMwzAGha4BABrhcPsutqyYD5NrQWgv
DsL+nZuwZtl++JV3i/X9SHJ4gM3LzWG5YjF2nXdDl9iwqzYe+zaawtJyO2bN+RGWtwJFWgXiXK9j
7ZotWGOxHi4F1dIe9AVfgvShBkBCyklooB6n91nCNrJEugLwpisQbAAYhmEYg2K4AajHnSsPERni
hjWL5mLdlkMIDw7EjtVb4VWjREeeE5bPNkNqo0jdXgDzmcawzyiDy9HV2Ho1UsrB5eQqbBbmoa8p
Bot+mYz7oRkIvLcZc1edRZtY/6pATBoVA0DPMSg64PTgEK54Jkr5vin4E2wAGIZhGINiuAFowYPL
95DX3AXbjZPw5cqLYnkzdi7fjOBWoDrwBIyMD0EupQXuWlngkmsQTq9fgvuRFN6B0DubcdAmCvIS
N0z4X//AzhMncerYEZy68gJtNBN/xaV40mgYAEqj6qzCcy8v1NFdjLcyDWwAGIZhGAND1wD0Nqdg
/ZJVeBBWAVlHAypaetBdHYof/+MfOOReBGVLKrbNmYXjN73g9+QqZplsRnJ9NwKvm2PWpl0ISIrG
/iXfY9qGy2hszYX16uU47xiK5PgoJGQVQ0HxWE/wJUijYQBIfbWJ2Lp4FYIqeqX3+tKNhA0AwzAM
Y1AMGgARANtKE3H5wgU4xRZJgZPUmB+NixcvwN4rVXrfXhSHy6fP4uzZ+4iqaJGWQdaEFw/O4JKj
H+JjA3H7ziPQIwM9jdm4fOYMbj12QaNM8doAThqtKwCKtjI8v/sQOc19b7UNQenYADAMwzAGg64B
0JU2MOpq5HuSlE7zerhGLH1DICaNhgGQkHIjvWV6ARsAhmEYxqDQNQD6AuPvBWnUDMB7wAaAYRiG
MSjYAKhhA8AwDMMYFOPJAJD0bTsaUP351wAZhmEYg4EMgEJBz+d/XGln362trXrLSOtkMpkm9W8j
2k9FRQUbAIZhGObTh4JdbW2tFGDLy8s/GkVFRaivr9cbfGkZrSsuLpbKSUFaXx4fAuVbUlKClpYW
vWXQwgaAYRiG+SSgYFdTUyMFv9LS0o/Gq4K/Fq0J0LftaEAm4E3Bn2ADwDAMw3wydHZ2oqur66NC
ZdBXNl1+63K+KfgTbAAYhmEYxgBhA8AwDMMwBggbAIYZZ9ClvfGGvnowDPNxYQPAMOMI+mgPfY54
vKHv41AMw3xcxoQBoEGNBohPBarPeKvTp3YM3pbxdqyampqkc0bfLHssQyaAnkrWV6exBPWFkeMT
w3yqfHQDQCcdDWrMx6WxsVHvcmZsQcepv79/XEHfTEbnOn3sSV+dxhpsAhhD4aMaAO3MgExAT08P
uru7xz1UD6oPzXbGS53oIyM08Olb9ylDx4f6H/XF8XKsqLz0LWP0NZ+jRb9CiQGlEv161o0G9M1s
2nN+LLeztj/QuastL8N8yowZA0An4MjPMY5HqB5aAzBe6kSfRyUDoG/dpwwdH60BGC/HSp8BGP7D
p1oph6V5HZ1tzWjr7NG7bjTQGgCaWY/ldtb2BzYAjKEwJg1Ad0+vmJUopIFDLusZdpJKiIDVI++X
fpO5t1sEsJHr3xox6NF++vvQPbisG/J+2ncfeoalfZnOzi6RdkCUQym2V3+pA9XjdQaA6kaD4si8
Ka/ePqUYuAdEnTp16tQDpRjhB/plv9kXR+g1AN3atpHrbZuhZfqR2kZBBVcMto2WHplcOraUT2/P
OwYEaj8RAN+0/7dBO+BTX9Q9Vj0yddDS2/dGjW4oBlTiuMrf6biONABUzurcGDy2tYHdU3vYP7GF
jd0TpJe1SOu06fRCl+fFORT/ZBe+X2qO3CalOKXe3ji8LVQOauMhA9ANWV+/tJzO367uXun18L6m
RZzr4njQuS7rUfer4etHD21/YAPAGApjzgB098qg6OlAVkI0YhLSUdXQgZ5hQaIb/SIIxT07iqVb
jiCvvgf9bxqoyTDIhGHQDUYiwHW1NyAnPRW5pXXo6e2VytAj60VjZSHS0/LQ2C620wkMunSL7fv7
2+F81gKmB26jrkshBij1pcRXGgDaZ1sTKitr0CFeDw12Ii9FL0Ie7MNqqxMoau5Hf283eoXJ6ahJ
x8H1i3HOOVkMkv2jEvhGMtIAUN06W+uRlZaG/PIG9Io2kdqmtwf1ZflIT89HkxiIu2nw1slnaHsR
pGXNeHJ0HSxO2KGlVwz0dAzFNjJx7LrrKxETFYXE9BK0dFCbjciDjpdcIR0vet1NAWBAKR2LjpYG
lFVWor1TbKe7zXtAdRppAKiv1ZYVIi0jHQVlNcJwjL4JoL7YW5uFg5vX4qR9jDj2b39chxkAEcBp
pm93YDFmmu/D9sWTMc3YGtZrJ8H6Toh0HWBIA5ptXv6hlL6yCBiZLEJMxch16l8U+1CGGwC6BdCG
0pwscY6J87tRjAPNNchKT0dmVhFaxXHQbQsqb7rHRRhv2oXkik4o5L3D2mM00fYHNgCMoTCmDIAU
OLpb4PJgD9Zu2YZNi+Zi3vqbqBeDfx8FAUkDYsBUoTnNFZMXzEJIYTdUYuagUP8CoxggNDNlMdDQ
zFmrruoceMWkiq0hBequHrFNZzlOrfoR//n/8w945bZR1uivicHUf/t/4B+zDqC0u0/MAnvRr8ln
QJr5itk5BbI+9WBZ7HsSU2aYIb9dDKQiaFM9XmUAaItMx8P4w2c/IrhMDlWfCLQiL8mcCLWk2WHm
hPmIruyHStRDW6dHW2dj9SFHUR+VCFC9Uh1Iir5eaft+qqhKIQyJek2fqB+1QY9MO6CrIJeWDR/w
tIw0AD29/ehrK8T+hV/h//j//YDQctHGIuvukgB899/+DzFbPIdqEaBlwjTRJJ80oJCLbTVtoylH
ltM+TPt1Kyq7AbloG6pne2USTh5aD8s9ezDzm1k4aBcv2kUc3366+kHV6BOGQwSMykx4x2ZIy+T1
BfCKSpIudbdluGDltu0oapFWQSnSK2l3YubaQ/sX5e/TNpwktXHQHC7xVgRb6h8inXbAp76oPlbC
XCqVSHI+iq/+43Nc9skVfU0cczIoZER65Zq2H4BMLOuWjhtdsdHUWTQS5UMze9WAMHGaxlG3vXr7
Iclhd3g1jA45aN6/3dWskQZA2S9DTmIIqsTpEX19Hw7fS4KiNRdJ+dVoK0jFzeMncOL4JcRTg4n+
g4E+YZ4f4sSJE7jx2A/ifIeyPAJLTZcjsVbUoTMPz+6cwfGjJ+CZXgTlKDwbMMwA9MgwoGrBo80L
8cU3RoisEka3OhLz/vEl5m+3QbMwfXKZODc0bdLfp0RnYShmL5yMF+niHBWi87BP27aiX73/FcDh
aPsDGwDGUBhTBqBXPoD2Yl/M/XEiwmlk6s3G1UP3USFig6K1Ar7OjngREINWce7Ly6JgvG4pwop6
RcI+ZEf7wdHJBZk1TegTwVPZ34XUMG88F5VJyiqG+9W1+GzqQjz1jkdta5eYkfaI8aUfSd62+OXP
/4YlR+2lASX47mZ88YcfccQmVhrsVTTAhvvi2XNHRGWUoU8EEJrFtpRnwt3DA7a3DsHYYicKW99g
AMTgrxKGw/7cFkz89jsccEgQuSslI9FVXwQfNzc42F0SdVqHOGkm1oeC+CC4e3rjxK5l2HbNVQq2
yq4WxHg647mjM7Iq20T5upAUGYzIuGxkpwTDxSsA5R2dkIng1NmYC09qM58glIpjQ3XWHfC0jDQA
FAgpQEU738b3f/hXrLngKd4DnpdN8bc/TML5F2nSAD0gDExGsJfUNnE5VSJ4CsMkBvvG4lS4ibZ5
cHU3Vmw9gEpxLOW9PVJ7xjzYjKnLDkr5lQU8w537IaAw2pCfCCdHR4RllgpD0I3nZ5birzOXwjU0
Ak43NuCzyXPxxDsWMSEuuOcagtbGKgT5BSMrtwCRQS7CLKShTRx3eV8/KnNi4PT8OTy8fOAl+kuT
MINlWSGifzghIDkDbcK40C0Y7YBPfVF7rOg2TFupNyzmr0NKs2hvudos9MiFEWgoQbDjc7iFxKFO
mMPGklR4BcWioaMLxSnhCBAmpb29FYkRwYhJykVGQgBcfENRTfkKAytvq0aAqyOcXvijvK4HAXf3
YcOZp0iLD4BnaByahNl81RUnLcMMgAa1lHA/uQ07z/lI7waqorFj0QbceRwAt0v7MX2eNfJF8I2+
fwwb1l1AYGAgdhstwta7kVA2JcDY1ARZHW24Zz4dlvtuwe/mbTxwiBLmVyWM5tC+3oeRtwDIyKY+
PwcLaztRalInzptZ4HxggXitQl9HLYLdHOHsHYYG4b6VDZlYa7YYvunVyEyIQGJOKbJiffHCKwT1
HXK1odfTVu+Ktj+wAWAMhbF1BUAMUP3dtbizdw2m/7oBdkEFUtAYaC/Ftf0bYXXwFvbtXIYz3ilQ
1cTDeO1SxFQPINPnMkw2HMCtC9uw7sgpVHcPINbhGFaZbcOpfcthtusUrh5Zjr/9Mg2n7rijrFnM
2EQQUCl7EPLCFheOHIfR6g3wiwrE+UO7sdvCGrvuh0uDUcTDCzA3tsbli8exYOoK2MbXQlkXj21r
jLHp0GXssVyI7413oKzj9QZALma4pYluuPvMB6leV2G07iSaRBTtb8rGsU3LsHbHBRzbY4KvZq9G
lpjo5Addx+JF63H+0mUsmvNPmF32E8VpwxNRPkuzw7h8YBPmzN+B+OoORN7Ziv/xh0W4+vghNkz/
GVtu+qO3qxDHV83D4VPXYL1kE57FFYiZaf+wAU/LywZAmKOBTvjZPxRtcxDzTbYgNMoXZw7txU7T
7TjskCjaph+BN0/DfMUeXD53EL9OWwOnDBGcKsOwaYUxth+/jO0b5mCiySGIWCfN1HqFcWouCIfF
oulYZnEBcaXk8oD6TE9sMbXAuSuXYbrdAoEFFbA7OgefTZiJK3b2uHZ8Cf7yw0Sce+gG5xvb8O0q
a1HeShxcMgVfzDqAR/dPYNqP0/Esswkd+f5YvXwJ9p07g2lf/xHTdt5Fst9NWCxdiesXzsN8/SkU
ihlmH/U3zYBPfVF7rMgANBW4wWzeGsTVkgGgKzR96GrMg+2Vo3h47Q5WT52OE665aMt6ga+/nwXP
og5ku+7H3z6fjdS6bvhdMMO//GUlbj29hzWTf8Ze2wjRXM24vX8tzKyPYofJDJy1T0Dkg72Ybrwb
z+zPYNIP3+Kcb5bYof5jpEWfAVBf1lfC68wO7LrgL7Vp7L2NWGZ+QzOT7sCx5aa4HxqGA0umwS6B
TDPQHvMYi1acQ2VtMlZvWIX01n6kvrgMo8XLcPiOK8ra+6BU9A/f13vwsgEYQIbrWfzzH5Owydoa
1tvN8f1/TML10BJxTjbj0QkrbNx7Dcf3rMCh56FQteTBxHQJQvKb8OywMf76iyns3R5i45IZMD/+
HF10e0hPW70r2v7ABoAxFMaUAVDf+6Uhqwthjmcx74fvsfNGOKqznmHif3yD4/cdcG3PSsxccgY1
NclYtX4lkmtqcWbJPzHP/BzsH1/EjK/mwSkhHoeNF+BxPF0yFIODQsymA65jyd6z0sCnkNGl927J
AATa34atewwcjq/Av/75ZzwNTIPTsV3YcjdaRPR0rJsyBc6Z6nkKXWJdtdcWoQ6HYbLptrSsO/0x
VqzZivzXXgGgGbUMDodW41eLE7h+eB3+9NlExDSrUOJ7HkuND0FsDtSGYN3KdcgU215b9yvOOhfR
UgRc2YBtV31Rn/4UC6avQbaMlipw03wVtj9MgqLIF7N/tUapWJrtsA8mu+9A1lUsAv8srN1zBUEJ
JWjvotnly4Me8SoD4PnoJhz94nB/1wL829+nwy0iA4/2bMU+h3Qo26OxavJM+BRTWUQZz2zH+hOO
8H+wG6bWT6RlTTG3sdJsDyqkKwDqWxAUqhQdubhzcB1+/vZXuGTUIPjaOnwzyQSPnzyB+ewJ2H0/
HSVi22WHrkj5NETfxyIROEndmc5YsNECdWLiG3VtP4x2O0rLb1ktwCX/YpT5HMf0ZYchaoDb1sY4
6JaO6ng7zJo8G1ceuCOzpEXMxtVXQrQDPvVF7bF6yQD00cOQSvT3tCI7LhL+Pt6wmP01Fh53E0G9
Els3rINTZjvQloRNq1YgQmzTHfcYM4wOoUGUIe7OFmw66YiGHDcsm22GArrcoWoX/bwX3le3Yen+
x1R8KbBtvx4AlUqhcxxe5tUGoB8Oe4XBOK2+AlDoewbzZ2xEEd2aqonA4nmr4F9ciuumM7D3epyU
JujWDizYYYeOhkQYmSxFQnkbinLyUV6eBeulUzBnz1Pp6oyyX2df78HLBkCJ5GensXjZAcTk5iI3
IxSW85bhcnA55DW+mP7ZP0QZ7XH3uBkmz9qDsrp8bDBbKPqaEu3hDzBr8RGpbfuT7TFh2gakdyrE
8Rky2++Ltj+wAWAMhTFlAOiht8o0X1y+6S4NUB0pNzB99hbEJD7DtL98hyvP/eDr6ohn3vFor0rC
GnMTZDQ14qTRd1iy5QqCA/1g88gF+UXx2Dx/MRyyyQD0o7GjF8kvTmLu1qOijHI0trSiS+wPKjki
XjzEA89ctGQ6YbGxJSr6VHA+YIXN98UgqcjBuok/w14zYwq8vA1rDj4RQW47Flpdl5ZRAF9ssgsV
IuL09agHkZEGoKdfhYH6aFht2wsbe2c4uz2H2azJOOmSIwLWSUxbsgdinEZ7qj2Ml5mjuK0Vx5ZN
xlF3uiQK2O1bCuu7EWjPeY5fJyxBGiUWJum8mTF2PU6DPM8TRsuPo14sTbE/gLUH74lAJkdlcSFC
3W9h2uQ5uBZUiAG6/z1i0CP03wLoRYD9PTwNLkVN7CMYrd6FZjFwP9q+AXufZ4rdJ2LlL5Pgnq2e
Y7qe2ATz087wuLYRxrttpGXZL47C2PwwGuXCAPT0iNlkJ4Ic7uJ5cIm0/sURY6w/6QSfWxb4caoZ
3AOD8fyxLcJz65DkcgS/Wp8VfUKJFLdTmGO1D009A6iItcMCc0s0DQAhlw7A9CwFPBWu7ViMS37F
6K9PxFaTZdi0Zw8Onr+G0rYetDY3Ij8rHvePbcDPi6yFwRIBQ2PWRhqAHroFUOaNTQvWI0cyWh3w
cX0Ix6e2OLjrIiKjw2Ey5wsYXRQz7d5CmBgtwovCPsiLXmDZ4uVIbBbHMdIGC9deEFsCEXe3Y/Ml
NzQmOWLB/C2Qat7bgsbOPgTSLYDLXrQEz0+a4LBtpKiK4rX3tPUZAOXAAHrLY7F86o/4Zcl+YUaV
GJC14NnJbVi80gLrV1vgmHso6GZBU7YftixbDgsLC6zceQIxNW0oCbyBnyZNxOPABDH73gxTq21Y
tXYbHKKLpNn6qD4DINqZbgGkOZ3Hxh2PRC8jNeOs6UZcjahGvzAA0/78OU7aesPf8wWevghFe0M+
zC2WILhchcbAm5i18rDo/UBn2C38MmcL8roU0nMv+trrXdD2BzYAjKEwtgyAGHxbioJgtnwqNu45
iO0bV+H0k0j0dFbi6qEtYmZ5Ejfv3kd8QRUKgm/gr5//FTdDi5Dufx+rTK1w6dJFOPmEo6W7A4EP
D2DGsmU4uO8y3CMrUJntiV8nTsTWQ67IbWiT7hUrOkpwZNUsTLe6hQ4xiaLbDcr2PFhO+iv+OvMA
qunBqoeHYDR7NQ4f2IUFZpvhltcEWVkk1i2fgo0nzuHSmZ349vPv8TimUsyU5FI9dA0APbQn7+3F
5dUz8LdfFiGXRi4Rqq1n/wV//GED0nJTsN9iDlaK+l67eQK//P1zXAspRKb3VcxcNBuHH9lg16rp
+MloB4pa2vDsoCkWLdmCQ1utsHDXSWQ39CLh3g786S8z4ZdbBhvrCfj3H5YhPCoEOzasx7kLRzB3
gQmeJ1L59H98b6QBoIcA+1tzsWvxDCzYY4deEePpGkhfYxrWfPcXfLPkLBpEYAi6sQsL567F4X07
MX/jDgSUtKEzPwArl06G1dnLuHDMCt9+PQkuqfXSRy2Vqj7EO5/Er4vn4tDhPdiw0QoeYl1jQTCs
zDfg6IWLePTUBYWNnWhMe4ZZP0/GnvNhyE7zxNJpk7DzmCfsLm/GH//yBewiknB51RT8w+gUiotT
sOyff8QU64coTPCC2cK52LhlG/YcOAq35FwEPrmIdeb7cGTnBhhtPosycbDpwTztgE99kV5rHwJM
djmGr/70D6y3PoyDm1fjl9kL4OTugnmz5+HIbXccs56Db5fvRHVnG65sm4nJK7bg4f3DmPL533Av
PBchV63wp78ZIbKgFNfMv8afJq1DQVU1rgojN2/TDpw99Rip2YU4aToJn8/ejbziAljP+xsmm59D
gzA5cmEkdY+PLvoMAEFXWDpE+ekBR7plIT0YKo4amZ+mVjJ0ws+KY0BL+2WifRsb0SWXbrBJV4ao
X0i34OSiTYSpbu8i9/MbfApAegiwFTZbFuLzrxchqroHsuoozP37F1hg/RSd/Q14eMoaa7cexvVb
dxCRWYaKuKf4/Iv/wEnPArQJM/r3L36E5Z792LBkES64Joj8X3/b5G3R9gc2AIyhMKYMAJ2E9DG8
hup8hIUEIyYuA109fdIDbbLuJsSEhSAqOVPMqPtRX5aHhIQE5JbWiyFMieLsRAQHh6GyWQR3mRjI
ejuQGReBkMgMtHbIxEDUheK0JCTlVEgfNaSPI9HHADMSYhCbnofWTjEQie26WmuRkZSAxIQsNIhl
KmUv8lKjRd6hopFapQfdZPJ+NJZlIyw8GsV1YnaZnoCcsnrpm8SoHroGQKqXaJOMuARR3kRUNYtl
Yh9ZqYlIiE9FTWsvuuqLEREaLg5AA0qyk5BeWC2ZiYKUKIQl56CmrhKpSUmoaZOLmV0rkqJCERwa
h4q2XulBvLK8DCQmJqG0sg5Foh0Sk1JRWdeEoswYqdyZxXXo0/sZazUjDYD6Y4B1SIuLQVxWoXT7
gNqmo7kaaaIOSUk5aOruhaq/G9lJEWIf4civbRcDsVwEpz7UF6cjNCIOpfUNyE1LQF5lo9Q2dNWl
t7cTRTkJYpsQZOdXok+kp0vsTdUFCA0ORnZplTBnMhHQOlEo2ig5T8wKRb6lmSlIyRbBoDhXqmt+
Salo9yQkpOahpqZcHLNk5BYVwuHCTqzbexNZWVnwt92JL4zXILWkEWmx4QgNj0dtW7d0q4Zm2doB
n/riYP8TxqC6OAcJiQkIF30wWByXpMwCdMhEGXKTERqdhpqqUmSkp6FB9KvOljLERESIAN+IstxU
5JdVoTQ/U/SfFJRX16IgM14cjzSxX9E2rdWIFn04IbMK/d2twtiIPpGYgaqaamSliD6XLtq1o+eV
t2qIVxkA6RMBwrwolYrBGTt9XHZwmc5lfIVob2m55v6+Np1C5EHfvzEynw9l+BUAUb+eVhSmp4j+
n4DyBjEONFUhWZzLSSl5aOsV6eVtSIgMRXhcKjqFUW+uKhRpE1FQ24FizxuYMm83fBPjkJBWBJmo
y+va613Q9gc2AIyhMOYMAM3CKMDS94fTINSjmQ31iJkDXepUikGKAhnNcihNn3Q/Vwzq/UrxXglZ
r/r+Ln1hjEI5IF32Vg8Q6tmdQgQX7Qkvff6e0tBHvbTLxAAlLaPttO/pq1LFvvrlwjho0tHT+wOi
fGQ2aD/qcqgHEV0DoN0X7ZvKp/7iE80+BuiLUERQFAaH1vWRcaH7zcIEqfdL9SXDIWbP1Ba0raYd
pPSautKXqmjrTg8bUrl6xWt1mwy84gtWhnj5FoBA7J/qRUZkaJloUzoGwgRJ+Yn36nqIMut8Pls+
rG2U0ux0KA9RL025+nXKpT3m9AkOdVpqIzpelC99jE997NTpRJ4ib1pGx46ustBH72g2m+R6E1sW
rcfevXthZbodN+2DRRAR61TqctKnEbRl0Q741Bd1j1WvaG8qixYKlNJHCancYn9UBqUIatQ/1P1w
qDz0sVH18aCPSdIxEHlojl0PfYxQ5KfopzqK/kjlF/2sV5Sf2pE+0vi640S80gCMYUbeAqC6y6nu
1Gfp/Bb9SDq3hdGj+tOXZanfq8/1wY9fKltwc/s8/OPbpYipoac81Fcv9LXT+6DtD2wAGENhzBiA
8fJd7G+C6qE1AOOlTjT4kQHQt248oTYXcjRXlyAvLw+FpXXCjAyog4wIOiPT0/Gh/kf9cLwcq/Fs
AIj3b+ceYbjaUVdbheqqajS1jP4x0/YHOnepTzDMWEA3Zo42H9UA0IygoaFBuh9JrylwjneoHhRM
x1ud6Jfa9C0fb7S1tQ9e3qcvJmp/zTHQ9j8a9MfLsaJ+NR4NgPa8+LB2bkNHJx3bLjF+jP7x0vYH
amPqEwwzFqC++VsZgY9mAKhCdKL9lpVjmE8Nul2jL8iOZegngWl2TQFWX50Yhnk1FCfpKq2+dR/K
RzUANCOgh8ukB5DELIFhmNdDwVRfkB3rULn11YdhmNdDVwHI+OuLox/KRzcAvb2943ZQYxiGYZjf
EjYADMMwDGOAsAFgGIZhGAOEDQDDMAzDGCBsABiGYRjGAGEDwDAMwzAGCBsAhmEYhjFA2AAwDMMw
jAHCBoBhGIZhDBA2AAzDMAxjgLABYNDXr6AfRJV+PlbveoZhGOaTgw3AW9KvoN+EH5JCT5qR9CvV
ael39/WtJwbLp5B+lVz6TfiRad7IiLJp9VZlFPuXdbWgrKwMzZ0yvWkYhmGYTw82AG+BQjkAlawe
7rbXcfHCJTgGZKOLfmToNYFdIdb31OfDzd8fjd1KKBV6yqFQOwSlUoG+1gp4+nmisrVPvH/7Mvcr
FOhvq4KzzVVcvHQZ169fw6VLF/HwRSBa5fSDD/q300I/liSrzcT6hV/B8lGUVB596RiGYZhPCzYA
I6D0WqRldHl8oAu2Z9Zjy9VH8LI9jl++WYfYZrkULF8nRUU0rE8cRXG7ZsFINeXg7L0HaKHXHXk4
cHwPUmo0lw10JRmCfs2bIamEqaDUXRlOmD7HCFeuHcOEL6bh5JXTWLVsGZKkjIekvbqgvtaglfrq
gdMlE2y85SW91pXyFW3DMMyni/acZz5t2ACMgLbRQj8nLF36V1Zg+6wfcMSpQAqKheFxqOrsh6w+
E1dF0N61YyecfJMQ7nAfl267wz/QFltO3oSrw20cfeiFnuZyXDt3Ck89w/D83hHsOH0X1d0yhNqa
47//+U8w3X8Hbo73cPD2M7S21OOpCOCX73nA6clZWB+9hMy2XgwMKJEa9BjWu/dgx47tsD50DRmi
XSiYd9fmIqO0HgPNKdi8fBfyOpWoyE9HXXM7vK+exZ49u3Hmjjua+tWhvy4lAmd37sHu7fvhk1wp
LXM4vwaW9wKgGpAjyfsm9u/djd3nH6GiTyGMg6iraAvdtmEY5tNFLpfrHR+ZTws2ABrot5EbGxtR
W1uLhoYG1NXVoaWlRdp+QHiAqmQ3mMyfjPnLTyKtjgJpK86az8eB+/4IfXEat51DkPviEv7tLzNw
zfcpdl+/A2+HK/hl+RpUd3Xj0dYF+GbBIaQXJuOE6UKYX/JHeZodpiz4FS6xeSiPc8BPC+YhtUGG
mOtb8K9fWyEiLREHFk7B/qcp6KsIwOJ5S/A8ORsXLabjp/UX0NpLtyGEY9dcNJCVBcHMyAoJzfRO
Becjm7DZ+glSUuKwf9EibH8Qi876KFgtMMUTj0TE2F/C9GnmSGrqh+u19dhpH4Gm+LuY8d0c+IQl
wPbsUxR0qM1HW1ub1Cb19fUMw3yi0NinHQP5SsCnDxsADWQA6ATo6emRXtN26m37Ie/tRjdd8e+r
wLMTJpg6axdScoNh8etGZHdTsFWrJeohJi/YghL1Q/WQ5Xtj0SZz1PQDyfdOYfVRD2l5jdslzDC9
hfrqGCy32ogaWtiagpXmK5DWClR73MDiLQ+ktL4XTXHINgZ9lSFYtnAFnNNycPeQCXY+DJbWD5Zf
mBRZZRg2Lt6CJJEHZCkwnToZXkVSMtQF3MWqTdcR6Lwfq8wuS7cOgF6cX70GN8Jq4H57I7bahGCg
owrnd5lg9brNsI3MR69wF9pnHbRtwjDMpwmNfXS1jw2AYcAGQAN1fOr03d3dw7ahq+aK+jhYrd2I
mGqRX2MAjI02iNl5LCwXG8E2rRKdlYVIL2lGVcANfD3JBJmd6vvqLanPMGner8jqGBAGYBemmp9G
e2c7XA6txeozvuipDsHcJQvhn1iHkkQ3zFowDcGV/SiwP4Vpq69AIWbeT/YvxOrTblB01OPqzvVY
s3krjl55gMY+sQOVYrCcFNDb050wc+JyRNaJd6pGnDCegv03YoWp6YDN4XVYe84HVRlPsGjSCsSV
daO1MAAL5y9HQHEXnp1ZivXX3dFQloeE5AJkBFzFZ3+fAZ+SXpGzcnA/DMN8utDYR+MmGwDDgA2A
hlcZgD7hAFR9zXhxby9WbzDFhrXrYOOdCqVqAGm+N2C8fDWs9z1CYXUrgu/tw7QZRniRVA2VSoVE
51OYPm06HsSUo8DpFP76/UJstNgIq11nkdsmE9P3OlyzXguznfbwcryDmTOn47xbONzObsZMoz1I
zc/BWYtZmGVxBulJgdhoPBd7jx7Dkf2bYXLuNko6+qCiBwQVSgyouuF9azemTJuNm17pYv9Ac24g
rE1WY+PGDTA/eRvZ7XJgoBcBd49j+cqNMDPZhsuhaVB0V+GY2Rws2XsTyeEesDBZg82bLXDotjta
eumTBDwQMIwhwAbAsGADoOGVBoDQfFFOv1wGmVzzWqQhDfTJIaMH5eijfFI6lUineYBGsx2UMjza
vBiT1t9Ep/aG/QClV7+mj+opNB8JVIj8pI8HqpTSgziarwdAlM0hLF13GnmFhcgKvI9py4wQVkKX
AYZm53Lt/ikP8V66DqFSiHaQqZ/819lnf1+vKPfQPhVKlVitQL/Yt1KURyajvEXu7/O9BAzDjEvY
ABgWbAA0vNYAEGIZLZcYXD60jN6/tF68VoipuKqtFGd3rcP67ZdR0iYC88BQ0B7cRg/q9cJciDw6
a7Px5NBebN+2DVutjiIgqgz9yoHBfIbnpW+ZTp10lmnLqptmcN1rvueAYZhPDzrv2QAYDmwANLzR
AHwI2isBQq/78qDXob0SoKshI8IwDPPhsAEwLNgAaPhNDQDDMMw4gA2AYcEGQAMbAIZhDB02AIYF
GwANbAAYhjF02AAYFmwANLzJANAySsOMD97muI/2MdW3D10MoQ/pqzczfqA+ygbAcGADoIEGr1cZ
AHpPjUSNxYwPurq6XhuQaB1966O+bd8H+qpkyvdV/Y2W08c6W1tb9W7/KUDn3dueb8zYhI4fGwDD
gc5bNgCCVxkAWk6/CVBRUSH9VgClYcY+lZWV0nHTZwLo+FKnp2NKX/88Gse1pqZGgoL8yD5H72l5
dXW1lOZT7UdVVVXS37c955ixBx07NgCGAxsADfoMAP2lWSIFE3rNGj+i40cBno6fvj5Ax5SO9WiK
fkSF+t1I00HvKeiT2fiUpVQqpXalAUWf8WLGPnSusAEwHNgAaHiVAaDGoZkbaWBgYNyjlUrPuk8J
Eh03On4j+wDNxskc6NvufSFR36NfTKRAqLs/ek8zf+qXJH3bj0XUUuldpw8SnUN0m4MNwPiEzhU2
AIYDGwANrzMANHiT9A16WkZKX5pRRf17Q2qJ96+S7jak/t4udHT3St8uqLvuQ9GVvvW/N6TXGQCa
qVJg1retlpHSl0YLSfuTyfoMAF0deJ0BGCl9aUab10spPUfRp9C/rT5IdJWDDcD4hc4VNgCGAxsA
De9vANSRuCo/Hg729njhHYem3j7px4D0p389g3FdpX89QXmrehoQ6ucOd98YtCtUqM+Pgbu7O1IK
K5CbECpe+6CwrlNTDpFeZNlSEIWTOxdhzoSNiKrsknajL/93Q+Qt9lGZFQt3D3ckFdSry6c37Sgw
2EB61ulAen8DQHUCemry4P/MHs9dw1HXrRDH5NXHlPS+BoCk6KmBu6M9HJ57IbuiWdrX+7XhYAPp
WTcEHaPWimz4enjA6bk97O0d8MIrCDWtPSjOTUJFYwts9s/Dr4ds1b8j8Zq6ayGxARjf0LnCBsBw
YAOg4f0MgHqwzfC4jVmzTXH+9h0snTkTOx+GScuHSz1ADkoT4F9SWxEeuPlqfq9/hDTb0OCNnjrs
mvMFvjA6iTaRTXnQWXz1xVdwTCtF/CNrfPH3uYioES1Ol3ClYvbj3hYzXAnMQGNBJbqG4oQkuiIw
TGJfr5c2IKi3y/U5iW/+9DXsk2ulddrgNVwj9jGol5frbqoT00SkbMUzN0dUaR7JUJfhZUjvbQBo
f8pm3N9njm0HrmL/immYu+0CWsVy1SuMGel9DAA1u7w2AZsWr8CGg7dw2nodJq88hEYp5XANawch
aXvN6yENIMDXAYmaxw1Grh/cr3jdUuiBmX/+MzYeuYM7d85j0vef4XpgMZ5e24rnmSIIhF3E3O3H
IFdvOkzafHQhsQEY39C5wgbAcGADoOF9DIA0uMpKYD5nKi74VUhpWvNiEBCRirQQd9g7RSA9Ixhn
bj5BZa9IWpmMK+fO46K9B8QcTwRJJWrSQnH//AVccw4VAaYfoQ/M8K+ff4X9F5+hSgZ0lMbjotjm
qqMP2mgbmolpgrXrxR3Y8yReet1fFYrNmzajRIzDfblu2Lj+DBqkNepydpaHYcYX32KuxWlEJsbj
ha0TEnNz4fDkNp6GF0gpM72e4/z587jnGAKxa7QVROKGrTuyMuJw7/pFxOSXIDfSDRfuOCC/Taku
i2bgl1X7YavxFhRLgVnTPoLW4iTYizwv2bihSj6ArIAnuHz1KlKr2lEU64ZLF24hR0RWZV0BbEU9
z5+7hqSKHpFHO1yfPoRnYgWU3RV4eusKooubUBh+GX/++x9htvcWkkrbBsswEtIH3QJQ9qG1jQwU
UOh2ELPWnZQMgNaEjYT07gZAyhDuZ9ZjruU9aR1UTfB380FRWSpsbj1HWmE27t27Ca90iuhtcH9w
RbTRdSQ1SL0B8uZi+Ny6iIuXHyC9RYG6Qk/89NX/xK8bjyIwQ2yjasaLO5fEcb0l1msModi3ugcV
4cjKVUhSVxOV6QEIDA7Aldv3kNmoQmXIJRjtPi2ZUVV7KWyvnMe5649Q1NMnFrzc7iQ2AOMbOlfY
ABgObAA0vI8BIPWWemL+VGMkU0TXUbnXJfyv/zURJ5zvYvW+QwiIDscxS1NccwzF5WOrcdolBX0N
aXh4+xbCA32xdNIM3ItvRJHfCXw3ay6e+segpjAcO01NccclBGcPrsIZl2Rp4NYaAPszVtj5KEp6
3Vvihw3rNyBXGI3O1GdYt+ooqqQ16sG+tzEda6bMwLqTT5GZmwPr2ZPwk+UpnLm1G9ttgpD47CrM
TU7D29sbexcvwbY74eipj8PEv/wD1ne84Hx1E76ZvAxekX7YsmEKVl3zU+euaYfOEndsNDJHtnRn
Qb1M2VqAp3evIjggHFvnTMcRl2wUB57En/7lO4Q09KE84Dx+nbUDOeUZOL7GAlfvesHt6kHMnGeN
7M4uPDm0HHMPOEHV14y9c/4Bi5sxqMtzwaRpP+GsTSCKG7p/OwOgmW7LGlNw4uRxRFa9/gE+0rsb
AHrXjuMrZuK4U460Tr1XYehaU7H4i28w7+g1HDi/HSfdYuBxdSssTzoj4NkRrDtwEU293fB/dh3u
XsG4uWERlh12RFtDOpbM/Q5bLz5HZkUt7E6aY+s5V/g+3of1h6+hRUF7UKn3oyjErjnTcMrOFw5X
TsEpvFAcyAosmv9P3EmSoTnqKhbtu4ABRRuuWq/B/tu+eHFrMzadfypdFRh5NYTEBmB8Q+cKGwDD
gQ2Ahvc2AOUemPzlHETXSW+FxOAqBnxVvjemzzYZnF1VhFzEd3/6EQdOncIe0yVYvfUh5P1y5EaF
4smNK5j+5V9xwLNSTMP8sHj7LmmArg06ja//MhFHxDY71xhh3a7H6suxWgNwygrWtrHS6/6KIDHr
X49sMXnuSns+zACoS9qBC+ZWuBnfJL17uGM5zG5GSK+BOuydPwEPYtQfi5OnOmHR0hPoULVg95xf
8SBdZNoeDNN5ZhAlRIaTNZaftJHSattBawByNJ+sG5B+8rgXJUkxcLh/H0sn/hXGF4PEmn5cMl2G
20F5SHK+g+DcVpR67MeStSLQSFsqcH71atyMqEe2x3msP+sqLQ0WgeegbYx0xWW95Wqka9p15DHR
QvogA0BtPNAL12fn8TiySMrvdffkSe9nAFpxYP4kWN9PktZJEm1Hy4+sWYCDbuqrM1DmYv13f8Xy
Ladx8sR2zJy4DgnN/egozsQLewfsNp6Ib9ZdFAlVOLRrKZylzQqx4ou/YPVOsc3RzZg5dSNSWtVl
lXqQshjWwkyZH7qAvWuX4ox9tLTuxJ7FsEnpRXPkVSw9dA3ddVGY+9lfsemQyGe3Geb+uhcl9AOX
I8wXiQ3A+IbOFTYAhgMbAA3vYwCkQbSvDtunf4XV19T3/SPunseZpzFQlPhj0tTVSGqXFqM+/h4m
fzsHHim5yEiMQVxGEaIfHcPanQ9QlpuGX6d9jr0e5WLMdsGsNaYoEHVPdT+JST8tgX9aLtLiIhGZ
UiAFJpVmdhp+fQfmWN6WAmdtvA3mr7BCRZ8Ixsn2WGV8aIQBaMaxlWtxLljsQ+iGhRFMb0ZKr8kc
XDaZhj3X46R3CY8PYK7lHchVdbCYPBP30zqgrPXE+nkbQFvH2W3GslN2UlrtwN9V4grTueuRR7cA
5BW4f+sEHt2+BjPz0ygsLoSV8TcwOuslpS0LvY4Jn3+BTYfvSbcaaiKuYcF0MxRRfOxIw6oFS+GW
34kUuz2Yt/0++iBmoBt+wc6HiWJHOVi6fC48k5pR3yACjdQew4+LtkwfYgDoyoJqoAt+DraIKWp9
5ZUGLaT3eQaAQnHwpfX4YuYOVIq435sXgd27LqBD7PvQ0lk46K4xAAPl2Dz1O+y+G4zc3CwEhSag
Li8Apks2Iby4HA8OLMTnpudEQjl2rp+G6/5VaKmNx5rJ3+OIXRRy8zIQEBSDFrmmbpSnIge7Fi5C
lPpeEWQyspfd2LdhGm7EtKMp6jIW7LmIvrY0LP3uB1zzSkZuVjICwxPRJfrgyDYhsQEY39C5wgbA
cGADoOF9DABdJqaBtLnQX8y+F2KTpSVmLrHAs6QqZLidxrff/YKHYSXqbXub8OzOSay23Ikz1x+g
tLEFlaluWGi0DEdvvMCJvfOx7LANZN1VOLx2IdbucERpTQkc7hzH2s07cf6WDfLr1PcZKODRfnvq
snB851qYif2u2LIbj+MpPPfC44IFfvnJCAEF0pMGUtruqmgY/zwBKw84o6W9EJZTf8SMtVfRoPYS
aMwLxPZly2Ep8lq57QjCKprRmuWBCd/+EzttIpDseRoTvp8Gr8Rs3N49Fz8ts0apMDcUBEgpzicw
8fsJMNlkCcu1SzB3tSXiUpNgvtoYO8444OqZtZi7cT/qpThRCYtpE3A/VvOkWl8bXM7uxJIVltho
sgn7nQIgE9m2F3pg8bypsL7zCNd2LoGx1Rm0DnTj0YFV+HXZOcSXtkFJ9XvpuIyCAaAMVGIWvmgq
TrtlSfmN/hUACsZiQW8tbh9fj0Vmlli7ciWsrgairToOi376Hiv2PRchmaREdpQTzDaYYef+owhM
LUFXcxn2bzGB6Y6reHj3CGYZGyOptg/h960xc/YuBGXWIyPGEaZmYpsjJxCcWgCZcsgA1KQ4Ys4P
P2DTVW/JiJG6SiOxaMLXMD72GA7nzfDDrNXIbJAjyfc+1qzfhAOnziMmrwLk80a2B4kNwPiGzhU2
AIYDGwAN72cAhgY+KLqkb3vrlNO1UTGb6u0R++8W9Elp1GESaG1uRFsXPeSmVl93O5rbxBA/oECP
2Lf0wFWfDB1dveoEYsvWpka0d6uH6Jf2q5KjSey3tVtM/entgFLk04Xunm7IRFm0aZUiT6pbt9i3
QiEXaXrQI1736+Sl6u+W6qDJCgpZD7pFG/b0yqT6UJ694jV9ux5tr/sZcblmfYvYvrG5FT0y9WP6
SnkXmlo6pKDT19uCxKAghIe44Z6Np7AqQnQfWUopAmhLI5paNfcQNJ9CUMg60dqhbove7k4x4xcv
RFt1dHZJ22n3PxLShz0DoEYp+oVSBE1963QhvY8BINR9Q4l2cZybO9Qfz1T2i+MltXMvlFI6dSp5
Vysam1oH2wwDcrSI9/1KlWirLvT20xoVusS++jWdrrezRRyTNvV+dO7b98t6pX10dol+p1mm7KNl
Auorgh6xTqbu0uhqaxbHR12HV5kuNgDjGzpX2AAYDmwANHyIAdAOzlppZ+iSdC6TaibLkvRtR6Ll
WunfZji60g7Kg9J9SEsnI9396g7kulJvo3kjajP0Uv+2Q0uHROuHSwHH42ZYY3UU6U3qD5cNbq+b
wWC5dfal+au7L939j4Q0GgZAkiicvnW6kN7XABDD6y/2p7NgKJ1Oe2jaaKRouXZTdRqdbQbzUaO7
z8Hlwwqilnq7V+ejhcQGYHxD5wobAMOBDYCG1xkACiSkkfc8mXdleHDRn+bD0d6WoB+neZMBGK1j
SqLA9zoDQH2TpG/7TwES1Z8NwPiFzhU2AIYDGwANrzIAMplMChY0u6NBjgZz5v0ZDBh61o0WlD8d
LzIAFOxH9gF6T1d16Hhry6Mvn7eFttf2E+p7I4Mfvafy0Hoqz4fubyxCdaKBhOr4LucdM7ag48YG
wHBgA6BBnwHQLqd73iUlJcjOzkZOTg4zDiguLpaO28hgTNDx1V4F0Lft+5CXlyedTPr2p90nrc/N
zf1k+1FhYaF07nHgGL/QsWMDYDiwAdDwKgNAaN9Tfsz4QPe46UO7jmbu+rZ/V/RdaRgJrR+t/Y1F
3qYNmLENHT86lmwADAM2ABpeZwC00HJmfKDv+OlD37bvg7689aFv208FffVlxhd0HNkAGA5sADS8
jQFgGIb5lGEDYFiwAdDABoBhGEOHDYBhwQZAAxsAhmEMHTYAhgUbAA1sABiGMXTYABgWbAA0sAFg
GMbQYQNgWLAB0MAGgGEYQ4cNgGHBBkADGwCGYQwdNgCGBRsADWwAGIYxdNgAGBZsADSwAWAYxtBh
A2BYsAHQwAaAYRhDhw2AYcEGQAMbAIZhDB02AIYFGwANbAAYhjF02AAYFmwANLABYBjG0GEDYFiw
AdDABoBhGEOHDYBhwQZAAxsAhmEMHTYAhgUbAA1sABiGMXTYABgWbAA0sAFgGMbQYQNgWLAB0MAG
gGEYQ4cNgGHBBkADGwCGYQwdNgCGBRsADWwAGIYxdNgAGBZsADRoDUBPT4/0mrZjGIYxJGjsk8lk
bAAMBDYAGqjj19XVobW1FV1dXVKjMAzDGBI09rW1tUljIRuATx82ABooHW3b2NgobcswDGOI0BhI
JoANwKcPGwAdKC1dCWAYhjF09I2RzKcFGwCGYRiGMUDYADAMwzCMAcIGgGEYhmEMEDYADMMwDGOA
sAFgGIZhGAOEDQDDMAzDGCBsABiGYRjGAGEDwDAMwzAGCBsAhmEYhjFA2AAwDMMwjAHCBmCMoVAO
YEDJX8PJMKOFks8phtELG4C3ZFCqDxtI+pWafHSl0i5UoLW5Aa2dotx6tmWYD0Wp0nQ1SUq9aX5b
+jX7Vkv1m37nvDj35b1oaWpER7eczymGGQEbgDdCP4zRi/QwD9jbP0F6Wet7/1AGbddekwfP5w6w
s3mI+/fvw/bxM2RXtqE4OwYZlc3wu2KCH0wPoVGm4lkLM6pQ8O+uzcNT0e8e2rojo7wNyt/1R18U
UtDPSw7CA1GGJy/CxKDQ/U7nk2JAykLvupH0K5VQ9TbhytapmHvQVtRfBUW//rQMY4iwAXgjNGPp
h/+lVfj685mIquoCBoYGLM14pNGAtEw7SOlKWi7Gv57GRKz+6g9YvvUSbG0fYOnEP2GbXSICnhzA
lcBCKPNdMcdsA0o7NBtqpVLnPSxrnXIwzOtQDqggq07Fod2rcOz+YxxavhALLB6hV9OVhkT9TB2o
SX392h6nRN9LV68G0K8YdklBbDt8hj8061ZAJf6LeXoWU+dsxPWHtlgyfQZ22YSLpSOkFOesnitl
In6juyQG11wCNUtGaKBfBP2XckO6+zHMsz4FuVjFBoBhhmADMAK5XD4MWkYqDbsCK7MLaBWvVQp1
WhpqmrPjcePYCRw/dgGxRc3SKCVrLMSja8dw/PhxnDx5Cs5h2VCK2Uh/H23RgiumS+CWTrkC7WJA
CwwOwK2blxFc0I7uTCfMt7BEJY3MPVV4eu20yPucMB6NwgMMoLUkArfPncLR45cRW9Uk5auv3MzH
QduPPjYjy0WqS3yAqT8ZIUvytDUIcYuRDEBHfgpuUx8+ehYR+S2iDzfj2YMbcIwsgry9GPcvnIR/
ZgN6a1Jw69wjRGcm4+q183geWy7yqcfz2+dEHz2MZ15Z4pwYQKK3nej7x2AblgA6SxSiPOQTlK2Z
WDltCm5H1EnlaciKQlBMtvQ6P8AFJ0+cwOlrT1DZLbapTcWlszfhHxqBB9eO44Z7pChrO2wOz8S/
fPUTzjxwR2yYF+7eckVCehiOnLuMuApRm44aPLtwGifE/l3Cc6W8M9yOw2jvuUEDMLJtmJfR16eY
Tw82ABroMiRtU1tbi/r6etTV1aGlpUXanlTgfw5ma46jXgwiKkW/FPy7ioOx1WgD7juEwPPqQUyf
a438rg7Y7VuJtWefItD+KP70+Y9wThEDnpjBqw1AE84vnwGr4zZ4cu0Erj0NE6NSG3as+QE7nHKg
KnDD/E1bUC+T4fERE1iddUew4xGs2XMJdW252DH9e5y+5wnHE9fgEVMk/IYK3d3dUnmp3MzHpaam
BjJx7D78ytP7QYO3tg8T1C/oBJceLu3vwour2zB54kIcfRAJmeiNyspo7Fxshlt2gfC9fRzTZ21G
aksn7A+vxJy9Dhjoa8X+eZ/D9HIElF1FWPH1t5h54ApOXNuHMyIoO542g+XJR/B+egin7noiweMm
VpkdFqbWA5aWa+CWUi+ZYur5LVn2mDt1JdKFx6DnXbTK9bqFdYv3wTskBDetTLBo+yPIu6uxY9Yk
/Lz+DsL9HmLuL3PgV9aLGDsr/Lh4NfwTs1CR7Ixv/v1bbH74AFtO7INjVCLubduEw2edEeLxCIsm
GcMxvRMlgWclA0Cnn1Kcu3Re8/nyaqj/NDY2frQ+zPx+sAHQQAaAOj8F05HbkNQG4AQapHcDYubd
h9CbG7Dc4ra0REw9cMzYBPdjc3B/9zJsexSH0jg7LDDZhkK6nC9drqdhsBnnl03Fiq2ncWqnGfae
d5Qu6z86vQJHPHIxkO+KBVa7UNech/X//CuWWR7D0YNWmD11I1LEwfK+vgcLl2/ABedItMj7oeRL
mmMG6jfUh3p6ej7a4El9noKbvv33ytRBtyLJHebTfsT26yFIcjuAZWsvQG1zZTi/ejWuhlQj1eUs
1p52lpYGXLfE3nuh4lUPjq5egH1O6lk7ulKwac4KRFSp35Ieb5+Nf041wdGjR7Fi2hycd06XTCqp
LfcZfvliHuKEJ5DOIYUSA8o2XDGbikO2mVIaNMVhxayNyJP1wXHPVuxxoOUdOLphIdzyxNkTcwuL
959Vp21LxZJZC+Gcp76R0Zr2AAtnmKBEegf4Ht+KzTfikBN+FYv3DV0BGNkuzBDUb6gPUT/+WH2Y
+f1gA6CBDEBDQ8MrDUCez0msNj6IRvG6pygYJ65ehvfz61g6xwIFrWLorAyF0dzl8C3uQrbHVRgb
r8PW7TsRlFUuba++F0oDYS1OGs/Ek+huaXlPd5f09+quOdj2OAl9+c6YZWqJus5qbJ/xPfbcC0FB
YQYCgmNQ01CFjLR8VBVGYuGP32P740RpW366eWxA/Yb60Mc2APoGbzENR4b3Dew48lDqMxnuB7HE
6hZyEuyweOpaZDaq0F8fi2W/LoFrXgcSbXZhttUNdPU14fzaH2B1I0Js1Y5dRtNh/Uxz/6ojF5sW
LsD95EqoOhpRUNEAx2OrMXvlMeQWFCAyKBgZpfXSbSrFgOj73eWwmvIlVl8Pla4IeJw/ikuukXA/
b4Y1Vg+lAF3ifwVTl+xD00Af7lmYYrttskhZCyvjabBL7UN96AXM2GCNgtIWNBcGYd6kOXiWrX5g
pqcyBKsmTIdringvr8H+tYtwwqMMhYGnMWfHSTYAbwH1G+pD1I8/Vh9mfj/YAGh4lQHo71eIGUyv
GKQ2YPLEWTCzsMC6pbOxzPoy2mTdcD27A4tXWmD9akuc9IpG/4AcD/auwHKrHThw4CDW790Pl6w6
DAzQVQMVWovDYDLxJyzZcxf1miew+uqzsXnhj5hieREu9w/i5ymz4ZvTglIxUzMzW49t+w4hILUY
Hc05OGCxApu3bRED5jFEl7RCNfAxPsrF6IP6zVg1APQEfFtZBPZuWwJT0YctLHcgMEs414EuuF3c
gyXLNsJslQUOvwiGbABoKfTEsvnTsf3GQ9zYswKrt51Dbk4CVkz4Cct3P0GbdFl/AOl+Yka+bKkw
u1cRK/psU20uju/fIvroNtx38kV9W5fmkwb90kX/pjwfbFq/EBtFGWYts8Tz5GbIWvNxeqMJTDda
YMXGPXieUyWm87mwmjUFiw86oijTG/N+/h4brgdC3pSOLYsXYtf5QMT4PsCEn37B0cdxUv3oI7qJ
zpexYuFqWKw3h9Wt52jslcPx+HL8PHctkqt6xXnID86+Duo3bAAMBzYAGl53BaCvTy4N6j29XWgR
DdbS3gmZXGyjpIv3A2hvpWU9UjAfqI3B2oUr4RCZj5KSPOy1nATzu0HSOspL3kv59KKrS52HlL9M
LOuRCbrF8m70in11i4GLJOtqR3NLm5hB0SVTBeQy0RbNLeilx6RVHPzHEtRvxqoBIGgWrlTIpD7c
1d0nPZeifspfhY420Yfb1Fel6LaSQgTUflkX2jp6MCBey3q6NOdAL3q6eyCX8lTfOOjtaJO2pZk+
zexVYh80sPSI9SM/ykpS9XVJ67vFepUIyPTgvkopl8rV0aO+TUGf3++m/fX0ivNBnBO9MvW5KRIr
ZOL8Ee/lMhl6xWsqjzp/9bY9na3inGkHfZBApeyTtusVaXpk/HDbm6B+wwbAcGADoOH1BkCcGGI9
DXBaFAp1GrpCoF5G3xcglve2IuTeBVhv2IzNmzfhxHkX1LfLpIePpLxE3gpKL82KtPkPLdPup1+6
VCmWizwpb+1lfiqn7v6ZsQP1m7FsAAht/6J+NLhMpNX2YXW/I9R9j/oZ9XFKT+monw7re5pluv15
cB+vKIO6T2v6u2bZ4Pk1uGxoX9ryafdLZRm2XHc/2vLQ+ahZrs57aF/Mq6E2ZQNgOLAB0PAmA/DW
DH7Vn4oefla/EoOP3rTMJwX1m7FuABjmdVC/YQNgOLAB0DBqBkAD5cEnkGFBx5sNADOeoX7DBsBw
YAOgYbQNAGN4UL9hA8CMZ6jfsAEwHNgAaGADwHwo1G/YADDjGeo3bAAMBzYAGt5kAGgZpRmPvE0b
jOf6vQ/62uBDoTYc6wZgvB3nj9WOhgq1NxsAw4ENgAYabF5lAOg9LW9raxuXUECi+unWSRdaR2n0
bfspQv2D6j3aAxzlN5YNAC2juutrk7FIa2srurq6PlpbGiLU1mwADAc2ABpeZQBoOQ1EFRUV0sBK
X7M63qisrJTaRV9b0DJqL6ofpR2vdXwXqqurpe87H+0fPaG2HMsGgOpeVVU1ro4x9V0apF5nYJnR
g/oNGwDDgQ2ABn0GgP7SYE6DEAWL8SqqAwV4fT9SQ/Wi+lG9DUn0oz3UR0YzsFDbjkUDQHWkH8Ah
06P9Xv7xIqpHeXk5Xwn4naA2ZgNgOLAB0PAqA0CNQzNGEn2d73iERDO/kVc36DW1ERkAkr5tP0VI
1EcoINIXyWjb40Oh9hyLBoDqSLNpupJF0tcmYxWStux8FeC3RzsmsAEwDNgAaHidAaDZIknfADUe
IL3OANA6mhnq2/ZThET9xJAMAC0bzwaAngnQZwCobq/SyLTMm9GOCWwADAM2ABrYAIwzAzB4Jfvd
y02ifsIG4MPRHgaVnnWjAelVBoD6LC1PS0tDSkoKUlNTJZKTk1FaWiptr5teF/p644EB5W/y9cD9
0s8cv0O/UqjrSX152HJxDOnY/Z5fYawdE9gAGAZsADS8jwHQL7FuMDgNT68PXelbPxqQ3skA6N4m
Vv0+ZXxXFLIuNLe0QCYGT33rXweJ+gkbgBHoHHe96/XQ09GMptYuKEcs10p32ftA0mcAqE6NjY1w
dnaGq6srPDw8hvH48WNkZmZKeWi30aW/T47uHjE+6P6ugR7UJRgRmF+LyE9GP+wlF3nrWz8c+t2C
vvocnDqwCzbBecMDvrxXGn8GfzTsd0A7JrABMAzYAGh4VwNAAbOjKhvOdo/x6ME93LlzB89f+KNd
LoaLvlZERIWiplP5mpk1/VaACuVpYbB9bIfwjErp/W8xkyK9rQGQ/vY1INDeFrbPfNEk6lMc74oH
9+8iMKXsNyvjuyCKgO6qOKz45UucciuQ6qcv3asgUT9hA6ADNepADxLDApFb3zPYH14JpRfK9bmA
72euRXyd+pf+aB1tW5ETjahsdX95adt3gKTPAJCioqLg5eUlvZb6pQYSPddCJoDy0G6ju22ey3F8
M2Ex0kSTqAb6oZ2EU/DVvBTbqtBUmYvUsibpPW2re8NBMfjDSVrUv47oe2olflq2H43SD3aKbTTG
akDzgn5tcWjWL6TsxuWtRlh+Vl0XEqWUl0XCdIclstS7F1JJVxfUonqp90dSjbg68r5oxwQ2AIYB
GwAN72wAxPuuungY/f1fsGTHLTx/bo8d07/GmkOuImE9jh7bjtgq/fcn1XmoB4OS8Cv455+/xtOk
WvFuKLiOlLRc8/p10i2jFtLbGwCRWNGM0wt/xlST66Dh0n77r5hlbI3IbPXDkMM04grBy3rzem1b
DOoVeUrl07wmPTuwHAdt4jXvdPSa7bXtQf2EDcAQpL7aOPz83/4zVt4Il97ra0ZNfB1SZxbWm6xH
YNXwFbEvTuHQ4wDNuzdI7EhfmQjSqwxAeHg4QkJCpL5LnxLQQu1P9bWzs3v5+FIQltXi+ZmN+PJv
X+BiQLHISYWW6iKk5pShVwTn6sJM5JTWiLZsxZXdczBjy2mkFVRLPVlWV4rIiAgk5ZZL74d+PVEc
f1rQkovLmxfgH99OhVtel1gwgPryQuQX1qKttQZJqdlo6RUJFZ1IjYlETFw22rtV8Lm5B1tueKI0
NwUp+eWS0WjIjcJDVx9UivEnKzUdeaVV6GhvQXZKMjILaLwAyrPiERmdjGa5AoO/OPoBaMcENgCG
ARsADe9qANRjkwx3Ni3GLV8KjP14un8zNl/2R12GN47edEBLeys8bW7g3pNA+LrdwpFzN5HXKRsM
tqS++mBsW2qB3B56NzToKepL8fjUMRw9fAiuUUXSMshb4WZ7DkeOHMbhI0dw2yUefbIqsY9TOHLw
IJ5EpEkzs5EzdNLbGgBtLA64vA8Hrrojwt8Trq4JkIpHUnQj8N5VHD0q9v88QgrIpXGuOH3HBckx
Pjhz6iRiCwoQ5XIPh0UbVPepUJ3kgdO3nZEc64ezp44jOq8AMW4PcPjGUxSLMZJmSWVx3rh25CiO
P3RHkyhyaZwLTp59iohwTxw7fATu6SXq4NPfgBe3zuHYsfNYsXIWTrmmS8WqywoR6Y7i2INnoDDX
lB2My2efID4rBsdOn4FvZv2wdqd+wgZAi/qgx724hCPbzbDAZB/qaJGyDg6Xr8M1NAmuTjdw/HGw
lC7B85Hog4dw/pYPOqqzsdViE2w9xbE/dgRP4wpE/2vB4zsX4JxYjEwfcZyPHUNCRTsKwh1w+OB5
ZLX0oSEnBIfF8Tpp6wya4A72vxGQXmUAIkQgDg4OltKNNAB0bOkKwMjjSzlWp3njkZMXwp+cxLJt
d0Ef8K0IuYnPJ65ASrsS0XdM8c0Uc+TU5WG78d/x5cwluCb6el1eDA6vtMLew4exevZinHyWILbU
3h6g2fgA0v1t8SI0Cg7HLbD5aohYBuR6XsKXn83GwUdn8U+jRXgaWwDv6zux1nIX1htNwTXXTITd
2YVf1x3F4/t78f2EKXie3YJin3P4fvVWZGTHY9GX/465h5+jrSkDi//+PQ7YxiEl5A7MNu7DiV1r
sOPhM3SJIrx8VeLd0I4JbAAMAzYAGt7PAPTg5trp+GWuCTZtMsPCeduQUiFOoCJf/Dh3JuLqZEh7
uBP/4+9mCEgQg8eiqdhxN1TKi4I0qafSFxYL1yOtjd6plw30FuP0WlOcuemNSC8bLJy8El7FbUh+
shcLNp9FdKQLfv7ma1wOz4brEWOstjiDaKfnePAgCHKKksPKqc7zXQ2A/+Ut+O7nqfjrF5PhnEUz
GVIvXpzYga07HyEyMgRb5y7GkecZaC/1wJf//g0ue0bgyQkTfDd7AyKTgmCyeiL2uuags9wHX//h
K5x3i8CzM6b4duZ6hCcFY92aCdjpmI6BxgzYPXiAhOhwrJw8BVfDxWypyg/f/GECDtpHwuPiFsxe
vh/ton08zpti5Y47iIgMxYbFk3DMtQD9dTHYtGoNHvnG4+bx1Thin4jepgRM+fNXMLnxEAcuHsCd
ELWJ0rYH9RM2AGqkQ96WhQuXH6KtpxJW8+fBMatDdNJu2G1ZjD/MtMJDt8uwuumGWKcLWL1hvwi8
z3Hi1BkUF+fBymgeTj0Lg6/o6z/MM0eVUoYH++ZgxTUfNCQ9xJ/++AX8qsX57HwURmsvo6gwCJZr
TPHEPw6XD6/CyecJUhn03VoijZ4BUIitlHA6vh6rD9yHw4WN+Os3vyKD3G1rOszWmyOsTpSjKgDr
VpqiRATUoPuW2GYXKe3vvuUc7LgaJ73ujrPHzNnbUNAr0ouZdz9d0lc24OzGJdh51QlXts3BN7/u
RAslrovGnIlzYJcm6tHdioIoW6z41RyltE5Rh5bObqmPLz/sSEvw0HoBDjlkCxcbh6UbVqNIOJS4
+zux7oCjMACpOH/1MdoUDdgx9UuYnXKGr8s5TPp2McKrqTAf1p+1YwIbAMOADYCG9zMAnbhpvgh3
pCsAQPDVHVhkeQ89feUwt1yGWDG16YqwwSLzm9L6qNtW2HXNW3o9aABEoNtkZIp0Md6SBsRsuDzy
OhbN24R69SJ4HN6KPXYxiHDYB+PdD1FaEou1a0wQVqtAVeILrFy6EDvP3EdWk1y6AjC8nOr9vJsB
UMHz1E6ceBSLFNdTmLhgB6ooG3kq1k+bBn/11wagyus6lmx6gH55AUymLEGIOMDd6Q9guuKwdOvA
4+oabHssBkxFPlZPXQx/MRrKch7DdNl+YSUgZkHrYPVADOD9MqSHBePRpXOY8sVfYP2C7uuXYuNi
S4RRu5S4Y4PFfjT01GGv0WJ4q2/7w02YgUteOWiIvIJv/vwz9opZ6Y61S2G6jwbSRlgtnI97iZKz
kqTbHtRP2AAQasdX4HsFE6fNh/WuXZjw+b/A6laEtDzm5nbM3fFIei22xN1Ny3HesVDzXqg9HaYi
cIY30utYbFy7DgUiYEXZbcXGW75ioQJXLVbitm8ivJ/eRGyz6LO+J/DVZxNxQByvrasXwVIEPimk
67kVQHqVAQgLC0NoqNpQU9/Wog1gtra2w44vhX+0p2H71p24dusObt+/CeNJk3GTCt+RgmVL1iJe
eF15rj1WrbVCtWgalwursOmB2IdSjrNrRJnvq684KXNdMHfOFmR3qyQDQK3YWewt+uluPLx7G/fv
ncbsn+fBt0KsaY2D0ZxVkrkgVYXcxqJlh6UrVdQ+MlEwn1t7sf2B2mg4HDfBJZ8SYQBiYbxxHfK7
RcvXRorzZgG2nzwFlxS6/F8C03/+FaYH78DR0QE3btqjqEUm6vthzwJoxwQ2AIYBGwAN72wA6IxX
NeLIkom44FYmTrw+uBwzxySTq+jqyYex0VT4VSjR4HcdM1ZegEIEWK+zq7DqqP3gbIfUXeYBkxnL
kdSqgKK9GJfP7oFHqC8sZsyFj5iFKbrKsWPVYlwKqkRLvg82LF+GLVss4RCSKrZWIjc9C8Vlpbi6
1Qg/mFyEeq6uU07Nft7NAAzA+aA5tl6gS5gynBYz+VUn3UUbifoumozTT3LFaxmeHDXFmrMBUHYl
Y/53c+DbpEJ91CWsXLwXnSK/JycXYZNNjJhIpmL+P2fBo1aFpvgbWGlkjTax3uGMMbY/DkXW0xNY
anUL5YU5MJr5D2x2yIKqPwfLZ5jAr1GFnownmLN0I6o6W3Bg+WQc88mBQl6Pg8YTcMQ5G10Zdpj6
40L4pBcgOyUOMZllUAlTsmLKVFyPVtso3dklifoJGwD17H+gpwyHdm3E3YA86eNz4TbW+HGKBVrE
+rALGzDZ4jbUj5vJ8XTfOmy48gLyvl4U5ZehpSodJitWC1MoAmGVP1YtW4m8XhUCrq3B4sM2Uv5l
ARfx+befY+8TbymfyrArmPKzMYKyCpCZFIu4zGKp/73rFQD6+J+Li4u0TncQo35OHwV8/vy5lC+l
7xdtoJTV4ub6yfh8lqnGXLdi29Q/4C/T96Kqoxx7Vv6ExbvOw/7WFvzzr1/Bs6AN6S8O4qeJK/HQ
JR+xwQ+weuYynL9yBZvMTGD9NEjUTyXadwA9jXnYPutLTLS8LOWMriTM+MP/hcnbbZEacgd/+Le/
4JxXvrSqvzkfezfOxeojZ3HvujMyRDseM/kZXxufQXlVCbbN+gxLDj9HdtBd/PGP/44LQXStoA9X
LCfg8zWHoba03XhxfR9MdpzA42f28I9KQptMHOsP7HfaMYENgGHABkDDuxkAOu2FQc8PwIrJP2P+
cjNYWJhj0coTiKnpQG3iU0yd+AuOOoXD78p2TJ6xGckFRbi2eTomGlujoEVsLwYmUobnRcyaPB1r
zC1gsW4Z5q3ehCKZCrke17Bq8TpYrN8Ea1tPdIpBJurBPiw2scChQ4ewxXob7kYmw/32QbHtFqwz
3Q678DxplqM7gBKktzUAVCyVrAInls7C7FVHUS1mc8n2u/Ddj9NwwykVDcVB2LZ8pajvRpievI3S
NjmKQ+5iyi9TcNUvFSEPtmP6tHWIycjAMbNpWLL/LhKCnmDqhMm46J2CcNtdmD51NSLTM3Fy4zQY
7bmF7NQQrFu1CgevOuHi8ZUwO/0IGTEumDF5Bq4H5iNZGoSn4nlKIxrS3LB6zWLsf2SPC3vWYcX2
C2iSt8PnyUWssdiK0zceobyxHfUZbpgxaRKsbwRLbcIGQJ8BkMI/4h6fxtRJE3E7RMw6hcLuWeLH
Hybirncwbu40xqRZO5HTqg66XVVJsLZaAPON++EZUoqyOCfMmjEDp19kICfosjj20+EUlojr2+dh
8qKdUl+HvAjWFmvhUaC+zKXsbYHj/TNYa7kV527ZoaRRHdKGyjUESZ8B0NaPrgDcv38fNjY20oyf
ePToEZycnKRjoT2+/bRtTwNi/XwRGByOmo5+9HfUIC48GIGBMajrkqO1LhM+Xr7Ir6xHVlwIsira
pE/0RPsFILW0XSpLZXas9LHDgIRC6dkBhSgHlaurqQyhPv4Ijk5Ea18/uuoKER4cIt6nID83DUHB
QUjNq5LKrRBN0l1fCC83V0QkVwmP3YaEyEAEhiahpq4K8WFBiEzMRHF+JoKCgpBUUCM9/d9RL9q7
ugkDYn/9/fSYoByJ4T5w9fBHXWevtFzbPu8LlY8NgOHABkDDO18BECjFNjSG9st7xXY9YihViwYF
Wk4P5NCJq6IvHBFpaaagEgOSQvzV5qGgLyRRDUDW043uXplmBq6WUsyyuntomBEaqMPR9ctx6nE0
iouL8fjMCszdf0ta1SfrgUx6BHl4oNNCeusrABIK6fPJ9FSxQryXvIpKAZlcPQ8Uo6JUX21Rqb5k
idSDoVLKg/Km+qoHK1HHV6ynNpTyGehDj0ydv0opBmdNu1D7UNuJioll6k9VqPrl6JFLF3TFjEc+
+DEruWhDmUhPopkQ3Q6RjtFgvdSQqJ+wAVBDH32jz/HTOUDv6a9oZWlb6qu6fVaSSome7l7puKmU
ol9THmJ/g9vTa93t1FtJovXafkN9Xq45prRcHyR9BkAqm3hPdaP2pr6tC62n7XXT92n2RRqgh+U0
5wxJ6i+a1+oOLyTOg6GP69G+Nf1fI6VO3v0U1TVS0PuhXeloqDxDq0U7a/osaUC0l1ZDOaq3U6/R
+U4C3fqMwicACDqObAAMBzYAGmgweVcDoP0s9JC0l9E1y8XfoZfqqwbSa508tFcCdKVeN7Rc2lYE
yPyg5zhhvhlbt27F/iM2KK0ffDZfkr7gT5DezQAMDUL0erCImjSDJdNuo0kglVOzcqhetOz164f2
p1kvpdO3DZVt8M3gct0y0EK973UgUT9hA6BmqKk0x1fnvebl8D6rXUbHYyixlF798uXtpGW6eehs
p12mD9KrDABB9XwVI9Myb4bajQ2A4cAGQMN7GYDfFe2QOlz60w6H9K4G4FOGRP2EDcDYh/Q6A8CM
LtoxgQ2AYcAGQMPYNwDvD4kNwBAk6ieGZgAoiJL0tclYhcQG4PdDOyawATAM2ABoeJUBoM8VU4Ac
z6LgTl+NOjIw0Wtqo4qKisHB1lBEv49PgcVQDACVi86J8Sgy4GwAfh+0YwIbAMOADYAGfQZAS3V1
tRQsaJ3uF46MdbTlpQGUyq9bJy1UV1pHaSj9eKvju0L1o0vhZHro9WgOcpTXWDQA9JrqWl5eLtV9
vBxjKie1J51/crl8WD2Z3wbqK2wADAc2ABpeZQDoNQ0+NIPOzc1FXl7euEFbXrqCoVvXkVAdyQBQ
+vFWx3eF6ldYWCj1kdGeUVI7jkUDQFBd6UQvKioaN8eYyllWVvZO5zHzYVA7swEwHNgAaHjdFQB6
T+vpUup45G0C3Xiu3/vwWwxulOdYNQAELdPXFmOdj9WWhgi1NRsAw4ENgIbXGQCGeRuo34xlA8Aw
b4L6DRsAw4ENgAY2AMyHQv2GDQAznqF+wwbAcGADoIENAPOhUL9hA8CMZ6jfsAEwHNgAaGADwHwo
1G/YADDjGeo3bAAMBzYAGtgAMB8K9Rs2AMx4hvoNGwDDgQ2ABjYAzIdC/YYNADOeoX7DBsBwYAOg
gQ0A86FQv2EDwIxnqN+wATAc2ABoYAPAfCjUb9gAMOMZ6jdsAAwHNgAatAaAtqEvH6H3DPMuUL9p
bGwcEwaA+zDzPlC/oW8+ZQNgGLAB0ECdnwZOGsDph0cY5n2g763/mAZAJpNJZdBXNoZ5Gygo0O+D
sAH49GEDoIHS0Q+Q0K/E0Q+mMMy7Qn2HBtCP/cM1dA5wP2beF+o7FBTYAHz6sAHQgdKOvCTGMO+K
vr71e6KvTAzzLnDwNwzYADAMwzCMAcIGgGEYhmEMEDYADMMwDGOAsAFgGIZhGAOEDQDDMAzDGCBs
ABiGYRjGAGEDwDAMwzAGCBsAhmEYhjFA2AAwDMMwjAHCBoBhGIZhDBA2AL8zKqjVr2cdwzAMw/xe
sAF4C5TaqC1Egbt/QP1aSesV6tckhc42L9MvyiJHeX4qsgqr0Su915eOYRiGYX572AC8Afp97Nqs
EJw8cgRXHUPQLd731KXD4YkHmvoGIG/Ixo3DR3DqmhsaFUooX7G//n5yCv3wvrgCf56wCnmdwlUM
fPwfjmEYhmEMEzYAI6D0uigUA+huzILxj59h6WlPKEUYz3++Ef/3//I9/Mp7AXkZ1k+dgLUXA6V1
uqKrBSPVleWMWfOXILVVs0BIoXuJQUihGP6epOwXZRNl0RVdcegfkVYhGY0hqRRD9R9ZN4ZhmFeh
Oy4ynyZsAHSg33Hv6elBd3e3BG1Pl+5JgWc3YfHuZ+JVP5yPbcWcSVNwxjUXA92lOHP8NApFrG9M
DMbRjZuxZcMm2AaIdSoZ3K+cwJGLz+D04hJWHrqN1DB7zDdei6L2VtzdvQ7WF53Q1FoBr3uHsH3z
Juy/5YrywlBs3nYYHj5eOLFvE/Zec0I7GZG2UvjcOoOtlptwyDYA7QMqKOQ1cLh6BJutzGB95DHa
+pVI938Ec8st2HrxJsr6lBhQKCAX9dPWjf4yDMOMRDv2yWSyl8ZH5tODDYAG+g3shoYG1NbWorGx
EfX19WhtbRWz+H7pwb2a2PuYY7QN6WnBOHn/OXwfHsbG084ojHuOszaRkNdHwGLeWjiG5qEgzAHz
Jq6Eb2k3SpxP4F8/XwC7SDecefoCicH2MFqyHMFxibhz7TLCC6oQddcKU6eaIT4mCa524WiXlcB8
4o9Yd8EDpaVxWDdjJi6HlKA2yx9OHsHI9H2ICT8ZIbG9DxG3NmHNrlvIywrEQ7snSAp1wIpF6+AV
m4Gr+4yx+04Y6LpBnzihqV5UR4ZhGH3QGFFXVyeNf3wV4NOHDYAGrQEgF0z3/em9dlvpob+eUuw2
mYtVa/fhuU8Oesv9sdRoDfYcO4uw0jYUuO3D4lWnIBNJASVub1yHk57FaIm6hynL9qNRWg50Zrli
8ld/xI9ffYeD9pnSMlldDk5Zr8Ea0614Elcmtu7ERTMrXAytltY/3bke664Ho6O+FF7PnHBx2yr8
+9ezEV9djZumK/AguF5KR0q334kvPpsE6z27YLVmBfZd9IRMpVLfQhD1oXoxDMPog8Y+mv3TWMgG
4NOHDYAG6vzU6eny18vb0N19FVytJ+H/+rdJiKsmR9CMfT/9V/x5zRUp6Ldlv4DxhPlwi69EZboX
FixcDo+CLpS5HMXfJq5HXo/6CYGK0Bv4buJ0+ERGYcPcqTgbEIzEmEhEJxUg4J41/vSzKWrl/bhq
NhfrrrqjtiAeVkuX4nFEKq5YLIbVzVDkxz3Df/z4T3jl1sH5yHqsPW+D6vJSJCYXIMH3NubOWI2Q
nBJkJcUiUfxViJOaP3bIMMyboLGPxk02AIYBGwANrzcAfRgYUKEkzBbbD15GjUIl3ivhc+sYrrsm
QqUShmCgH8lut2FqsgmbzHbjdkQmFCo5vK/vwRJjcwTmNoptBhBlfwJLjVfAK7sFsXbbsHDVWly/
cQ2bzTdis9UuPArKxoCwFDctV+CHhZuwxWI9LtmHoE+ULzXkCdaYWuHGEzecPrgGlzwyIW/MwdFd
K2FpcRyBcVXoFnX2d7qJDZZbcOG+AyrbOqEU246sD8MwzEjYABgWbAA0vMkAENpn8LWf91dLpV4/
4ul7EqXTbjOgeRpf+0kBlVL9cKE+9bdmYMnX/8Rmu0TNEnq6X/0swjANKKD7wQCVim5dDP8sAgd/
hmHeFjYAhgUbAA1vYwB+D+geXEt+BKx37sRZu2B0Dwy88rsFGIZhRhM2AIYFGwANY8UAENpvGiTx
vXuGYX4v2AAYFmwANIwlA8AwDPMxYANgWLAB0MAGgGEYQ4cNgGHBBkADGwCGYQwdNgCGBRsADW8y
ALSeHtBjGGZ88i4BjdLqy+N9GS/BlMrJBsBwYAOg4XUGgN5TvvQ1mQzDjC/ovKa/9C2fbzMe0FhA
48DIfN4H2jeNRfTteuMhoFIZ2QAYDmwANLzKANBryquyshItLS1SgzEMM76gYEzncFdX12vHBFpH
A2JFRYV03uvL612h79Wvqqp6awPyMaHysQEwHKh/sgEQ6DMA9Jfe08BB61ks1vhVW1sbqqurpXN5
5Pmvhc55CtZkFEZTZEDoR3Zet++xANWfDYDhwAZAw6sMADVOTU2NdBLTV/kyvy9D335IX7+sP82Y
RufrG/WuZ34XVCr1N3ZqzbzuuT8Smv1TGtpGX17vCokMBY0j9DyAvn2OFdgAGBZsADSwARgbjPy6
Y0VPK2rrG9Hbr9Sb/n3Q1bB3etLqMqxsOsu10k2rRSnrFDO/enT2KvSuZ34fKJjL5fK3MgCUhs79
1xmAkdKXRgtJO46wAWDGEmwANLAB+PioA2wXfJ0f4caNm3ANTkdrcRgWzP4nLgWWSmv1bffWiAFd
pepHRoQ7Hj6wQUpFF5RtxXB88AB2XlHoUtB6PdsJKBj0NBbC6cFDPPEMQ4dSnZaW56UEIyavWno9
cpu+ugyYzfoKplcCpPKLFcPSML8PdCxGywDQ8s6KDLjcvIGbt58jo6adfohDb1qCxAaAGYuwAdDA
BuDjQoMqlA24bGmChVaX4ehwA5MmLkBoeTfuHzfGMdcM6RgMEwXrEZcMVCIvfZL2Q/uAEgm21vj3
P01BaJ0Mqq5CrJv4GdZc8IW+pzwoP3X5AHlbPsy++w+sO+2NHrEbqcxC/o8P4bz70A83jZTTiaVY
fsxe806/dNuCGX1GzQBIx7wbTuessevofdzaZYwfF1uivFc6ii+nF5DYADBjETYAGtgAfEzUgbQ6
4g4mzDBDmfotCmLDUdzQjmuHluKkR460LCvkOfYfOIgLTj5iGBbhXN6JFHcbHD94EBddoqUgHul8
B2evuiDIzxYHDp5AdFWLNJhrzUFzkgOMt55Hm/ROhpt7V8I+rh7lsc44dsMJiVEeOHhgH17EFEop
1FcF6FUP7lguxcPAes1ykWdrMa5fOQP/rAbUpnri8PGHCA31wNEDB+CYmC+lczxmDLPLnuiqjMeh
3bvgnVQNeXMqHlw4gv27D8M3p2KwfPrbh/lQRs0ASCghk6t/DbQu4irmrTmABnr7iqtHJDYAzFiE
DYAGNgAfE6l5EX7LEossbmtuBWhcgPh7Ye9inA+pQFeqA1au3Aq/iGgc3rEC98PK0ZYfBLsnzkgJ
eoZpP/+KoMoBVIddw//894V4GpWE+1aLsGKfrXp2LwZoUm2MDRZZnUKT9K4Ll7cvwb3IBnQUueGr
P/2IK77xCPO6gunT1iC6Vi6lUpexA9fMFuKmV7m0TFJ/Jw6bT4KlXQJ6GiPx458nYLddJAJu7cGs
xTukfbieWomNF5xRmuiFA6cvIbehHMeX/ILd5x0RfNcWLgFZItiIhMPahBlNRtcAqPtRjzBxp08d
Q1hlq3jHtwCY8QcbAA1sAD4mUvMi6rYVJiw4DqX6LQb6xPFT9OPSAWNcjypGpo0Vvvh2Pg6J2fWG
Rb/i4N1IyLtbEeXthVtHtuHvf/snHHJFqK8IxOJlh9Eo8ijzPo2NB26jnzLUGID6GFsYbToDGrYB
OW7uXIyrQeIYDxTAfNE2hEqXBjqwbf5iXIvWHnv6txPXNxjhlneFtAzKPnTLlXC4uA67nyeLBZWw
WmqJgGbxssoP5uZbUCdeBl5ajs++/AZTZpsjU5o4DiDO6QoWG6/CvtsuqOrpE8FGX7swo8XoGgBy
awqEeN3Go5BcOqCvvXpDYgPAjEXYAGhgA/BxIbXle2DiP77H7ZQ69HXW4oiZFQJyG3B5z3ycDipE
uccREUStkFpUhNT4WOSXlcFm73pYXQpASboPvvzpa9ik9mIgzxXTZ+9EhRioMx32YO6GE+iRLiio
ryooSv0xZ4oxAit60deRjw3LFuBxaofwAjlYOXsunmQ1QSbSLJq7En4l6s+DS0VUteHcium48KJQ
6h8B961xzScDj48txbobwSJNIVbPWA23KgXkeY6YvXAlioVBcD6yAAv2XIHbtWNYuvkQ8hqrkZGc
harqHFjO/QXGZ7ylfbzqEjLz4YyqARDLVSoFgp7chldCuThur799Q2IDwIxF2ABoYAPw8aEH9LKC
bmHVmtWw2GCC5fseIb8wHVuWTsfasy/Q190Im6uHYb5lC64/dkOrONbpITYwWroelx654MCO+Tj6
NAQJThcwdZox/DLK4HpuOSbMWImYMnpiQAzoYrDGQDeinp7HirXmsDC3wIkXceii3ffmw2TmVMxY
bQWLFatwxzsFCpGcBnfarKsqAVvmT4XR8vWwsLDA/Llz8NQvCic3TMd0q4tIjHTBr1Nn4aJPDtI9
T2DC5Gmw8wnDWYsZmGV5A00Nhdi88FusO3ASR/bsxMbNW7Fu81GEFqhvRuhrE2Z0GE0DoLaR/bht
uRiHbKKkd2LFS+m0kNgAMGMRNgAa2ACMBaRmli6ty2Tqh6ygUkpP+g8oFZqBV0zUZTIodB7/VynE
MaRILUTpFErKSAWlQgmllE4llul8j4BmU2WfDDK5dHNAUm+hD6Z+OQfPcprQp70PoTMrp8GbNlUq
5NJ3u6t3o8lP/FX0qz9HMCD6kroMEMv6B9drFmnSDUj1GLzdoS0b85swqlcANGilb50uJDYAzFiE
DYAGNgBjBU10JkkDsOa9ZjCmQVn9Vjs4D72nVeq/2mXqmbv0etg+BNoVQtptcgPvY5WY+T8IylOv
GLmNbtk0krZVv5JeS680+Q2+Vr+S8hiZVruc+W2h9h5tAyAd2zekIUhsAJixCBsADa8yAPQVnvT9
4STtCc98muhK33pm/EKiqzZvMgB0zlMaek3Sl9e7QqIxiQ0AM9ZgA6DhVQaAZg304yDUUCO3YRhm
fEDBn4w8ncevMwDacYCCNZ37+tK8K/QrgGQqaGx63b7HAmwADAs2ABr0GQBCe0KUlZUhOzsbOTk5
DMOMM3Jzc6Vf43ub8YDS1NbW6s3nfaB9v8l4jBW04x0bAMOADYCGVxkAgt7zycAw45d3PYdH85wf
zbx+a6icbAAMBzYAGl5nABiGYQwBNgCGBRsADWwAGIYxdNgAGBZsADSwAWAYxtBhA2BYsAHQ8CYD
QMsoDcMw45N3CWijeb6/y34/NlRWNgCGAxsADXSivsoA0Hv6KI++fTEMM/ahMYE+1vc24wGlobT6
8nkfaN/afEfua6xBZWQDYDiwAdDwKgNAy9va2lBRUSF9NIhhmPEHfQcAQWOC7nk/Em0ApM/t03cB
6MvrXaHvEaG/o/W9Ar8lbAAMCzYAGvQZAPqr/RIP+iIRFos1fkVjAgViOtdHnv9a6JynwN/aqv6x
6NES7ZfGl9fteyxA9WcDYDiwAdDwKgNAjaP9KmB93/PN/AZovkJV77oPRvsVrfrWvTvar3vVt87Q
0ds2H6m9aJ80A3/TVwETdLWPzv3RKieJvlKcvwqYGWuwAdDwOgNAJy5J38n9voyUvjTvh+532g8N
YEMaej18O/1opW/db4VSqa3Dy+tGauT616PJd0ABhTarNxgB3dZ8WarBX/h73e/B62PYUdKz/r0Y
WdhRMjnD0d8ieuugbW6dZUPH9vc1Ae9iACgNnfuvMwAjW0FfGi0k7TjCBoAZS7AB0PB7GgB1Zu2I
CQ1EcGg8alq7R2ewlgasPpRkJiIxJR/dCvXATINVd0MJEuMSUdepQGdzJcrqWl7eXg9dzVUorq7X
u270UQ+rRSG3YbRwNaIrND+vq7Ouu7kUwYGBCI/NQWef4p2Cp8gJDWke2Ld1I265x6CkvBy9wgno
S0tQ3j2i/inx8YgIDUKg2G9kTBIaOuRoqitFXXsXPC6ug9GBe+iVivd2QY3y7W2pRFxsLFIyy9Cn
WTYynVYjl+tDHHpJValRUjnTckpBsVZf2vdG6qN9KMtJQWysej9BoZHIKKoWhmooHQVOKLvx5Phy
LDvxVCoHtQ39qYx/giXzlyKgoIcWDuX9GzO6BkCUu6cJGWFBCA5PRbNM1Ow15y+JDQAzFmEDoOH3
MgA0NipasrF//Xqs2HwS1qbLMGvjObRIg+Rw6Z9t6VumlvonbmUIub0Z/+V/+z9xwDldvUJRhy1T
/jv+339agJzmASS7HsX2O+7qdbqi8mleapXjexEbzz/UvBsuqo8+Da/z8Bxft81QyiJsnD0djmmi
xwhRHrSuOskLyxaYYMexU1g0Yza23QnU0xpiny8vVDdbfxn2r9iM0DrxpiYa5ru2obBNvXqkpPKI
ZO0VYTD625+wyPwwTp0+hqnf/BHH3XPhfmcrroVWoTvxHqas34zGfs2GOtJXV22+nZUxMPrmC6w8
4AK5Zt0wiTTdlalwi8vVvB+Z11BwkgIu+uB39zDWrtyOU6eOYfH30/A0uk6dVFd6yjRMmkA2TJr9
aPuX06EF+OrrWThx6hT2rpuJzxduQtVL9Vch3+c0plnsRRdtNqg67Jg/BQ+jGjXvh/TSfiW9nal6
E6NmAKS69MD13DasXbcXu1b9il+3nkJ9nyjpK0wAiQ0AMxZhA6Dh9zEA6pHQ77IFZq69Aml+KyuH
/UMH1NKq7gb4P3mERzZPkF1HDx3KERXkjYi0YmRGe8D2uRdaxEbV6eF45vgcaeXNqC9MgL2DA9LL
WjWBgIJLAsxnTMBPy7ejRbwvDrmJ2d//iPWHfMS7Lvg6PoBbQpmUtqkkCnY2j/DENwxttHlPKbye
2cLmiQsKG+sQ5fMEDmHZUvxEfyfCHR/j0SMbJJe0iwUqpIT5wDckDZlJ/rBzcEFZt1xn4KStBsSs
LxA2Nnbwz6oS75VICvWGf3gG0hN8YOfogSoZDbZiVU89vB1sYWt3DytNFsMzp1sspL0IKZtxePkM
EfTjpWUt2SGwdw2Xbmj0lGbA/tEj2Dj6oVkpFvRWwc3JA2lZeQjyfAzniBQpj+rQ2/jbH7/Ffjt/
xIZ54K5LELopvawJ/s42eGT7BI7PnyMys1Kqg7o5G3F+7VL4FNJroDbNHS5+wXj61AbxFb3oTH2C
hZt3qfer6kDICzs8snuBsl51ROwTZu/FYxvYPHNHSWevum2kfOV4uN0S94Or0NeYA0dHf+QXZOKF
gx2CcsT+0Yb7+2bgL9OXwt4rRjIJvdp6Ool60q/VatqZVC9m1lOmrUKy2jOhKMIZ3qnqfttenAJn
ccyei9lqr3hflRkBt9A0lObEwuG5M2raW5AW6g77gAS0Uz1om7JUccwe4UVUGqgm6uAmFRz53qew
faed9JoCurO7G5q7+5Do8UzqG9HZtdKaitAbWLjjsAiXQooWBDiJYyv6t4nJAjxLbJbSNOTFwkbU
yTs5X3pfkhQO/+B0lJam4rGTNyrb+tRtNuw8encoj9G7AtCHWpGG2rIr4QYmzDZDOb3Rc8uKILEB
YMYibAA0/D4GgHLpwPGVM3HcOUfKUz2kCnWX4brVZhw8fAc2p60xZ8FupLX2wvucCf7jh3VwFwP0
AdMFMD/tgvzoW/jL//cvsMtoRUuaDaZ8NQeBJTSVVedWne6HqxfvY4f5Clx2D4HtucO4cPwU1h+w
F2u7cGnzNCy/FoCekgBsmP0r7j91xj7TU8hoK8I107k4dPYhbm45BMfQbDy7uBLT9j4UE8NOPN63
E9bW12Bz/SjmzdqE0HI50pwO4b//TyPcdXPDXqMpML/gJgVlCk7if5QkuOLO9dtwuXMKk2aZIad9
AMm21vjvfzDGIw8X7Jg3CVvvhIj0Xbi9bzVMrG/A5v5J/DRlJrxypVFVkrI5Ckun/oqgcvWAqlV7
XjB2GVvh2j0bnDJbhWW7HqNfXoPDS6biy/mn4Op0HbN/ngn3HNEB05/hxy8nY6+tP2KcT+PbJaao
7ZfD+dRGrDhwGXeOr8e//vVHOCeTUZGqIFSHk0tn4fSTKES6P4F7cIZowkqsW/w9jvuLAT3bAQu3
7EW3SgG3y9tgedQGT69uxuZrz0XfKRTlmIEzN+xxfsM+uCSqTZc6jnbghqUZbviVQ96Yjvlffo+F
1o/gcGMfps02RVZnK54em4tv5q2UDEBNbhD2LNuM6/dtcNJU1HPHQ3RQPupDjpDrFli0+Z70ur+r
UQTQSlTW1qOlPAH3r16Ex/OnmD95DuzT21ETdwd//sPPuPHCDUfM5mD62j3w8XqAKQsm4VJkLZQ1
sdhpboFrdk7YtWsN7KJLpXy1BiDH4ySWL9qF6ORkPL1vj4b+PvidP4itlhdh8+AijKathkd2J1rF
fox2HhdGV44nx02xcsslYSouYsKUKXDKUaAn3w+WZlvw4OlTbLE2hX92B8pCruNP/2siDj25itlm
ZnDLUF+i0X8+vT2jawA0ja6sxm1Rb/ukEuntq25HkdgAMGMRNgAafj8D0Iy9v04WA1ymlKdWpUFn
sdBol5j3qXXDbA1OepVCnv4CC1aegzQXLvDA1FlbREgagO3W1bjklYeqGEfYuadI29A+SNWpnrh4
PxR5odfwh//2LzjkkCo2vYVl2x5J6yNstsPijheUDanYtGQeth+9hvDcJjHgNeHBvvVYZLoXT0Wg
6xPZ5XiewNrzj9GR9wKLZq2DOhQAjns2YsfDVDElDofR4gOiTEC5xwmY7b0tzRjpUjIFUEVnHWJD
QuFy9SC+/OIXeFEMLPDE/KXHpLrmPd8Pq9PO6CoPxup5GzX5i9n+hiVwydBMZ4UGGkMw++uZ8C9R
PxegleuRJTA/Rlc2hPrzsHaWCWJblIi9dhAmZ4Okxbe2LsKNsEaRSQHMl+5AMs1y6yKwwmoTqno7
cXLNLJyNbIeixA1zV+8YvJytHucbcXLhL1hougdbls/GtrPO0rr7J5bjbKAIJlkOMNp+BG1teVj9
7d9hfuQWbl7YgakTLZDbUYUb21Zg+ebjeBFdiD4ltYnoB1K+agNwxZuChxJXLTbipF+leF0D69VL
ECmKWx5wBqvPPaXE8Dwq6nncV3qNvlysnbkG/hVDH031O7cOs9fekl53VSRh1S//wJLDT9CllCEn
PgpuTx5i7jd/x353cQC6U7Fk4iJECH/VGnMdK5cdl3yE/ZllOOyRJo7jIXz9za+4cfMWrEWdzQ67
qk2dJvAV+J7H5C+nY/f+/TCauwFhyd5YP2sJkruk1Qg9b40NFyJQlWaHpXvPorU6DqZzTZAp3euQ
4azVUrjldyLlnjm+/mUFbt68CYt5U2F9L1k0SwLmzFiGELpNI9SvUI44h96P0TcASoR6XsY5x0ip
nK/7VAmJDQAzFmEDoOH3MQA0GCjhdngpvltyQh3Uq9Jw5eJDJMc+wdLpJiiRgk8jdi9fgmvhdehO
sMPslQeky4094TcxeeFu1FOK+IeY98vP2LDtFMqk68/q8pEasv1w5qaYVSvLcGjzFkSK6FzpfhkL
Nt+V1ofetcS6i47o7elERXEJYjwu4p8/0yX3ejRUVyM/IwjLp0/BQZcC5PufxYoTjyCvCcaSCQug
vnIrx/mNy3DIuVBEqUAsMj4mQrYI5i+OYs3+20NXNdCDJ4e245RtNJJ9b+M/fpgEf4pxWS5YuPKM
VP/Up3thfvYF5GX+YuBfgnSqSkcy1i+YC+8Cus6tmeQqG7Fz+pdYcy1CWlbi/xx3X4TC9/ZmrLK4
Ly1DTSB+nb0eOZ1icD6/D5uuq9Ne2mqE6+FkAIRBWLAZUbTjyhAsWrcWFaK9k53OYfGqTdhhbQ3/
dLUFkWZz0o7rcWaVEXylWwAKtDSrPx9+Y78RTvlXiWjoBKMdR9HdUwKT77/EwYfBSEiIhptXOBo6
21BXUYnsODfMmTAVZ3zUl7nV7dOLO5vNccO/XLyW44LZRlyJoH5WAqs1SxDVBOS+2AOjg7ch6+yD
86kVWGWpeRajKkCqZ1yDun1I5WE38PnfZiKC7swIXbGci5vB5SKPq9hy8DFyEyIxc+LnOOgjytyZ
CKOJyxEvvFRd+CVs2nBJ2sbuzAqcCshDre8x/PDjCvjHJSAswBthKUWiLVSiTdQlz3U/hq071LcA
+jpaRYCPxJqJ0+BXJC2CzV4TbLmXiubMx1hy4CK6q2KwcPo8RHXQBvmwXDQb3uUKZNpY4qfpFohM
SECwtyfiCsQxqgrFLGFu4jVOeDQ/rjlqBoDaQqVArJ8LovPFgXqlUVBDYgPAjEXYAGj4vQyAGCug
bMnH4S2LsdRqJ8xWGGP5YSf09HfD+Zgllhhvw04zC6y/ZIN6MWPqTbTFF1/+gg07RNrlq/AovEAq
i5i7Yfv0r7HLLlF6pw5YNED3wO3cRkycu13nAbcu2FkvxJ+/WoZUEfCvWPyEL+duRUigMzatN8OR
w1uxbNsl5FXm49jmddh/5DCMV22GZ0oZHA7Px9/+uQSpTT2IvL0PS4w2YqeVFVaevIlSMaCnPN6H
v38+GwE5FXh+aAb+/J0wCVXaS/cyuNzYjSlLN+PRM0csXfw1jjrHI+Hhfvz9CyNE5pfj0c4J+MuE
NShoEvW/vBFz1lvgqoMNVk78GltuBUrPSdBATDWrz3bHqhXzsHnnTsyaa4yTrvnobS7C8TXLYLZ1
J9atM8dRr3jRwHU4YvQzvl97A2XFyTD+/jMYHX6KxKD7+Prv/8R5twzkBF3E3/76d9yKysGL46ZY
sXELdu7ai71X7yO5Xqbep9hpa3EQFn75dxgfdkC7eiyHoiEHJpM/w8QtN+F5Zzv+/sN0RJd3It79
JtaIfI5euITQjDK01aVg+/pVOHLkAJas3gq/vKEH39pLw7Hwn9/C5KgXWlsyYfzNt1h9KRil6Q74
6m+fYfezTHQWeWPh5Fk4fCMBFSWpOLl2OTZI9dyIo55RwkpqAqR03Dvgcm0LZhqbYpc4fru2bsWT
uHpUR9tg6pxluPDIE7usJmHFURsk+NzEP/78BW6EZ8H38hp8+91qpORmYevCLzBzzyN0txTivDBu
Ww8dwR3b5yisUQc5ahMyLs/2L8B3382CT7a2PkpE2RzD0vkm2Ll9C5YdOI/cJgVCrq7F33+aj7Sa
bvjd3Y7ZJma4/Owx1k3/FuZXfdFdk4Gju7Zgz5EjePDME1XNXch2O43PPvsSNwKKpZxfdVn9XRlN
A0CtAPTj4sop2HZLGG2SnnRaSGwAmLEIGwANv5cBINSZdaA4Lxf55VXoGbyqrUB5YR5y8yulh75I
pR5XMOXX/UgsyEdZrXp6V5aZgfycWNy7boMaafKvO1D1o7mmEuUV1eiSK6VBTDXQh6a6alRX1qKj
qwuN9dWoqq4Xs9Ye1FcWIje3EO1y9bDW3liJvNxcVImALAqJ5roqsV0N2umjTkLVpfnIzStFl1QN
Fdoa66SvOm3t6EFLQyWqq6rRLiqkLgtt04+K4gJUNnRA1l6PejGDbm0SgUmka+vsQXO9ehsxyRXZ
yVEq6lnV1ovejgZU1TVBOVgvdbspO2uk8pXUt0ChLpLYrA35oi0LK+mRR1FqZS/qqitQVduE7q42
1Ir8axuaxH4bUFldiYZG0UfaG6XjWpcXBNPl6+GSVIjCwmxYmv4AS7tYdT5in3KxPZWvvLpOuoRP
y5SyDtRUV0v32Bvra1FVIerfo74KU1degNzCUvVtENF+LXWlon3zUNemvlyvrUtfdysqRKCprW8V
gUn0MXotytXd3iTaU5S3SX2sW0R5q5ula0VQyVqH1VNkNJifenKuRJ04PnkF4vjI+iHXfNlBY1UJ
iioaIRf7rK9vQGtzI6pqqtDY0oHWxlpUVtWiXZwzddVVqKxplIwFlF0okPrByHvwClEnUffKMjR1
yDTLpCSorxB1zy1Cm3RhQoUW6meibdR9p1/07XxUtHSjt7NJ7KeBEmFAHDs6nnVt6jp2NIu+IcrR
2Nqls88PZzQNgJauthZ0dMv1rtOFxAaAGYuwAdDwexoAYrjUA40mng1J1Y6HB5bhp4lrkFCrtQQD
8DpviUXGZgjIVz9JPXKWNKjBy6cv5axXw7YV0l7ylTR471ordZmHNCKtpiyv3/PwbfSl1eajZkQK
zX6GSVr2+r0OU3ct7A/twjaL7dguZq8Hjz1CSQPdzH75mAy2s77spf1qXpP0lEP3OA3L9xXF1d1e
fz2H81I+I8v0lhq5r5H7GZJOgByx72HpRDn0VXF4Xm/e74fwWxgArfSt04XEBoAZi7AB0PB7G4C3
QykNWv19cvT16zwMpewTddPcHx+WnnlX1IFJzOY62tDW1j54VUFfWmb8QqJzib7m920MAKV5kwF4
W0g0jtBXirMBYMYSbAA0vMoA0I8A0aBB3+XNYrHGpyiY0/ldX1//WgNA6+iHexobh57X+FCRCaBJ
BA22bzIfHxs2AIYFGwAN+gyAdjk1UHFxMXJzc5GXl8cwzDiEZva657w+6NzX3ioYzfO9rq5uXARU
KiMbAMOBDYCGVxkAgt7TlQBqKIZhxh90BU97Luue2/rQptGXz/ugHVPeZt8fGyojGwDDgQ2AhtcZ
AIKWMQwzfhl5Tr8JfXm8L/ryH4tQWdkAGA5sADS8yQAwDMN86rABMCzYAGhgA8AwjKHDBsCwYAOg
4W0MAC1nGGZ8ou+cfh368nhf9OU/FqGysgEwHNgAaHjTQ4D0ZDDlxzDM+ITO47cZD7Tp9OXxPtAD
xG+z37GAtt5sAAwDNgAaXmUAaDk9QUwfC6KvvKW/DMOML+i7POg7AMjI6573I6Fzn9LQdwHQdqNx
ztO+aTzSt7+xBhsAw4INgAZ9BoD+knunk5jyJNEXivz/2zvzJynKPA9PxPwT+8tu7ETsrO5sxMQ6
6qrruDI4OOPqjAqMMFzKNcolCKgccoziiQoiIuDNKIoOp3JI0wjSXArIIc3RHA00Dd30ATRNAw18
tz5vZWJRkzRYXU1V9fs8EQ9UZWZlZb355vt+8s3sKkTMLfVlPPpb/Cv5IiAtp7Ygaj2pqHUqSKix
bei9s0ECgF8SAAIvFQBUOPoKT5H49Z6ImDuK8At+GuqEdczrjF3/i6h1/ViF2hF+CwCzTQJAYEMB
IHO/BeCRsTOlkB+m/zCtKX/zIJlLvVfCJl7gktsVLMxvNWSHOhO/kgAgtYyOfb0mal3y4rpw+R8N
IgBgNkoACCQAZNazp2vtSHml1Z5RyxqfJs7WxfZ9RbWdSVo+Jd0aY1z0S3r1dryqKvYeZfHrxMfi
P9sb1XGfPqltqbSy0gOxZUvsmNvWS3TyZ+vtZF2d1Qc/IYyZNb0BIF5Hj8bqQcmh6vgPSkX8OmOo
IABgNkoACCQAZE6dTdVXFNpjd91o//o/D9muk664rf7g13bHNf9k9/SealWx5/Hu9gf02pCLfjo3
eUGhN6mrtPXbioL1qHHXo1qbMbyb3fq/91j//v3tj23a2WvzN7nf8z9/oVHXtVyzih351unXN9o9
7R62/gO6Wvse3e3DNTvc2v6Bw+us9+A+tjn+i82OxM1K3F6RWB6YftMWAFQRrM7yJo+wh9r2tB5t
29qj46fbsfrE+nKxggCA2SgBIJAAkEFdX3jOlrz7vP3nP/+LDflkoyvvLyf2sH//WQubtKjIPRcl
339rBStXW8nR+DXag3u227biI7H1nLbibZtsT9lxO3fqqG3etM0qKits26Y1tmW/ftntnG394nm7
5b4HbM6KLVZdV+/eW2yfO8569J3iHhfPHWG3/aaL7YmvPka4nXp8wl7veZ9NXlQWe1xvW2Y/Z/9x
w29t4fZKO7J/t+3dX2nHqg7apsLdVrJ9jU2bs8BKDpdZ4cYttqP4oNWeOG47Nn1nW4sOa2VWun29
rVy9war0G8QNnEFi401nADh/vs42ry6woqNmVQWv2E0t2tvOWu3RpGUDBQEAs1ECQCABIIO6AHDK
Fnw8zcYOHWT39Rtj2wu/thdGD7EB3R638YsVAM7bqmkTrV+nQTZq2KPWtt0Q+/bgaVv7/uP23+1G
W42dtLf7/MZaPTw51toW28D77rTfdnrBpkx40u78fQdbduCY5U3patfecJMNfPZt21lxyjXwYtvc
8db14XFWEas7+S91tz90fNoOHd9n0957x4qqzwYdgZY8ZhP+0sbe+LzYvc7sjI38Qwt76tPvbNPc
F+1XN7Sz56c9a7d27GkTx4+xu/8y0DZv32hdbr7W7hr2YSwc7LQu1//ahr69yr4veM969R5uzw/r
ZoPe+shqYmeQsTe6uFwwbaYtADjj9caNHk0caWPnrnGjO5e630MQADAbJQAEEgAyaBAAZr0zxRZ+
/Y293PsPdmOrzpa3aqNNGjTQxubtNzu60h78XWtbHj95to8f/4v1nbTG6g8stg59RltlbFpJ/mvW
rf+Lbv6yV4fYn56a5x5PeOQ+e3NFrPbt/cLaDx5q8av88f0p9iyeaLf+soU90qePPTpwlK3dd8Ks
YoM9MXiQrS9Tz6xl9W9yAKizUW1+bcNm7jIrX2ot72hnX5YctcqaKqvZu8oe7NXFtsXebPP0p6zb
kFgnf6zQxr3+gcVqqA275ybrPuZTWxgLH61ubmtL98eve/xD2WBaTH8AOGerFk2wpybPjNcn7gHA
HJQAEEgAyKAuAJyzhR++aws3VVnRvBesVbsnY+f0ZlP797FX1etXLbX2Le+z9bFKJOY929d6jS+w
4ztm2/3dR7lGeMesEdZ9yEQ3P+/lkfbYlJXu8cQnO9i09XV2dstHdm/fwVZxOhY3YvtX7y12LZpk
fQe9a7HJFzhXH2sIL7qJT1NP2dR+7e39ZfHvhDi+db7deXsr+7zolFnxArundV8rDFdS9o117tXV
CmNZwqrWWe/ObWzg8y/YzHWlsQmHrO/t/2Xdhr9pM2bMsEmTptuu6oY6HGysaQ0Asennz9fb2mXz
be2eo253Ry4XKAgAmI0SAAIJAJkz1p7a2WNFNvBPf7Seryx0Za0b7M9Wbrb21//CWvWbZrWx7vmz
kT2tQ+ehNu7lMda61wDL2x2LCGUF1rrVTTbgjfdtyvD77eaWHWP1pdRebPcbu6nrJDt4YKu1u+nn
du/T86y+bK11+L+WNuCpWbb1sG4rFHU286lOdv3N7e3bUl3IdWnETu/NtwfatrHlB+MjANrGY/tX
W6cbrrX7e4yycePGWoc/tbVhby1x87//eIT97N9+ZdO+UQdvtm/pG/aLa39uzy3aHXt2zqYO/p39
suMwq3ZzT9sXU0dbt0HP2AcfTbfFKzfY0VMEgKY0nQEgXkPO2PgHf2+D31zqnsVm/MNyoYIAgNko
ASCQAJA5dfd0fc1hW/HlIlu6cVesu4xz+miJrchbYssKtthJtbrnT9jqvLk2e86CWAfu7rqKNcbn
bN+2Avt88QorOXTI1q1cbvvLK2xjwRLLX73VjpTvs1X5+fbVt4Wmrrx4w8rY9B3ubD/ewJ+yHWtX
WF5evu09Uhuc3Z23s7WVtnnTJquqi98DoG2sKdtty2PLLZwf24bZc2xN0QG3DRr+3bdtnS3Nz7PC
4gr3mcr3bLQlS/Lt252H3AjHyYr9tq+00iWJcAh5Q8Eimz1vkR0+EdsaNz26fLDxpjMAxOvIWdu7
eZ1t31fhlmvo+x4EAQCzUQJAIAEgw7oSjhNOi59pxXENbPA4JL5c4lINk7jsDw32Re8STEt4r4Rr
u5FEzGvoebiu5M2+MB2bxLQGgMCQqHmJCgIAZqMEgEACAGLzVZ25jml92dOVBAAtc7kAcKUK/aCY
vlKcAIDZJAEg8FIBoLa21oqLi91zAMhdqqqqXJhvKADomNcP91RXx+/WSBdqW+Tlwkem1ecnAPgj
ASAwKgCE09Vw7Nq1y7l7925EzDF17O7du/eybYLmKfRr2XQd70VFRS5U6BJE1Htmk/r8BAB/JAAE
XioAhPO0Tv2UKCLmnuXl5a49uJIzcC2jEKD2IGpdP1a1Rer8c6FDJQD4JQEgsKEAEM7X9TtEzE1/
TIemZaPWkaq50plqOwkA/kgACLxcAEBEbO4SAPySABBIAEBE3yUA+CUBIJAAgIi+SwDwSwJAIAEA
EX2XAOCXBIBAAgAi+i4BwC8JAIEEAET0XQKAXxIAAgkAiOi7BAC/JAAEEgAQ0XcJAH5JAAgkACCi
7xIA/JIAEEgAQETfJQD4JQEgkACAiL5LAPBLAkAgAQARfZcA4JcEgEACACL6LgHALwkAgQQARPRd
AoBfEgACCQCI6LsEAL8kAAQSABDRdwkAfkkACCQAIKLvEgD8kgAQSABARN8lAPglASCQAICIvksA
8EsCQGAYAGpra91jvQ4R0SfV9tXV1REAPJEAEKiKX15ebqWlpa7yIyL66KFDh9z/BIDmLwEgwVOn
TrkRAEREn1VbGNVGYvOSAJCklkdE9NmothGbnwQAREREDyUAICIieigBABER0UMJAIiIiB5KAEBE
RPRQAgAiIqKHEgAQERE9lACAiIjooQQAREREDyUAICIieigBABER0UMJAIiIiB5KAEBERPRQAgAi
IqKHEgAQERE9lACAiIjooc06ANTV1Vl9fb0LAYiIiPiDzTYAlJeXu8c1NTXuAyIiIuIPqp/U/8l9
aDrMWACQ1dXVVllZiYiIiBGqn9RJclQf2lgzGgA0CoCIiIiXNqr/TIcZDQCIiIiYGQkAiIiIHkoA
QERE9FACACIioocSABARET2UAICIiOihBABEREQPJQAgIiJ6KAEAERHRQwkAiIiIHkoAQERE9FAC
ACIioocSABARET2UAICIiOihBABEREQPJQAgIiJ6KAEAERHRQwkAiIiIHkoAQERE9FACACIioocS
ABARET2UAICIiOihBABEREQPJQAgIiJ6KAEAERHRQwkAiIiIHkoAQERE9FACACIioocSABARET2U
AICIiOihBABEREQPJQAgIiJ6KAEAERHRQwkAiIiIHkoAQERE9FACACIioocSABARET00KwLAsWPH
7Pjx416rMogqm+Yq+zyub/u9OUudbnx9pgzjXq12IeMBoLq62kpKSmzv3r1WXFzs/vdRlUFU+TRH
VbkPHTrkPrfP+3z//v1WVVV11Q52bDrVjh04cCByP/tkY9oxHQdlZWWuTfC5Xdi3b59VVFRclXYh
owFAH1CNoDqDuro658mTJ71Tn1tloLJo7p2BPl/4WWtra73e5zrIdcCr84gqK8wNk9uxqP3tg41p
x7R8eXm56/hramq8bhdUHmoXrkYIyFgA0AfTB9QOP3funInz5897qVAZqCyuVvLLlPpsqtynTp1y
nzuqPHww5ODBg67RbM77vDmb2I6F+zV5X/uiCNuxysrKH1WnNeyt1+k1Imr9viiOHDniRpRULlHl
lS4zHgCUFoUqjs8KlUVzDwBSAeDMmTOuskeVhS8KDXmWlpY2+YGOTSPt2MWKVNqxMACcOHHCrSNq
3b4oNCqociQAZJFhOmuKjksQAPxSHD58mACQw+Z6AAiJmpeKorkHgJCoeelQ6N4gAkATGEXUclHq
Gs2uXbusvr4+cn5jFASA1A3R4zCoieTlGvJqBxJBAMhtm7IdS6zHoinqZzhcHzUvFUW2BYAowukN
leml5utGRx23ydPTpSAApMGQ8Ll25rJly2z8+PE2duxYe/nll13lv5IDS8voWm3Lli3tu+++u2i9
6VAQAFJT6/nwww/t66+/duWoRkT7+P3333fzruR9Qq50ejoUBIDctqnasZAZM2a4tmrmzJnuedSy
qSqeeeYZGzBggHsctcyPVWRLANBxr5O1t99+21599VVXji+99JJt2LDBzVu0aJE7qYtqH8L5ulE5
cb546623rFOnTu5x4mvSpSAANMIQdTTqFMIdKJYvX2533HGHffnll/bFF1/Y4MGD7ezZs25eIsnr
ChkzZox99dVXwbM44bKNURAAUlNMnz7dfvrTn7pGRAe9DtDRo0e7eVfCnj17XEMRovVq+77//ntb
u3ZtMDW9Z2GCAJDbNlU7pptkP/roI5s4caJrp4YPH+5CbjJaNpnE9i6RqGmq308++aR7HL53YxTZ
FAD0/2OPPWa9evVybf5rr73mTgzEK6+84rYxGb1OKDSoI05GJ4L9+/cPnqW3TZCCAJCiQo2qzu6V
bN99992LDgid8ffu3du9v0YDpk6d6ubpT0/GjRtnQ4cOdQ1yWAm2bt1qgwYNsjfffNM9HzVqlK1f
v97mzp1rffr0cX+zmY4KIAgAqSm2b99ut956qzu4NW3y5Mk2f/58N0/v88Ybb7h9q7trdTalA3jj
xo2ucZg2bZq9/vrrdt1119mQIUNs1apV7jVyyZIl9sQTT7gGePfu3RfWl7wNqSgIALltU7RjQoH0
kUcecY+F6t66detcPdFZrOqp/mxOdXHBggVums5MVf8VgMP6q3arb9++bn1i6dKl7rXqDPVeasv0
XCRvRyqKbAkAUnzyySfu+Nf2zJkzx03TMa6TOZ386X+NtOiEYefOna7cFPr1XOtQH6AyUntfVFTk
PpseT5gwwf7+97+7dSS/b2MUBIAUFAUFBfbwww/b559/7jp1kThfd1e2aNHCdQD9+vVz2yBUIZS0
teMff/xxN23z5s1u2CgvL88lR6EAoOkffPCBqxQaIkrchlQVBIDUFCtXrnSd+KeffuoOSo0IzJ49
272PwoAeq8NXmNMlnIceesgWL15sXbt2dfteozrdunWzTZs2uYY1cd1CDaXCgs7CdMCnY9sFASC3
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</Preview>
  <Form>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
Bfvy/iotU9UcVy+WStPGmAU17SVX4+wjt+SN1pR9Ij+Y/uI1qxfirDqs3r5P8mN6uZx8PpcrZXEW
n/Oczj2MhDHXTS9aqYTIJ157j4t5ufHayJLXV0K1J6dn2cprs1qgRH5oLJt06zHbTZFzXm3lM8Nl
r5Csi4nb2cM0mY8Z3WYzrXKTdve90XtpsWyyM2YfNU0Ujefs9dV7oyNMHlMJWi+XOSP2zn82xaz2
8vxRHn1SY4Mkm/GWUSJXH8u8pOYKHZZuj8a92qj3IZRG5HzKZ6lhvPrMFycV4/rqs/kYfyVVZaE9
5fl6Pc889h5zk8YL3Xuczp4/+OJnR8wr9HKWuM3lq/QTq/YbWT0+SzJSsZPmOKqReB43lMlytohd
X7HqJNlRNY2tdB7oTKGv5vrqoFsfdaQReztfqWl9Mbp9KelyLke+3NYa4sOUIZ+1FFeqrlglPiqN
8uNaKfWZFQry9VWO6bUH9dkIMpjl5EJr0lw8T3O5v2JrvHfaBW4PTFEgAqTCOrjssKnjJQHC/Sz4
R5ghd9vBDrW3qxnhvBmrFwJ18JDi+luWf8vyb1n2JMtwH0EqpLWW/YYeiiijmhj0QuOmkhGW5BoY
vLMLIMW/Y+XfovxblEONlZlQs0W2W3ooqoy6ShesKm9XM8K6PJFkmZePfPTSnbEkPGaCpEM9Y2Bt
Nj5f+AsHFPLh+2dcI137I8IgypIy8X/WBWP//fKTcbixOhQQ8bavngfEjUMiTKKp6ugn+wUUq7bh
z00rVs3FOa298BirvjY2sWqHzM/VUZcbrGIPL/Vu47lVSybGuedpU+oVS9qC7Zaf58tZds5K7eL1
FdVrdCo5vtxu9MrlwUTkRG00ec2nEm/zlPIW01Kvn5+KUk8nx7VBJvbxlqBpIXHb5yYPo2rvmdLL
VSE2Ydi0Vtdur69qbSZZec/r5LIt53WllK5T5YncG/RGn51itd3Xn6pPT2WOZRMj9nG8aokro8em
HpiltEy3mV5mVHxnRoW3l2qyrlxfiYzUq8/EFk83C6V+U3zozObDzDhWY8bMbWc2eO1I+ZfXVk5p
P1eXt/1E4b1dajb603kp/TKri3l6mJ2xH4MHiswPr6+e0smV1O5xbbXRorJjOa+1S/KqoXK1RLLY
zoqjlsQubrOs8Sy+pIZxeVEzYvFSJvv0+PZUrHJyp9yqx+XEU0PJza6vBmB4wA+5bvy5+lSRmvz7
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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
	Link-Scripts
	Link-Source
	Link-Packed
	Link-Workbench
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoading_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchive_Click={
	
	start-archive
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your dayz addons folder to workbench." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$button5_Click={
	Set-PopupMessage -Message "This tool uses the output from Doxygen which is an automated code documenter.  It is what Leroy uses for the online version.  Mine is essentially the same thing although I have tweeked the settings to provide more detail.  The current generation date is printed at the bottom of each page of documentation so you can tell if it is out of date.  If so you cane either check my repo to see if I have updated it or download doxygen to generate a current document set." -Title "Doxygen Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">228</Line>
    <Line Disabled="True">504</Line>
    <Line Disabled="False">610</Line>
    <Line Disabled="False">1064</Line>
    <Line Disabled="True">1085</Line>
    <Line Disabled="False">1086</Line>
    <Line Disabled="False">1089</Line>
    <Line Disabled="False">1144</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>