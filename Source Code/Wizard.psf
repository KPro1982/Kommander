<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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</Preview>
  <Form>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
iVdXP4Q2V60vIsXHkZyG/1QarXGuNYJ/4wrocyeT7sL/ZSuvySWHvuAeB1yzlUunS4+1zMNyzL2g
b8VFIy9+Xl/Bv1Y/0PXqghN7y1UD/dprP9dz+VY1dyvSZU3lOrnu8iG/jD7I2VIx2sp3OpNGhlUa
wvNKqBd6Slt4GQ+Wq+uryVsnV+Rypcyy/iaUivVEtd7Jj5/fGtxbt/VUYh5ajCQNEtnFay6Z4qWm
9DS4LT+Ubz/Z5aTdFBqtQv/1o/YwyvcjheurTqnTrTfp2wyjZLlErFWbxRej50x2KuW40nD82spK
fKTACsMKO0n0+3M9039r5Frt/px7/XgTFolyJld7LBRm9QkHNe3Gl5P0c27B680ZV6FXbG/+llbz
EU4elG8/ptkJs1hMP1+KpeLoPaLxOTX3NAaTXCc5byZiIz721n2ea8X6Wz1NX1+BcldMvqdLb41y
PjriB/qiwTSf050ErfFyM5saLLr5eG0Uu31/msWzD3qn0UjKuWmr81HvvjY5Lt6ecM+KMhrpL+nr
q496G0yfEzFGLRZz+sMH/9kYpZXXl1Vx/Bmd6DTdiDT1Ar1cLbKCnMm3OaY1nnSr4+4KFMa0NuPT
0UGk/MI/Tkv69dVn4znyRsvSXKlk+Votyz53nzPT+ivTfZ69v6z4x8/2KCsxi/fYbSZbZiqc3Kun
1ch7nBUe28lcLlqPvUzq0nTxPn+4vuLkabwtKwpXaj8xqXxPzvTkfqc2bgtj7lZbykl1Pr59Lahi
JkO/3lbro6cZS78oiVyhvOSkyLgwzk6qhcRnGuTF66sM2231a+9jhMF0Tsw3p435yyyT+fNhDe/d
yYsw+o1GY8hjCKho6OFQJ0vAR2dJycuHYofM/i5zb6sZ4pxVMwKEOrg4XvKLln/R8i9adkXLyLdN
BJTnsD/QAyFlXBH9TvLZKBliSq4qQOLmkIp/+cq/SPkXKQfqK7OBZmpuj/RAWBl35dpfVt5WM8S8
PBVEkRePvN3aGWNxVOKJDirBcUdscnyRb9pHsV98c8b8pLU9QgxEtD7pvc4UhFOgZLeROhAgkpWO
OA8QNwYJMRINVsevquuTr9pCnxumr5qJ5JTW3KWv+lbf+KptOqvJ406uv3x4eq116i/Najw2ybzM
GkL3saDMuU7xRVu8pzVOaD1eX0W79XYpwxdb9W6x2J+OciNlPH3LJmJDLSENH5TE2+enJNWS8Um1
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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	
	$usebatch = Read-GlobalParam -key "UseBatch"
	if ($usebatch -eq $true)
	{
		$checkboxUseBatch.Checked = $true
	}
	else
	{
		$checkboxUseBatch.Checked = $false
	}
	$archivetime = Read-GlobalParam -key "ArchiveTimer"
	if ($archivetime -ne 0)
	{
		$numericupdownArchiveTimer.Value = $archivetime
		$labelArchiveTimer.Text = [int]$archivetime * 60
	}
	else
	{
		$labelArchiveTimer.Text = "Never"
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-ArchiveTimer
	Start-kWorkbench
	
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive -Comment "Auto Archive"
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	# Edit dayz.proj to refer to modname instead of templatemod
	$ModName = Read-ModParam -key "ModName"
	Edit-TemplateTokens -Source "TemplateMod" -Replace $ModName -Folder $kommanderf -File "dayz.gproj"
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your the currently selected mod to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods. To remove them, just delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Changes won't hot load if there are errors, which there maybe even though recompiling on host reports succes."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}

$labeladdedToArchiveName_Click={
	#TODO: Place custom script here
	
}

$numericupdownArchiveTimer_ValueChanged= {
	
	Write-GlobalParam -key "ArchiveTimer" -value $numericupdownArchiveTimer.Value
}

$ArchiveTimer_Tick={
	#Use Get-Date for Time Accuracy
	[TimeSpan]$span =  $script:StartTime - (Get-Date)
	
	
	
	
	$labelArchiveTimer.Text =  "{0:N0}" -f $span.TotalSeconds
	
	if ($span.TotalSeconds -le 0)
	{
		$ArchiveTimer.Stop()
		Start-Archive -Comment "TimedArchive"
		Start-ArchiveTimer
	}
	
}

function Start-ArchiveTimer
{
	[CmdletBinding()]
	param
	(
		$Duration
	)
	
	$TotalTimeStr = Read-GlobalParam -key "ArchiveTimer"
	$TotalTime = [int]$TotalTimeStr
	$TotalTime = $TotalTime * 60 # must be in seconds
	
	if ($TotalTime -gt 0)  # 0 in minutes means don't autosave
	{
		
		$script:StartTime = (Get-Date).AddSeconds($TotalTime)
		#Start the timer
		$ArchiveTimer.Start()
		
	}


	
	
}


$labelTimeUntilNextArchive_Click={
	#TODO: Place custom script here
	
}

$buttonStop_Click={
	$ArchiveTimer.Stop()
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">252</Line>
    <Line Disabled="True">530</Line>
    <Line Disabled="False">633</Line>
    <Line Disabled="False">1087</Line>
    <Line Disabled="False">1117</Line>
    <Line Disabled="False">1168</Line>
    <Line Disabled="True">1263</Line>
    <Line Disabled="True">1312</Line>
    <Line Disabled="True">1329</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>