<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
a/W+GhafUqcAAAAASUVORK5CYII=</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	
	$usebatch = Read-GlobalParam -key "UseBatch"
	if ($usebatch -eq $true)
	{
		$checkboxUseBatch.Checked = $true
	}
	else
	{
		$checkboxUseBatch.Checked = $false
	}
	$archivetime = Read-GlobalParam -key "ArchiveTimer"
	if ($archivetime -ne 0)
	{
		$numericupdownArchiveTimer.Value = $archivetime
		$labelArchiveTimer.Text = [int]$archivetime * 60
	}
	else
	{
		$labelArchiveTimer.Text = "Never"
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-ArchiveTimer
	Start-kWorkbench
	
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive -Comment "Auto Archive"
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory | where {-not $_.BaseName.StartsWith('_')})

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		# $labelPboname.Visible = $true
		# $textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This will link your the currently selected mod to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods. To remove them, just delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$button6_Click={
	Set-PopupMessage -Message "This is the location of the index.html for the documentation. It is intended to be located within the kommander folder at ..\Kommander\Doxy\Html\index.html."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Changes won't hot load if there are errors, which there maybe even though recompiling on host reports success."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}

$labeladdedToArchiveName_Click={
	#TODO: Place custom script here
	
}

$numericupdownArchiveTimer_ValueChanged= {
	
	Write-GlobalParam -key "ArchiveTimer" -value $numericupdownArchiveTimer.Value
}

$ArchiveTimer_Tick={
	#Use Get-Date for Time Accuracy
	[TimeSpan]$span =  $script:StartTime - (Get-Date)
	
	
	
	
	$labelArchiveTimer.Text =  "{0:N0}" -f $span.TotalSeconds
	
	if ($span.TotalSeconds -le 0)
	{
		$ArchiveTimer.Stop()
		Start-Archive -Comment "TimedArchive"
		Start-ArchiveTimer
	}
	
}

function Start-ArchiveTimer
{
	[CmdletBinding()]
	param
	(
		$Duration
	)
	
	$TotalTimeStr = Read-GlobalParam -key "ArchiveTimer"
	$TotalTime = [int]$TotalTimeStr
	$TotalTime = $TotalTime * 60 # must be in seconds
	
	if ($TotalTime -gt 0)  # 0 in minutes means don't autosave
	{
		
		$script:StartTime = (Get-Date).AddSeconds($TotalTime)
		#Start the timer
		$ArchiveTimer.Start()
		
	}


	
	
}


$labelTimeUntilNextArchive_Click={
	#TODO: Place custom script here
	
}

$buttonStop_Click={
	$ArchiveTimer.Stop()
	
}

$button5_Click={
	Set-PopupMessage -Message "This window will populate with mod folders.  It skips folders with names beginning with '_' as so that you can have subfolders in the mod-source for _published, _worksinprogress, etc."
	Show-messageform_psf
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">252</Line>
    <Line Disabled="True">530</Line>
    <Line Disabled="False">633</Line>
    <Line Disabled="False">1084</Line>
    <Line Disabled="False">1114</Line>
    <Line Disabled="False">1165</Line>
    <Line Disabled="True">1260</Line>
    <Line Disabled="True">1309</Line>
    <Line Disabled="True">1326</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>