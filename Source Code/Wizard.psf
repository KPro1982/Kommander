<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAJ61SURBVHhe7f0FfB1Xmu0N93v70sw778z95s7c
memZnp7b09ydNAU6nDjgJI4xxjhmxxAzM8bMzMwsybKY6YjBkiWZQbJkycwyr2+vkso5Vo4dW5ZL
PvZa+f1jndoFu3ZV7WfVrr2rfiBJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkvQMaskPf/hD1+9ffME1cOAg1/Dho1zDhg0XQgghhNcw0jVq1GhXyy++cP31X/2V
y8R28mD9lx/+l92NGjbCxu27kLHvOPILziLv6GkhhBBCeA1nkH/sLBIz92LMmG/wf/7xH1ER5u+v
F174rWv9lp3IOHQGUZmHEJF+AJFCCCGE8CoYvxP2HEfG3kK0a9f++w3AoIGDXJn7ixGTdQQxxgAI
IYQQwjuJzjiEzEOnsMMv4PsNwKiRo1yHTly07v5jsw4LIYQQzwRxu488NrHEXqf7tCpQeX3u26kq
7usjMZmHsfvIGfjsDPp+AzB8+EjXweILVguAp5ULIYQQ3kZCzjFzN3wQEan7q0x4yn4rqHJd8dnl
64tM2/9YcH1cV3n+DiHCbMPTth8G5i+mIn/2fseaWE4DsN33IVoAbAMQu/uoyZQQQgjh3STmFiAo
fg/W+8Rig1+cIb5KrPeNw0a/BESnHzTBNg87QhPgF5ZYZXzDXPAxxGQeRIgrvzx/vp63/TAwf/yX
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
4+TlJ3+DWGMGwBafjdlDLZ4Xypt5pMeR+zCn5wVeK5L3SnXdo+vGrds4efEGTl56fjhlcEo1bgAk
SZIkSXJeMgCSJEmS9BxKBkCSJEmSnkPJAEiSJEnScygZAEmSJEl6DiUDIEmSJEnPoWQAJEmSJOk5
lAyAJEmSJD2HqjYDIEmSJEmS9+jMxcc0AFxwX9ElnDROgm5CCCGEEE8/x05esW7iH8sAELoIIYQQ
QngHuRXB/7ENgBBCCCG8k4c2ACNGjEy8ClgLCCGEEMK7YU++wJCo7zcAnTt3SQ8MjsAO3wBsF0II
IYRXExAcjukzZn+/AZAkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSXq69YMf/P8Bh0cnRpuMGvMAAAAASUVORK5CYII=</Preview>
  <Form>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
apmW5+ZlP1s7pucGZ6tf9R//B7xj9UQZLwEA</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	

	$archivetime = Read-GlobalParam -key "ArchiveTimer"
	if ($archivetime -ne 0)
	{
		$numericupdownArchiveTimer.Value = $archivetime
		$labelArchiveTimer.Text = [int]$archivetime * 60
	}
	else
	{
		$labelArchiveTimer.Text = "Never"
	}
	
	$buttonStop.Text = "Start"
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	$servermods = ""
	$wbmods = ""
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listboxServerMods  $selectedmod -Append
	$servermods = Convert-ServerLBCollection
	Write-ModParam -key "AdditionalMPMods" -value $servermods
	
	Update-ListBox $listboxWBMods  $selectedmod -Append
	$wbmods = Convert-WorkbenchLBCollection
	Write-ModParam -key "AdditionalWBMods" -value $wbmods
}




function Initialize-ServerListbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = ""
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listboxServerMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listboxServerMods  $mod -Append
		}
		
	}
	
}
function Initialize-WorkbenchListbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = ""
	$mods = Read-ModParam -key "AdditionalWBMods"
	
	# clear list box
	$listboxWBMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listboxWBMods  $mod -Append
		}
		
	}
	
}


function Convert-WorkbenchLBCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listboxWBMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}

function Convert-ServerLBCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listboxServerMods.Items)
	{
		$addonresult = $addonresult + $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}

$listboxServerMods_Click={
	
	$selindex = $listboxServerMods.SelectedIndex
	$item = $listboxServerMods.Items.Item($selindex)
	$listboxServerMods.Items.Remove($item)
	$mods = Convert-ServerLBCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}
$listboxWBMods_Click = {
	$selindex = $listboxWBMods.SelectedIndex
	$item = $listboxWBMods.Items.Item($selindex)
	$listboxWBMods.Items.Remove($item)
	$mods = Convert-WorkbenchLBCollection
	Write-ModParam -key "AdditionalWBMods" -value $mods
	
}

$buttonLaunchWorkbench_Click={
	
	Start-ArchiveTimer
	Start-kWorkbench
	
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	if ($listSelectMod.SelectedIndex -ge 0)
	{
		
		
		$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
		$lblModName.Text = $modname
		$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
		$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
		Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
		Write-ModParam -key "ModName" -value $modname
		
		# initialize elements that require a modname
		Initialize-ServerListbox
		Initialize-WorkbenchListbox
		
		
		
		$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
		if (-not $modscriptsfolder)
		{
			if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
			{
				$txtScriptsFolder.Text = $modscriptsfolder
				Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
			}
		}
		else
		{
			$txtScriptsFolder.Text = $modscriptsfolder
		}
		
		$autoarchive = Read-GlobalParam -key "Auto-Archive"
		if ($autoarchive -eq $true)
		{
			Start-Archive -Comment "Auto Archive"
			
		}
		
	}
	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file. You need to configure this option using the gear below." -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory | where {-not $_.BaseName.StartsWith('_')})

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		# $labelPboname.Visible = $true
		# $textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all links in P:\ and the Dayz game folder and Workbench folder.  This will NOT remove links in the dayz\addons folder as it is assumed that you want these to persist."
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}



$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This is a way to make your addons semi-permanent from one project to the next. This option will link your currently selected addons to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods for e.g. or if you always have a list of expansion mods that you use. Not that the CLEAN UP LINKS button intentionally does not remove these links as it is assumed that you want them to persist. To remove them, you simply delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$buttonCantCompileEngineScr_Click={
	Set-PopupMessage -Message "The `Can't compile `Engine` script module! scripts/1_core: Path not found` error can occur when you are attempting to play on a remote server but still have folders symbolically linked to the dayz folder. If you get this error, try removing the symbolic links either manually or  by hitting th `clean up links` button."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool will re-generate batch files to match current settings."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Important! Changes won't hot load if there are errors, which there maybe even though recompiling on host reports success. Most (but not all) of the time that hotloading isn't working is because there is an error in the code you are trying to hotload."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}

$labeladdedToArchiveName_Click={
	#TODO: Place custom script here
	
}

$numericupdownArchiveTimer_ValueChanged= {
	
	Write-GlobalParam -key "ArchiveTimer" -value $numericupdownArchiveTimer.Value
}

$ArchiveTimer_Tick={
	#Use Get-Date for Time Accuracy
	[TimeSpan]$span =  $script:StartTime - (Get-Date)
	
	
	
	
	$labelArchiveTimer.Text =  "{0:N0}" -f $span.TotalSeconds
	
	if ($span.TotalSeconds -le 0)
	{
		$ArchiveTimer.Stop()
		Start-Archive -Comment "TimedArchive"
		Start-ArchiveTimer
	}
	
}

function Start-ArchiveTimer
{
	[CmdletBinding()]
	param
	(
		$Duration
	)
	$script:timing = $true
	$TotalTimeStr = Read-GlobalParam -key "ArchiveTimer"
	$TotalTime = [int]$TotalTimeStr
	$TotalTime = $TotalTime * 60 # must be in seconds
	
	if ($TotalTime -gt 0)  # 0 in minutes means don't autosave
	{
		$buttonStop.Text = "Stop"
		$script:StartTime = (Get-Date).AddSeconds($TotalTime)
		#Start the timer
		$ArchiveTimer.Start()

		
	}


	
	
}


$labelTimeUntilNextArchive_Click={
	#TODO: Place custom script here
	
}

$buttonStop_Click={
	if ($script:timing)
	{
		$ArchiveTimer.Stop()
		$script:timing = $false
		$buttonStop.Text = "Start"
	}
	else
	{
		$buttonStop.Text = "Stop"
		Start-ArchiveTimer
	}
	
	
}




$button5_Click={
	Set-PopupMessage -Message "This window will populate with mod folders.  It skips folders with names beginning with '_' as so that you can have subfolders in the mod-source for _published, _worksinprogress, etc."
	Show-messageform_psf
	
}

$buttonBreakpointsNotWorkin_Click={
	Set-PopupMessage -Message "This can happen on reload when the game was not killed first. Check that you completely closed the game before hitting 'L' to reload.  'K' will not kill the game if it is paused on a breakpoint in W B. This can lead to a situation where you assume that everything was killed because you pushed the 'K' button but the game is still open. If you push 'L' to reload without fully killing the game, the WB won't connect properly. The solution is to hit the green play button in WB until the game is no longer paused at a break point. Then Kill with 'K' and load with 'L'. At point, you should be able to use breakpoints again."
	Show-messageform_psf
	
}

$buttonAddonRequiresAddonJM_Click={
	Set-PopupMessage -Message "You are attempting to use a mod that requires CF (community framework).  Make sure that you have CF selected as an additional mod.  Click `link to Dayz Addons` on the additional addons page."
	Show-messageform_psf
	
}




$linklogs_Click={
	
	$logfolder = Read-GlobalParam -key "CurrentModFolder"
	$filepath = Add-Folder -Source $logfolder "Kommander\link.log"
		
	Request-Log -FilePath $filepath -InitialDirectory $logfolder
	
}

$button6_Click={
	Show-Link_All_Options_psf
	
}

$buttonUpdateBatchFiles_Click={
	Update-Batchfiles
	
}





$listboxServerMods_SelectedIndexChanged={
	#TODO: Place custom script here
	
}

$listboxWBMods_SelectedIndexChanged={
	#TODO: Place custom script here
	
}

$buttonServerLogs_Click = {
	
	Use-ServerLogs
}



$buttonClientLogs_Click = {
	
	Use-ClientLogs
	
}

$labelClient_Click={
	#TODO: Place custom script here
	
}

$buttonCombineLogs_Click={
	Merge-Logs
	
}

$buttonSidebySide_Click={
	Show-Display_SidebySide_psf
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">244</Line>
    <Line Disabled="True">432</Line>
    <Line Disabled="True">456</Line>
    <Line Disabled="True">527</Line>
    <Line Disabled="True">590</Line>
    <Line Disabled="False">693</Line>
    <Line Disabled="False">1140</Line>
    <Line Disabled="False">1170</Line>
    <Line Disabled="False">1221</Line>
    <Line Disabled="True">1316</Line>
    <Line Disabled="True">1365</Line>
    <Line Disabled="True">1382</Line>
    <Line Disabled="True">1410</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>