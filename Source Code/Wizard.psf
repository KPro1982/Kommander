<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>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
DH58sAvHx1vX6808540ZsOa3pvGzIphWLHfp1k1k57ks12Pqjw+14Xr4/aKZp2J7XweRquJ8txsA
qmLZiz5j9e283L5NbssEOHseM/9t+fXdLvNTme+KclRux87vrXWwHiq2yzrhg4e4Pnu5ivKZbTI/
xiRcu3IWaRsWYEjn3ujbpxcmzwzEkZMXcIXX8q38+pbhmwbA3o5VlkpxO0yv+O5bloppXCf3pTWf
T93bZbG2VblOa1/71J09/W7X3bkuJwNgpdnrteuQ2zW/K7blUyaTj4ptVpTfN59WHVppt6+7Oqpq
AKiqbaViv1fuYzOfleZTT5ev3cSlw3no1eZzdBqzGqeu3rCGW9rrq6lkAIS4P2QAakG2AeBNcCxb
fRQDnG0AnNLrtXiAN8Hm6o0buMHLP9eumc/rVu8C21HV+VlW2wDwe9X0+iLmzTYA9TmflG0AapRP
az9erLyMd/WWUXCctxqSARDi/nioBoCP9yU3+RCfO+CWNJbH9+DIsx8aAhoEfvK3ncbHp1ZN47Jc
B9N4ELPTeAZVG2mcxt/2p31mZs/PT/52SuPyvmn2/NyenfZtZa5ump133zTfct2pzPzOgOCUZi9n
551plFPa3cr8bWlVy8W0qmXmJ02AU5q9HH/fLa1quew0pzJXN42frE+m3a3M95rGTzutOmV2SuP2
uA1+p3hvENP5v+Unjzc069xu1TSaSt80rufb0vibaRS/cxrTOA9/cxmm2du5Wxo/fdOY16ppdrmq
pvH3vaRxHVXTuK27pTE/VdPuVB9V0zjNqa7sdd1PXVUt17el3Ut93C2N66ia5ltm37R7rQ/fNP62
64PfOe1+6sNejp/2/4zz3S8PzQDwgMCMh4WFYceOHdi0aRMKCwsRExOD5ORk5OXlITAwEDt37oS/
vz+2bt2KuLg4JCYmoqCgAAEBAVYaH4LC3wkJCYiPj7fm4zSmcZ78/HwkJSUhNjYW27Zts9bFtKCg
IOTm5iIlJcXaJrfNPDAtODgYOTk58Hg8iIyMRFFR0a20LVu2ICsrC16vF+Hh4di+fbuVxk+mpaWl
WeJ3rnPDhg3WZ2hoKFJTU5Gezof2BFnrZBrzxDpgPjIzM60yM23jxo1WWSIiIqz8c5ssF7fDNJY5
KirKKjfzynIxzc/Pz6o7lon1xTJyGtM4D39zOtO5Djt/nIfbZxq3yXWsX7/eSmOesrOzrXwwjfni
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
obpp9jR+2vPeKY3Tq5vG9d4tzZ7GT3ve6qZRTml2/u41zf5tp9nz22mc7pvGbrg7pd1tuapp3KZv
mv3bTrPnv9c0yinNzkNtpNm/7TR7fjuN06ubxvXeLc2exk973uqmUU5pdv7uNc3+bafZ89tpnP4g
0rhN3zT7t51mz1/TNDsPtZFm/7bT7PntNE5/EGncpm+a/dtOs+e/1zTKKc3OQ3XT7Gn8tOe9Uxo/
2XvgqksALIzdTSJJkiRJ0v3LvmzA+wFcYwCEEEIIUTtUJ/gTGQAhhBDiMUQGQAghhHgMkQEQQggh
HkNkAIQQQojHkIdmADiEisMX+DADvhXwcRDLSvHOzeretCEqYP2xHu06darvR1ElJSXW/4b/H+Ee
ONyZD3h5HI93vEu9OvAQuSr3NLoFH0GvLaXoGfLoqxcVdATj4stx6tKD/48/NAPAgxifcGQ/4vBx
Ep/mxCc7iepjPxWL42Cd6vhRFQMJ/zcMJsId0Kxyf9Gw+j7W9XEQ/580A3xa3f0SVHQW/cONaTpz
FWcvX8OZS4++zhqdM2VdkX0SgyKO4ur1B3ui+FAMAP8QPJPhWQy/8/NxEeGDHfinENWH9cfnSRCn
en5UZf9feGbFT1H/YSDk/iKP4/GOY9Rp1u+XARFlKDhyseLHTbOux0Vg0L+J7sFHcPzCdav4D4qH
ZgD4h6Abdmo0j7JYdhmAmsNn8NMAPG4HVFsyAO6BBoD/98exrbLM1TUAQ6KOorCMBuDxqzeWuXdo
KY6dlwGosariNI+TfHFKr45kAGqH2jYANvzOddpUna++SAbAPTwoA+CLU3p1VZvtn+uqrgEYagzA
1tLaNQBV4TTm8W77hjil21SdXhuSAaiBqu4svnvAfuMSn59MfNOdxHUUFxdj8uTJtx6z6DTf/Yrr
kQGoObVtANg+bLh/+HIN7neneauKeSBOaQ9KMgDu4UEYAMI2ymMa10+c5rtfMY88Rk6ZMgX79++v
cZ65fH0xAKwn+82zrDf7BTpMu1ssckrjcnxpD1/8U9M6cpIMQDXkC39zO6RXr15o2LAhevfujdGj
R+PAgQO30myc1sGg8Omnn2LPnj2VU2r+J+N2ZQBqTm0ZALsdjBo1Cu3atbP2DY3fO++8Y73djPi2
larthnA9O3bsqPzl3JbsabUlGQD3UNsGgPBV6n369LGOaZMmTbICmi+cr2pbrboOm6q/eVzu2rWr
9fY84rvc/Yp5qA8GgPngjcM8nrdq1Qp9+/ZFgwYNrHrjGwL5lr2qcDkyc+bM2/7fNnwj36BBgyp/
1ayeqkoG4D5kw9ckjh8/HgsWLLj1ZyN8nSVfY0nobPm6ScI78flKR9+zPy7DV6baQX/IkCHYtWuX
9epGvp6ypnlmvmQAak5t9gAQvtLzO9/5jnUwIDy47t692/pO2E727t1r7X++gpPfi4qKrNd8Uu+/
/771ulSaB66T+eJBZcyYMdZrQm2qbru6kgFwD7VpALgOrmvAgAHWO+HJ3LlzrWMT0+12Sngmz7bH
IMdX6RLOQ2gg+Fpa9o4SBmgua/eQ8hjK1+4S3+3fr5jf+tIDQMaOHWv91wlf2cu36PHVyawf/qfY
68H/9cGDB615GBv4KmN+8r/POuL/n/uUy0ydOtX6ZL3Vxv61JQNwj+K66OxmzZqFYcOGWe+YZteO
nU7YkD/88EMMHjz4lhHgkJzZs2dbLm7atGlWtxB3Ks/66Kp79OhhzUeHx0bSoUMHtGnTxspzTXY0
l5UBqDm1bQD4znIeHOj2eXBkjwBNIIcx8R3jPCDyTIvvL//ggw+sd33zIPzll19a7+V+4YUXrHS+
s9vOE9sh3/89fPhwa700nLWRX0oGwD3UpgEgPBvt16+f9Z3rtOG76Hk8GzdunHXCwvbH416LFi0w
YsQIK9CRwsJCTJw4Ec2aNbPaK4MzTQSX5XGU8PejaAB4gti+fXu0bt3aqicycOBALF261DLyv/rV
r6xe4pEjR1o9xcz3xx9/bH2fM2cOFi9ejM8//9zaBzQKr732GiZMmGCl8VhRW/9vGYB7FOGZ12ef
fYZt27ZZv4lv+qZNm6wDOt0wdxRdHoMHD+Z+fn746KOPrD8Lv8+fP99ahkGa0AjQBKxdu9b6XdMd
zOVlAGpObRsAng1w32dmZlp/crYXnjlFRkZa7YO9SDSA7D3i/mOw50GD8P3cNAM2vusl7EFq3Ljx
rQOw77arKxkA9/AgDED//v2t7/Y0wh6rDRs2oG3btrd6OXlyExISYpla9maSbt26WSc1hHnr1KmT
ZRBoIGgYyLx58x5ZA8CTwJiYGGzZssWaxrP6GTNmWN95GZB55nw8JhAaAvYuM3ZwWcYNBnueNLCn
kHTu3NkqJ3Ha9v1KBuA+RNidxT8FdxZ3kP1nIwzs9pk/XS5v3mCvAQM705555hkrLzzY80yNy/Gg
TbiDFy1aZHXncpma/om5vAxAzaltA8BuPZ4VER5Ev/vd71qBnWf3zZs3t272YRtir8DOnTtvnQ2w
54gPOeFBlfuVB2HmiWLXIM8yeLZmH0yctl8dyQC4h9o2AOye/uqrr6yTFmKfvdKUMti/8sorVoAj
7KJmGs9WGdQIz3j5HBb7nfI0BjyLZSBcuXKlNQ97vMLCwqzvTvm4V7HM9ckAsI5o8n2hMef/mdgB
nf9b+7LJ0KFDrXjA/z3riPXHXpScnBzLYBGeKNIUEKdt369kAO5T9nrZ5Ur3y+8Uobuls+MBfvr0
6bfcLy8B8J6At99+2zrDI1y2Y8eOiIuLs4LMG2+8YV1WYMNo0qSJLgHUE2rbAPDsn12ihNN4yce+
HsoeJnYJ8s/OP/6bb75ptRceOHlTEeGBs0uXLsjKyrJ+M1+hoaFW27HbYdXt1kQyAO6hNg0ARfhk
QV6y4jGNwYv/BbY1BnLe5MaTIRrY9957zzrGsUufxzkGfAZjBjWK+WKA5hk/18feUsKbpu1gWJN8
c9n6YACYD+4H/sftXl4b/o85nSaf5on/d9YbL4fwpI//d54EMi7Ydc77L/jJ3kGagpdfftnqESBO
279fscwyAPcprtfG/s0DMs/AOBKAXV28D4AmgGf63Lns5mVA5uNV7eXtG0AYAOxHeDKdjbimeeY2
ZABqTm0ZAC7Ps3YeMHnAo/NnoOfwT35nbwDhZSO2F8Jt222C3+11sU0T+7dNTfPoJBkA91CbBoDr
4BkrgxN7AXhM4+UqnumzjbJdcB4GKG6Xxyzee0LxO489hG3Zbs+ExzpeJiDcDuflOqpu/37FvNQX
A8B7efgf53+dwdsWz+QZB2iOWGbWi33cZ33xu93Txzqyu/q5jJ3G5XijoNO2qyMZgFoSgzm7cXmJ
gGJXLB0bP/kH8YXzM29Vv/viu+7qiOuUAag5tdkDwD+y3UbYNuz2wU92n/q2gzu1CZuq635QkgFw
D7XdA2B3Rdtt1m6rVd8vwnmrYufBxl6nzZ3Sqyuur75cAuBlENYX683+n1N2j7ATTv93wvU5UXWb
1RXLLANQC7obdmOvS3GbMgA1p7YvAdwNp2UetmQA3ENtG4C74TT/wxTLXF8MwN1wmv9hSgbgEZUM
QO1QmwbAjZIBcA+1bQDcpJoYAL4LYFstGgA36bEwAE4Ff9TFsvNuUZZfVJ/H2QCwzPbbNEX9xzYA
pOq+fNRFaAD4f71fBkcexfajvBH3cTQAQPctR3D03CNoAAj/ENV5R/SjAK/V8aYRUX143Z434T2O
8JqlepDcAw/oNPz2U/ceN3is4w1198t87wlMTno8/+NpxefRM6QUF68634NQWzw0A8BucD5diTe0
cIzl4yKWl2dvVW9AFPcHLx8xCD6O7Yd3e/P/I9yDfZf949heefZvn9XeD2cv38C4uDJ099+DgYF7
MCDo0ddAypS1k/8BFB27XFkTD46HZgAIGwW7hyiOWX3UZZeTXbii5rAefev1UZf9X6H5Ee6D++1x
aasUy2o/S6Mm7Dt+CbuPXcSex0AsJ3XhSt38xx+qARBCCCHEw0EGQAghhHgMkQEQQgghHkNkAIQQ
QojHEBkAIYQQ4jFEBkAIIYR4DJEBEEIIIR5DZACEEEKIxxAZACGEEOIx5OS5qzUzAEXGAOw6cs5y
EpIkSZIkuUMHyy9aJ/HVNgBckKKLkCRJkiTJHbKDf40NgCRJkiRJ7tQ9G4AhQ4amXQBw2CzAhSRJ
kiRJcq/OmpgeFhn37Qbgyy87ZIebGQOCwy3HIEmSJEmSe8XgP3XazG83AEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIt/HEE/9/GmZDod7kIZIAAAAASUVORK5CYII=</Preview>
  <Form>32io1ltq3RUBACODCAAAAAAABADtXWtz6kbS/u4q/we9/pBN1l4bgbhVkrOFuNiYizFX49qqEwFjkBGSLAkD
rv3x74wENhdJzEhiQFknqZNjzEjdrWee6e7paf3x0HsFfUP/cX7GMH9YPzDGQgV/XjQWugEm1x1R
Higz/bqgaBPrzyvG7ldXTBtouqjIf3LXEfTvFZOdSsZUA3/KYGpognTF1KY9SeyXwKKpjIH8Zy+Z
FOL9eIJNxzgQSaUvGFmYwDu/aJOO+CFogwumPxKlgQa/e5FVZENTJP3CFBUKW9MUFWjGYjko0+8D
1eCnhqHIq+/Ab9XBC4Dj+2D5tZ75hYIoi/rogrlZXexmdTWnq08NpdEXJJATJ0BGakJB0lcMm8Yf
WlEG4OJHAeqxdwwv9MdZRVK0ix+WkfeOyApQRwlTfevLBOpnJRHIRkP8gAqkOO6KiadSewchTS9+
ZIVJTxMFaKqoul9xBCVe0QZAaxgLCZlLnINBThQkZbh3cEXQhiLUHsq3/A9jyFycQLV4ZQ7vJUg6
2DukCv+8+PGJ0b3fbxiCZtQUXTRE9Giy0JBQu74GgLx3bBPMoQlLymQiyNAmzK8aeGeikWjsmr2O
sb/tjs+/w8svB5cVYbAm6E/08x835jfsvl5RpjrII+HWB3196jK0DnQTGl/DrE+2huynFwu/BycY
axawbvSy+yzKSl+wHmGSi10xuxPfEyCd8LUUEeP71qzk4ldMDOfyTaFXhFiCcGdxrm4h8N8Y32zp
oC3qU0EyZ+4agzW16e6s2kIQJJj++FPrn+aPW+i5seBzomBqKopkErxHTCVitDC1khQbWmwkekhs
IXkYTIGCw9jKCsFArSbIQDo40lR0lxgZwjZsJMi6KsCBu+uwGzSjUGQ2eVhoWqphQzIRT0FIRskg
GbH7+v5nWxZ6FJ6t1ENwNI3h+nxt/Eu5PzIfr6LaKGjjYkmCsXSuaoo6xRxk+nIVsa8puvJiMA0I
JaYBNPHFcuyuGB1d8k9ekXY9Ind4QaPZPRlXeEVMeOENswD2ZV+sQRbMkhxiPrzbfAEN8/uQ/DKS
OJSRWQcDCViOof1YGxr7UsiOwnZJ7LSXz1VEQkJtK+DzCrwCjErr4nCEw2xWNAE9VCgxik/QnYkI
MR6HkV88dmBKXDcM/lrNkq/VWN82l+pfhIn6O7ZEcLHOKhMVGq0nAXSBOkBBjCgPnddrX+v9iWMc
ie8P4WXwQr50UwIq0u6gMMX3KH+RjN8ZE6uYQlFHqptnisaGMABapdToM/hDiWhOJNIstUlhGeWg
0wLHaV5jb2yJTmpOWFIHMyug6ZbIPPjMMIRe37rV/ny2q2N/xawvAfgTBd0EProKkKcNQxPVjThi
Ozfct748gV/W0ZfZrwSxTYp477KDw9c+Jti2bXEmGZAgNsDAxU+3n5epCKQMLrmb8iYNAzYQbolj
TqhtZX5+/m7HrV+/Qg7oLtdY++3OVbCmSU0YAhpzxFIWRjOkoe8X4iB0onaPxyPkXED3KSzWsJow
GJhPh/B2y/gzHYMDuMTBAtCLH5Y6DK4+pJRuT+rrZrSPXk/Pv4nvA6cbPNmEY5bDM0LdPY845hgL
aFGIsyjubdZccrsMnDPW7HYRAgLZpheAiZ+yqBu8Mj98bg/eB5vj7PdEBQPReF4WoDM2cDHE7ugi
1OwOIH8BPi+7DQZ35EYc8qwHAO6GmcjgmzbTwXYuvTuA7ZnVdp1eug3ZkSAP0SPYkPan3Xd2Oc1l
x3Xzck67rj6wTieLje6y3K7WyZFulkqYT5QA4G6p6fR1Mo6RnHabADEuhQ9kzBS14wxYNx/RDEhB
Amcd0exM4LjybRQi2IvmDZcUd86iflZwtAfm4IgFToSWtETPPxZBeItjr8efCHBwmk+dYyyqzM8h
a8J10dOyeopkk6ZLNTtWJMIcy3kjHVzXdCNAWQnpHKmcOv3sKTeyswD25r3t4J0yuga0n4SL9LUV
ME7RCbRMRch9HJLPnsncgOjoL55Y6Lmn5GPf84vGUXQXd7KPj0foHoLaZabdnqNjCdu+52hbbOQw
yDUQDSIUNa/imMiOOaU7bAns9KCI4UPthWIMHxgBIdGJu4JHotMifHpIjIYciXdAUgvQx4JLHDCT
Ixjx5l5oOrv4B8Pmrh60wOqUDDo9rO7aKOTghfB8hxYgil9c3cOGKL07FI+5w55LQNTbVnceFPW7
BiBEfTSShBEX/kqyP/xwgv1S1P0RCNFMsD9rsn8q7BouvFPBkLMaEAxQBbMjzwB8EPvH/6bW1GBP
MMaCvSkkA6U8GuA3LRVmnPtxUYLCeDSKv+AHgXKP7ox3hBP4QCbCLY+CIZYzWIh78mh2Ptr94KQq
PDKDAToxG4LyDkvSw9do2Iek9kAlkMnD1vnp8KR5G87PLk08ilKBjqmug1Ra4I5ZJitTLtGah41q
okgtiDjN2TXlHEt5PKXmqaKuLMrjppITFh94VOWaL49FqYNwW36yjZwU5wmUZBs5SETGUBgk5H+I
pAwWptumCjFqR0BSUYEhwt1E8VJxsVYWn4LMRGmD2156GjyKPeKIPLptl2ABSu04a2apgoDOKdIq
BtpmYVq76dvqkvFvNGrbSWYfmJ2CJEcvcikg4yjh6ddR+kXVUYspTUwmcHe3Ayin9AHKGGsGXeSo
dCwUsDvEvCOjSxiMV5O5dTm8wsyTptKvSp0jUyqJlxhceZIfYk0kPBEr7gzdqFD6e/BrMEA7Ksty
dDnWN0pjqL+OF6Z1nFIk1evB8OWJ5x+hargp+FNIQq6Je/hMJJ5sFtVBwdzz5X+/fCSqPSjK6tTQ
rf0CXzF2Ajn6Edy8SSBR9rb8RNTkWlvioQyKdpgdghxOYNiKJKhjizauyLI319fXR8nfrFvFCmdi
QUUcSDEaniDqA+APmCjUQP0jJGAsG982psMhgPGZqgIZ96DB+lUaylTrm6XsErDUz4katJeiiQDX
4Vo7kYu6gLARXKfL53TZtifZZEH17VHycxb26aGTD3UtO80nkh/o+YhyzTpQ7JPNQcS5WxqThbix
iKcQF3uESaWWhNdQRMZFxhCstsgbKgsLZWoE5M3FKTGIvfg0Fl3sczXfvlxgyEK+HF1k0UZVOFy5
dauE2JXzh8tQuHIJD4lpr56c97nyv+XJ+YedDzcumYSg8FDP4NmL84wKNuJtlwK73YlVfmOK9zdw
3xp9TVSDy8bhbqIH5r9tyE9jqQ1D7eCOYUJZ9GJuWvqDp1/WS8EFxsPml/c9Ws9oZiNxT7RH2D7C
ki+8vGfIwRGeudDQyhBvCf4dVOzaJFiSoxZRzI0ASO7kIwrszjZ+I4otc55SRHHi2/plYSr39/Qc
37XC+sv1RqKB90KQY5QBWOphjTlKn1l7P8Mp/HDW5XQWW/M2CXJCK04g4ncOcvKiLGiLH2Kbf6jP
IqXboZKB/1QbrVG+NYR/41vo50Y204X/y0byamuKPuBvB3yzlc9kyre17M18xD+iT6VZoyB9nJ/B
vz68wz9y2oyXevNFA/32uX5fzxdaD/nLNpvTlVEn35/f3D3VOvXH5kMi/pp9nDTE7m1RnfKd0qM+
e8vovNi6PT+LduvtclYoterdUqk/HuaH6mj8nEvGX/Sk/HKjJp8/PmS5lkq8PvTTN4uXeCwG4pe9
/PhuVOk+RrVSBdyMOT6l1tTL87OHFpcov+c0dtaScppcTNWipbHU7XdHH+3bSqunVSvVainP8/ER
f/86bw7nRpdP3nEzcZZqcd306PadGxVeniqJmnx+NuTEbu1t2BRijUKx1xjetd/0Qfr15oF75S7b
b/3ntph7em5m5dZjZXbZixfeW8VGvTfRi6mnt9owFxtk3vhF/y7K5gbnZ9VUYi62uvmWUm9GM69S
Tm0VpXldyT/EE7etzHDUFPnpZYY3HodPyUFEmj4YN5FiOlO9f6neVvJSu9SsRaR4tS5n387P+ple
WxjkO5HHSrUsNoT3maxoHXX2yiaVt4Ja0jMJ7aHVndfuH/KVjtgSJnykPxJmw8nLTSVWyb/3hx+D
nng7ZfOR8zM5Lt49z95mfP1JU2+HraTCTtO3pV4kMlBEsTjJpWuPb3ft13Yrk5w13/p1Xo08XEql
Xv6Be6/PGh9CpC2M02/zmlo5P7t7HLFd404V3+QcVxLrmiY9DLKZXh4UuZdo5FbiIh+9TjqKUJXJ
S4XmuDF9nGSzf9wsAbuBdNK1M4EOE6Wp9jrGXf7WTo6QNwvDboAWbGCcCOXxJEmUx5KCc97d0+Ic
GAEX0c8di4Bz1afUnPdIwL32ioAltqJrfCffnd8U5tEbJVcuRVuFTue1keXUhni/EOvFntoWH0eD
+eL87PW5ky/x+XJ2Xn8Wy6V68qHeKYzunxv8c7d1V47dtGKyPEjmZk/5VFqQm/Ld4LJyU7n84Oav
7abYaBX7T++1m2GhHymen3XKnW69yV5mY2qOT8ZbtUliNrzP5sZyni+/jJ5aOVmIFDnxpcq9Jvv9
qZHtPzfyrXZ/yj+9P4uzZCWbr90Wi5P6Kw817Sbmr5n7/EwwmhO+yi643vQ5oxUivDKoXL6Pc6+x
2Wz88Vgql4ZvEV3Ia/m7EXjNd1LTZjI+FOLP3fupXqo/1zPs+RmodKXUW6b83KgUokNhYMwaseZ9
ppNkdUFp5tKDWbeQqA3jl293k0Tuxug0GiklP2513uvdpybPJ9qv/L2qDofGY+b87L3eBuP7ZDym
lUp54+Zd+GgMM+rT46I0+oi+GizbiDSNIjtfzHKiki20+Vhr9Np9GHUXoDhi9YmQiQ4ilUfhdlw2
zs8+GveRZ1aRp2o1J9RqOe6+e58d159i3fvJ2+NCuP1oD3NybPYWv8zmKrEqr/TqGS3yluDE23Yq
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
iXC4klP/8f+L3KuC3RUBAA==</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		Initialize-ModSettingsTab
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabtools)
	{
		
		
		return $true
		
		
	}($tabPage -eq $tabhelp)
	{
		
		
		return $true
		
		
	}
	elseif ($tabPage -eq $tabkodesearch)
	{
		
		
		return $true
		
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard
	
	$buttonCreateUIFromLayout.Enabled = $true
	if(Read-GlobalParam -key "EnableToolStrip")
	{
		$script:initilizing = $true
		$enabletoolstrip = Read-GlobalParam -key "EnableToolStrip"
		if ($enabletoolstrip -eq $true)
		{
			$checkboxEnableToolStrip.Checked = $true
		}
		else
		{
			$checkboxEnableToolStrip.Checked = $false
		}
		
		$script:initilizing = $false
	}
	
	$script:initilizing = $true
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		$checkboxAutoArchive.Checked = $true
	}
	else
	{
		$checkboxAutoArchive.Checked = $false
	}
	$script:initilizing = $false
	$greppath = Read-GlobalParam -key "dngreppath"
	if ($greppath)
	{
		$textboxdnGrepPath.Text = $greppath
	}
	$indexpath = Read-GlobalParam -key "indexhtmlpath"
	if ($indexpath)
	{
		$textboxIndexPath.Text = $indexpath
	}
	
	$textboxComment.Text = ""
	
	

	$archivetime = Read-GlobalParam -key "ArchiveTimer"
	if ($archivetime -ne 0)
	{
		$numericupdownArchiveTimer.Value = $archivetime
		$labelArchiveTimer.Text = [int]$archivetime * 60
	}
	else
	{
		$labelArchiveTimer.Text = "Never"
	}
	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	

	
	Update-NavButtons
}

function Initialize-ModSettingsTab
{
	[CmdletBinding()]
	param ()
	
	$layoutf = ""
	Assert-ModLayoutFolder -outpath ([ref]$layoutf)
	if ($layoutf)
	{
		$textLayoutFolder.Text = $layoutf
		Write-ModParam -key "LayoutFolder" -value $layoutf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		$textLayoutFolder.Text = $modfolder
	}
	
	$inputsf = ""
	Assert-ModInputsFolder -outpath ([ref]$inputsf)
	if ($inputsf)
	{
		$textInputsFolder.Text = $inputsf
		Write-ModParam -key "InputsFolder" -value $inputsf
	}
	else
	{
		$modfolder = Read-GlobalParam -key "CurrentModFolder"
		
	}
}


$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	# clear list box
	$listAdditionalMods.Items.Clear()
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-ArchiveTimer
	Start-kWorkbench
	
}

$btnLaunchServerGame_Click={
	
Use-Launch
	
}




$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	$autoarchive = Read-GlobalParam -key "Auto-Archive"
	if ($autoarchive -eq $true)
	{
		Start-Archive -Comment "Auto Archive"
		
	}
	

	
	Update-NavButtons
}


$btnLinkMods_Click={
	
   Link-All
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	Use-Build
	
}





$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	if ($buildmethod -eq "Tools")
	{
		$buildm = Start-BuildAddonBuilder -Commandline
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$buildm = Start-BuildMikero -Commandline
	}
	
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file. You need to configure this option using the gear below." -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountPDrive_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory | where {-not $_.BaseName.StartsWith('_')})

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		# $labelPboname.Visible = $true
		# $textpboname.Visible = $true
	}
	Reset-BuildSuccess
	
}




$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all links in P:\ and the Dayz game folder and Workbench folder.  This will NOT remove links in the dayz\addons folder as it is assumed that you want these to persist."
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click = {
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	
	if ($buildmethod -eq "Tools")
	{
		$logfolder = Read-GlobalParam -key "CurrentModFolder"
		$filepath = Add-Folder -Source $logfolder "Kommander\Buildoutput.txt"
	}
	elseif ($buildmethod -eq "Mikero")
	{
		$mikerologfoler = ""
		Assert-MikeroLogFolder -outpath ([ref] $mikerologfoler)
		$filepath = Add-Folder -Source $mikerologfoler -Folder "Scripts.packing.log"
	}
	
	
	Request-Log -FilePath $filepath -InitialDirectory $logfolder 
	
}

$buttonLaunchLogs_Click = {
	
	$profilef = Read-GlobalParam -key "ProfilesFolder"
	Request-Log -Folder $profilef -InitialDirectory $profilef -Filter "All Files (*.*)|*.*|RPT (*.RPT)|*.rpt|Log (*.log)|*.log" -MostRecent 
}

$buttonHotLoadingWasWorking_Click={
	
	Set-PopupMessage -Message "If hotloading does not work. Try Tools->Clean Links.  Launch->Link All"
	Show-messageform_psf
	
}

$buttonConvertExistingMod_Click={
	
	# Copy Kommander folder
	$templatef = Read-GlobalParam -key "TemplateFolder"
	$templateKommanderf = Add-Folder -Source $templatef -Folder "Kommander\*"
	
	$modfolder = Read-GlobalParam -key "CurrentModFolder"
	$kommanderf = Add-Folder -Source $modfolder -Folder "Kommander"
	
	if (-not (Test-Path -Path $kommanderf))
	{
		New-Item -Path $kommanderf -ItemType "Directory"			
	}
	Copy-Item -Path $templateKommanderf -Destination $kommanderf -Recurse
	
	
	# Copy batch files from template to modfolder
	$templatef = Add-Folder -Source $templatef -Folder "*.bat"
	
	Copy-Item -Path $templatef -Destination $modfolder
	Edit-BatchFiles -Modfolder $modfolder -Modname $ModName
	
	
}

$buttonHelpFolderSettings_Click={
	Set-PopupMessage -Message "Convert Mod `n`n (1) Creates Kommander folder; `n (2) Copies and customizes batch folders `n (3) Copies integrated tools `n `nUsage: Copy your modfolder into the modsource folder that you slected in folder settings. Click on it in left panel. Click on Convert Mod. Your mod should now work with Kommander." -Title "Help"
	Show-messageform_psf
	
}

$buttonCreateUIFromLayout_Click={
	
	Show-CreateUI_psf
	
}

$buttonLayoutFolder_Click3={
	if($folderbrowserdialog2.ShowDialog() -eq 'OK')
	{
		$textLayoutFolder.Text = $folderbrowserdialog2.SelectedPath
		Write-ModParam -key "LayoutFolder" -value $folderbrowserdialog2.SelectedPath
	}
}

$buttonInputsFolder_Click3 = {
	$folderbrowserdialog3.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($folderbrowserdialog3.ShowDialog() -eq 'OK')
	{
		$textInputsFolder.Text = $folderbrowserdialog3.SelectedPath
	}
	Write-ModParam -key "InputsFolder" -value $textInputsFolder.Text
}

$buttonHelpCreateUI_Click={
	Set-PopupMessage -Message "This tool will create the code necessary to implement a layout. The code is contained in separate subfolders named UIHelper. `n`nThe tool will also create the necessary code to show the dialog.  However, at present, the tool cannot inject itself into an existing input.xml.  If you don't already have an inputs.xml, then it shouldn't be a problem. The  tool will create one with the O key as default key to bring up your dialog.  But if the tool finds an existing inputs.xml, it will copy the required code in a uiinputs.xml file. Its up to you to integrate the two files. Automating this is on my todo list. `n `n If the key doesn't bring up the dialog, also check to make sure that the config.cpp contains the appropriate reference to the inputs.xml"
	Show-messageform_psf
	
}






$buttonCopyMissionAndConfig_Click={
	$kommanderf = Get-KommanderFolder
	$serveraddins = Add-Folder -Source $kommanderf -Folder "Source Code\Dayz_Folder_Adds\*"
	$gamef = Read-GlobalParam -key "GameFolder"
	Copy-Item -Path $serveraddins -Destination $gamef
}

$buttonHelpCopyMission_Click={
	Set-PopupMessage -Message "In order to run the dayZdiag_x64.exe as the server in the Dayz folder, you must have a copy of the mission and serverDZ.cfg files in the game folder.  If you do not have them, this tool will copy them for you."
	Show-messageform_psf
	
}

$frmWizard_Resize={
	#TODO: Place custom script here

	if ($frmWizard.Size.Height -le 50) # minimized
	{


		# return to previous state

	}
	else
	{
		
	}
	
}

$checkboxEnableToolStrip_CheckedChanged={
	if (-not $script:initilizing)
	{		
		Write-GlobalParam -key "EnableToolStrip" -value $checkboxEnableToolStrip.Checked
	}

}



$buttonHelpMountP_Click={
	Set-PopupMessage -Message "Uses Dayz Tools Command Line to Mount P:"
	Show-messageform_psf
	
}



$buttonBinLogs_Click = {
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}
$buttonWorkbenchLog_Click={
	$logfolder = Read-SteamCommon
	$logfolder = Add-Folder -Source $logfolder -Folder "DayZ Tools\Bin\Logs\Workbench"
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "All Files (*.*)|*.*" -MostRecent
	
}


$buttonCreateFile_Click={
	#TODO: Place custom script here
	Show-CreateNewFIle_psf
	
}


$buttonToolMode_Click={
	#TODO: Place custom script here
	# minimize form
	$winstate = $frmWizard.WindowState
	$frmWizard.WindowState = 'Minimized'
	Show-KommandStrip_psf
	# return to previous state
	$frmWizard.WindowState = $winstate
}

$buttonArchiveNow_Click={
	
	start-archive -Comment $textboxComment.Text
	$textboxComment.Text = ""
}

$checkboxAutoArchive_CheckedChanged={
	
	if (-not $script:initilizing)
	         
	{
		Write-GlobalParam -key "Auto-Archive" -value $checkboxAutoArchive.Checked
	}
	
	
}

$buttonKommander_Click = {
	
	$logfolder = Get-KommanderFolder
	$logfolder = Add-Folder -Source $logfolder -Folder "Logs"
	
	Request-Log -Folder $logfolder -InitialDirectory $logfolder -Filter "Log Files (*.txt)|*.txt" -MostRecent
	
}

$button1_Click={
	Set-PopupMessage -Message "Tool mode closes the main form and opens a floating toolbar in the upper right corner. This mode is easier to use in the script editor or in game.`n`nR - Reload Dayzgame only. It is slightly quicker to close the dayz only when you need to recompile in which case use the R option.`nL - Launch game AND server if you've terminated both server and game.`nK - Kill both server and game processes.`n`nClose the toolbar window to bring the main form back up." -Title "Help"
	Show-messageform_psf
	
}

$button2_Click={
	Set-PopupMessage -Message "Create a new mod from a modtemplate" -Title "Help"
	Show-messageform_psf
}

$button3_Click={
	Set-PopupMessage -Message "Set global folder locations" -Title "Help"
	Show-messageform_psf
	
}

$button4_Click={
	Set-PopupMessage -Message "This is a way to make your addons semi-permanent from one project to the next. This option will link your currently selected addons to workbench so that they will be available to workbench without selecting them on this page each time you create a new mod. This is useful if you always include CF in your mods for e.g. or if you always have a list of expansion mods that you use. Not that the CLEAN UP LINKS button intentionally does not remove these links as it is assumed that you want them to persist. To remove them, you simply delete the links from the dayz/addons folder." -Title "Help"
	Show-messageform_psf
	
}

$buttonBrowseCodebase_Click={
	#TODO: Place custom script here
	$Kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -Source $Kommanderf -Folder "Doxy\html\index.html"
	Start-Process "$indexpath"
}

$buttonDnGrepCodebase_Click={
	Start-dnGrep
	
	
}

$buttonDnGrepPath_Click={
	
	$greppath = "C:\\Program Files\\dnGrep\\"
	if($openfiledialog1.ShowDialog() -eq 'OK')
	{
		$textboxdnGrepPath.Text = $openfiledialog1.FileName
		Write-GlobalParam -key "dngreppath" -value $textboxdnGrepPath.Text
		
	}
}

$textboxdnGrepPath_TextChanged={
	#TODO: Place custom script here
	
}

$openfiledialog1_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$buttonHelpDnGrep_Click={
	Set-PopupMessage -Message "This tool will only work if you install dnGrep. dnGrep is a super useful tool to have on your computer as it makes searching for files very powerful. It can be installed from the git https://dngrep.github.io/ or by running the following winget command on an elevated commandline: winget install -e --id dnGrep.dnGrep " -Title "dnGrep Help"
	Show-messageform_psf
	
}

$buttonMyModWontBuildButICa_Click={
	Set-PopupMessage -Message "Is workbench open -- maybe in the background? You cannot re-build if workbench is open because workbench locks the pbo." -Title "Build Help"
	Show-messageform_psf
	
}

$buttonBrowse_Click={
	$kommanderf = Get-KommanderFolder
	$indexpath = Add-Folder -source $kommanderf -folder "doxy\html\"
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"
	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		
		$textboxIndexPath.Text = $openfiledialog2.FileName
		Write-GlobalParam -key "indexhtmlpath" -value $textboxdnGrepPath.Text
		
	}
}

$labelFileLocationOfIndexh_Click={
	#TODO: Place custom script here
	
}

$buttonCantCompileEngineScr_Click={
	Set-PopupMessage -Message "The `Can't compile `Engine` script module! scripts/1_core: Path not found` error can occur when you are attempting to play on a remote server but still have folders symbolically linked to the dayz folder. If you get this error, try removing the symbolic links either manually or  by hitting th `clean up links` button."
	Show-messageform_psf
	
}

$button7_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This is the location of the dngrep.exe.  After installation, it will be located in: C:\\Program Files\\dnGrep\\dnGREP.exe."
	Show-messageform_psf
}

$buttonHelpInputsFolder_Click={
	Set-PopupMessage -Message "This is the location of inputs.xml.  This file defines your mods keybinds. In Kommander's template it will be in \scripts\data. If you are using another template you may need to do a search for the file name will will alway be inputs.xml. "
	Show-messageform_psf
	
}

$textboxComment_TextChanged={
	#TODO: Place custom script here
	
}



$contextmenustrip1_Opening=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}

$contextmenustrip1_ItemClicked=[System.Windows.Forms.ToolStripItemClickedEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.ToolStripItemClickedEventArgs]
	#TODO: Place custom script here
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$cmf = Read-GlobalParam -key "CurrentModFolder"
	Start-Archive -Comment "archive prior to deletion"
	Remove-Item -Path $cmf -recurse
	Update-Wizard
}

$buttonMyModDoesntShowUpInS_Click={
	Set-PopupMessage -Message "This can occur if your packed mod is not linked properly.  First, make sure that you have built the mod at least once by checking in your packed mod folder to see if the *pbo* is there. Second, make make sure that there is a link to the packed mod folder to P:\."
	Show-messageform_psf
	
}

$buttonImWorkingOnANewModIn_Click={
	Set-PopupMessage -Message "You must exit and restart WB each time you change mods so that it can load the appropriate pbo. Check the build logs. Both Tools and Mikero build the pbo in a temp location. The final step is to copy it to your pbo folder.  If it builds but fails to copy its probably because sometimes holds on even after termination so you may need to reboot to be sure that this isn't the issue."
	Show-messageform_psf
	
}

$buttonWhyArentMyEditsHotLo_Click={
	Set-PopupMessage -Message "If hotloading is working generally but certain edits aren't hotloading, consider the following:`n`n1. Changes to method signature do not hot load. Try setting a break point if you are not sure if a hot load took. If the breakpoint has an ! in it you will need to close the game and compile with F7.`n`n2. Important! Changes won't hot load if there are errors, which there maybe even though recompiling on host reports success. Most (but not all) of the time that hotloading isn't working is because there is an error in the code you are trying to hotload."
	Show-messageform_psf
	
}

$checkboxUseBatch_CheckedChanged={
	Write-GlobalParam -key "UseBatch" -value $checkboxUseBatch.Checked
	
}

$labeladdedToArchiveName_Click={
	#TODO: Place custom script here
	
}

$numericupdownArchiveTimer_ValueChanged= {
	
	Write-GlobalParam -key "ArchiveTimer" -value $numericupdownArchiveTimer.Value
}

$ArchiveTimer_Tick={
	#Use Get-Date for Time Accuracy
	[TimeSpan]$span =  $script:StartTime - (Get-Date)
	
	
	
	
	$labelArchiveTimer.Text =  "{0:N0}" -f $span.TotalSeconds
	
	if ($span.TotalSeconds -le 0)
	{
		$ArchiveTimer.Stop()
		Start-Archive -Comment "TimedArchive"
		Start-ArchiveTimer
	}
	
}

function Start-ArchiveTimer
{
	[CmdletBinding()]
	param
	(
		$Duration
	)
	
	$TotalTimeStr = Read-GlobalParam -key "ArchiveTimer"
	$TotalTime = [int]$TotalTimeStr
	$TotalTime = $TotalTime * 60 # must be in seconds
	
	if ($TotalTime -gt 0)  # 0 in minutes means don't autosave
	{
		
		$script:StartTime = (Get-Date).AddSeconds($TotalTime)
		#Start the timer
		$ArchiveTimer.Start()
		
	}


	
	
}


$labelTimeUntilNextArchive_Click={
	#TODO: Place custom script here
	
}

$buttonStop_Click={
	$ArchiveTimer.Stop()
	
}

$button5_Click={
	Set-PopupMessage -Message "This window will populate with mod folders.  It skips folders with names beginning with '_' as so that you can have subfolders in the mod-source for _published, _worksinprogress, etc."
	Show-messageform_psf
	
}

$buttonBreakpointsNotWorkin_Click={
	Set-PopupMessage -Message "This can happen on reload when the game was not killed first. Check that you completely closed the game before hitting 'L' to reload.  'K' will not kill the game if it is paused on a breakpoint in W B. This can lead to a situation where you assume that everything was killed because you pushed the 'K' button but the game is still open. If you push 'L' to reload without fully killing the game, the WB won't connect properly. The solution is to hit the green play button in WB until the game is no longer paused at a break point. Then Kill with 'K' and load with 'L'. At point, you should be able to use breakpoints again."
	Show-messageform_psf
	
}

$buttonAddonRequiresAddonJM_Click={
	Set-PopupMessage -Message "You are attempting to use a mod that requires CF (community framework).  Make sure that you have CF selected as an additional mod.  Click `link to Dayz Addons` on the additional addons page."
	Show-messageform_psf
	
}




$linklogs_Click={
	
	$logfolder = Read-GlobalParam -key "CurrentModFolder"
	$filepath = Add-Folder -Source $logfolder "Kommander\link.log"
		
	Request-Log -FilePath $filepath -InitialDirectory $logfolder
	
}

$button6_Click={
	Show-Link_All_Options_psf
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">11</Line>
    <Line Disabled="True">70</Line>
    <Line Disabled="True">123</Line>
    <Line Disabled="True">244</Line>
    <Line Disabled="True">522</Line>
    <Line Disabled="False">625</Line>
    <Line Disabled="False">1076</Line>
    <Line Disabled="False">1106</Line>
    <Line Disabled="False">1157</Line>
    <Line Disabled="True">1252</Line>
    <Line Disabled="True">1301</Line>
    <Line Disabled="True">1318</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>0</Mode>
  <Assemblies />
</File>