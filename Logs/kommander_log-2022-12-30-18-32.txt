**********************
Windows PowerShell transcript start
Start time: 20221230183226
Username: Office\Daniel
RunAs User: Office\Daniel
Configuration Name: 
Machine: OFFICE (Microsoft Windows NT 10.0.22000.0)
Host Application: S:\Kommander\Kommander.exe
Process ID: 4268
PSVersion: 5.1.22000.1335
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.22000.1335
BuildVersion: 10.0.22000.1335
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is S:\Kommander\Logs\kommander_log-2022-12-30-18-32.txt
The property 'Visible' cannot be found on this object. Verify that the property exists and can be set.
At line:2852 char:4
+             $labelPboname.Visible = $true
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'Visible' cannot be found on this object. Verify that the
property exists and can be set.
At line:2852 char:4
+             $labelPboname.Visible = $true
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'Visible' cannot be found on this object. Verify that the property exists and can be set.
At line:2853 char:4
+             $textpboname.Visible = $true
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'Visible' cannot be found on this object. Verify that the
property exists and can be set.
At line:2853 char:4
+             $textpboname.Visible = $true
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'BackColor' cannot be found on this object. Verify that the property exists and can be set.
At line:803 char:3
+         $buttonB.BackColor = 'Transparent'
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'BackColor' cannot be found on this object. Verify that the
property exists and can be set.
At line:803 char:3
+         $buttonB.BackColor = 'Transparent'
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

**********************
Command start time: 20221230183239
**********************
PS>$ExitCode
0
﻿**********************
Windows PowerShell transcript start
Start time: 20221230183237
Username: Office\Daniel
RunAs User: Office\Daniel
Configuration Name: 
Machine: OFFICE (Microsoft Windows NT 10.0.22000.0)
Host Application: S:\Kommander\Kommander.exe
Process ID: 2180
PSVersion: 5.1.22000.1335
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.22000.1335
BuildVersion: 10.0.22000.1335
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is S:\Kommander\Logs\kommander_log-2022-12-30-18-32.txt
The property 'Visible' cannot be found on this object. Verify that the property exists and can be set.
At line:2852 char:4
+             $labelPboname.Visible = $true
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'Visible' cannot be found on this object. Verify that the
property exists and can be set.
At line:2852 char:4
+             $labelPboname.Visible = $true
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'Visible' cannot be found on this object. Verify that the property exists and can be set.
At line:2853 char:4
+             $textpboname.Visible = $true
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'Visible' cannot be found on this object. Verify that the
property exists and can be set.
At line:2853 char:4
+             $textpboname.Visible = $true
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'BackColor' cannot be found on this object. Verify that the property exists and can be set.
At line:803 char:3
+         $buttonB.BackColor = 'Transparent'
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'BackColor' cannot be found on this object. Verify that the
property exists and can be set.
At line:803 char:3
+         $buttonB.BackColor = 'Transparent'
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

**********************
Command start time: 20221230183309
**********************
PS>TerminatingError(Get-ChildItem): "A parameter cannot be found that matches parameter name 'Directory'."
Get-ChildItem : A parameter cannot be found that matches parameter name 'Directory'.
At line:1380 char:44
+         $targetfiles = Get-ChildItem $Folder *.* -Directory
+                                                  ~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Get-ChildItem], ParameterBindingException
    + FullyQualifiedErrorId : NamedParameterNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand
Get-ChildItem : A parameter cannot be found that matches parameter name
'Directory'.
At line:1380 char:44
+         $targetfiles = Get-ChildItem $Folder *.* -Directory
+                                                  ~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Get-ChildItem], ParameterB
   indingException
    + FullyQualifiedErrorId : NamedParameterNotFound,Microsoft.PowerShell.Comm
   ands.GetChildItemCommand

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

The property 'BackColor' cannot be found on this object. Verify that the property exists and can be set.
At line:803 char:3
+         $buttonB.BackColor = 'Transparent'
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'BackColor' cannot be found on this object. Verify that the
property exists and can be set.
At line:803 char:3
+         $buttonB.BackColor = 'Transparent'
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewItemCommand
New-Item : Cannot find drive. A drive with the name 'P' does not exist.
At line:1325 char:3
+         New-Item -ItemType SymbolicLink -Path $Link -Target $Target
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [New-Item], DriveNotF
   oundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.NewI
   temCommand

Set-Location : Cannot find drive. A drive with the name 'P' does not exist.
At line:619 char:4
+             Set-Location "P:"
+             ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [Set-Location], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.SetLocationCommand
Set-Location : Cannot find drive. A drive with the name 'P' does not exist.
At line:619 char:4
+             Set-Location "P:"
+             ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:String) [Set-Location], Drive
   NotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.SetL
   ocationCommand

Get-Content : Cannot find path 'S:\Steam\steamapps\common\DayZ Tools\Bin\Workbench\True' because it does not exist.
At line:777 char:15
+             $success = Get-Content -Path $buildlogpath | Select-Strin ...
+                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (S:\Steam\steama...\Workbench\True:String) [Get-Content], 
ItemNotFoundException
    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetContentCommand
Get-Content : Cannot find path 'S:\Steam\steamapps\common\DayZ
Tools\Bin\Workbench\True' because it does not exist.
At line:777 char:15
+             $success = Get-Content -Path $buildlogpath | Select-Strin ...
+                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (S:\Steam\steama...\Workbench\Tr
   ue:String) [Get-Content], ItemNotFoundException
    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetCo
   ntentCommand

The property 'BackColor' cannot be found on this object. Verify that the property exists and can be set.
At line:785 char:4
+             $buttonB.BackColor = 'Green'
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'BackColor' cannot be found on this object. Verify that the
property exists and can be set.
At line:785 char:4
+             $buttonB.BackColor = 'Green'
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'BackColor' cannot be found on this object. Verify that the property exists and can be set.
At line:803 char:3
+         $buttonB.BackColor = 'Transparent'
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'BackColor' cannot be found on this object. Verify that the
property exists and can be set.
At line:803 char:3
+         $buttonB.BackColor = 'Transparent'
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

Get-Content : Cannot find path 'P:\True' because it does not exist.
At line:777 char:15
+             $success = Get-Content -Path $buildlogpath | Select-Strin ...
+                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:\True:String) [Get-Content], ItemNotFoundException
    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetContentCommand
Get-Content : Cannot find path 'P:\True' because it does not exist.
At line:777 char:15
+             $success = Get-Content -Path $buildlogpath | Select-Strin ...
+                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (P:\True:String) [Get-Content],
   ItemNotFoundException
    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetCo
   ntentCommand

The property 'BackColor' cannot be found on this object. Verify that the property exists and can be set.
At line:785 char:4
+             $buttonB.BackColor = 'Green'
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound
The property 'BackColor' cannot be found on this object. Verify that the
property exists and can be set.
At line:785 char:4
+             $buttonB.BackColor = 'Green'
+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

elseif : The term 'elseif' is not recognized as the name of a cmdlet, function, script file, or operable program. Check 
the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:2215 char:3
+         elseif ($tabPage -eq $tabkodesearch)
+         ~~~~~~
    + CategoryInfo          : ObjectNotFound: (elseif:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
elseif : The term 'elseif' is not recognized as the name of a cmdlet,
function, script file, or operable program. Check the spelling of the name, or
if a path was included, verify that the path is correct and try again.
At line:2215 char:3
+         elseif ($tabPage -eq $tabkodesearch)
+         ~~~~~~
    + CategoryInfo          : ObjectNotFound: (elseif:String) [], CommandNotFo
   undException
    + FullyQualifiedErrorId : CommandNotFoundException

elseif : The term 'elseif' is not recognized as the name of a cmdlet, function, script file, or operable program. Check 
the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:2215 char:3
+         elseif ($tabPage -eq $tabkodesearch)
+         ~~~~~~
    + CategoryInfo          : ObjectNotFound: (elseif:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
elseif : The term 'elseif' is not recognized as the name of a cmdlet,
function, script file, or operable program. Check the spelling of the name, or
if a path was included, verify that the path is correct and try again.
At line:2215 char:3
+         elseif ($tabPage -eq $tabkodesearch)
+         ~~~~~~
    + CategoryInfo          : ObjectNotFound: (elseif:String) [], CommandNotFo
   undException
    + FullyQualifiedErrorId : CommandNotFoundException

elseif : The term 'elseif' is not recognized as the name of a cmdlet, function, script file, or operable program. Check 
the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:2215 char:3
+         elseif ($tabPage -eq $tabkodesearch)
+         ~~~~~~
    + CategoryInfo          : ObjectNotFound: (elseif:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
elseif : The term 'elseif' is not recognized as the name of a cmdlet,
function, script file, or operable program. Check the spelling of the name, or
if a path was included, verify that the path is correct and try again.
At line:2215 char:3
+         elseif ($tabPage -eq $tabkodesearch)
+         ~~~~~~
    + CategoryInfo          : ObjectNotFound: (elseif:String) [], CommandNotFo
   undException
    + FullyQualifiedErrorId : CommandNotFoundException

**********************
Command start time: 20221230195938
**********************
PS>$ExitCode
0
**********************
Windows PowerShell transcript end
End time: 20221230195938
**********************
