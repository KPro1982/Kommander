<File version="3.2">
  <FileID>fb15099b-6511-42ea-a001-83430d32c4ab</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAG31SURBVHhe7b0HdJRXnqa/OzNnerZnemZ7ds/M
+c/uznaYbXf3dHZ322632zYYGydyztHknDE5R5ODyTmJICEkIZRzjqCIMhIKIAmhHN///d1SQSEK
EJJAJX3ve84DVV8Ot+59vvt9VfovDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
hsuxv/6rvwr9jx//OHTGjJmhixZ9HbpgwSJCCCGEdBgWh3799ZLQLz//LPQ7f/u3oaptF56fv/qr
v4rr3r07Dh0/i5Bb6UjMKkJ8xn1CCCGEdBASMgsV9+EVGIFZs2bh+9//72hs5p+dH//oB6EHj55G
VNp9eEenwyPiNjwJIYQQ0qGQ9js4IRch0cno2bPniwVgxrSZoSE30+EbkwGfqFRCCCGEdFC8I1MQ
rS7oT54+/2IB+HrxktDUuw/hFZUGn2hCCCGk4+LbhnS0ZQreSgJuZhbjvJ3DiwVg8aLFoSk5D9SM
6fCLIYQQQjomATczEHgrS5HZagIUskz/2Ay1XPW+jWjb7cx6tEwzIgS3lACcPX/5xQKwSATgbom+
BSA7SgghhHQ0pMF2D0nCaQd/nLjsi5NX/FqGmvfEZR9c9YzSjaxnWBIu3QjEpev+uOTaQmRehYt/
tGk7gxNx2r4tttMX17xjtASYj4NIQFzWg+YLQKoSAL9Y67ZCCCGE2DpB8Xd0g3jdNwY+EcnwVg13
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
aesPaFshoQB0bF5VPfa8WJveVpDYkgA8L9amtwUkFACDIaEAGAsJBaBjw3rsSSS2JAAdEQkFwGBI
jCQA5h8rsXYsjIJEBEAeVqUAdExYjz2JpDUCIA/sSqwt2yhI5KFN+eZGpxUAQXZSnqKX32M2euT5
BGkYxfysHavOglQK8kE3P5Vs5MhXr+RDLj881NmlrzMjn1mpx+QzbPS0tB6Thk4e0pZnHBjTN9he
R89guwqAVHpywuVHLwT5EMn3LY2EeZ/ND/h09oZA9k+uDsznvOnxMBJyzuWDzsa/Y2Oux+RBMzmv
RqzHzMgxaEk9JtPLRYHIg/k4GhWpF+TC4HXUC+0qAILspFwByQ4bGSNdBcp+yk9tWjsORkK+eWKU
c97ZYT1mojX1mMwnEiA9AdaWbRTkh8rMx6PpMWpr2l0ABNlR+VEKI/M6TrYtwXNeyvv+nQyW6dbX
YzK/fC6sLdsovM56wSYEgBBCCCGvFwoAIYQQYkAoAIQQQogBoQAQQgghBoQCQAghhBgQCgAhhBBi
QCgAhBBCiAGhABBCCCEGpE0FoFAJwMOHpoUSQgghxHaR9rrNBCBVLUgWRgghhBDbJynH1Pi3WgDi
lUWISRBCCCHE9nnUfrdEAOKVAJjtgRBCCCEdjzhFTnMFYNGixeEVDcDdUoWaiRBCCCEdE2n8KwBc
uer8YgEYO3Zc9GUHJ5y7cEUbAyGEEEI6LleuOmHN2vUvFgCGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YRiGYRiGYRiGYRiGYZhOlP/yX/5/zrWUJo3F14kAAAAASUVORK5CYII=</Preview>
  <Form>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</Form>
  <Code><![CDATA[
#-------------------------------------------------------
# NOTE: When new TabPage added place the validation code
# 		in the Test-WizardPage function.
#-------------------------------------------------------
function Test-WizardPage
{
<#
	Add TabPages and place the validation code in this function
#>
	[OutputType([boolean])]
	param([System.Windows.Forms.TabPage]$tabPage)
	
	if($tabPage -eq $tabSelectMod)
	{
		#TODO: Enter Validation Code here for Step 1
		if($lblModName.Text)
		{
			return $true 
		}
		
		return $false
	}
	elseif ($tabPage -eq $tabLaunch)
	{
		#TODO: Enter Validation Code here for Step 2

		
		
		if ($lblModName.Text)
		{
			return $true
		}
		
		return $false
		
	}
	elseif ($tabPage -eq $tabAddons)
	{
		#TODO: Enter Validation Code here for Step 3

			return $true
		
	}
	elseif ($tabPage -eq $tabModSettings)
	{
		
		if ($txtScriptsFolder.Text)
		{
			return $true
		}
		
		return $false
		
	}
	#Add more pages here
	
	return $false
}



$buttonFinish_Click={
	#-------------------------------------------------------
	# TODO: Place finalization script here
	#-------------------------------------------------------
	
}

#region Events and Functions
$frmWizard_Load={
	Update-NavButtons
	Update-Wizard

	
	
	
}

function Update-NavButtons
{
	<# 
		.DESCRIPTION
		Validates the current tab and Updates the Next, Prev and Finish buttons.
	#>
	$enabled = Test-WizardPage $tabcontrolWizard.SelectedTab
	$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
	$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
	#Uncomment to Hide Buttons
	#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
}

$script:DeselectedIndex = -1
$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# Store the previous tab index
	$script:DeselectedIndex = $_.TabPageIndex
}

$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
	# We only validate if we are moving to the Next TabPage. 
	# Users can move back without validating
	if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
	{
		#Validate each page until we reach the one we want
		for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
		{
			$_.Cancel = -not (Test-WizardPage $tabcontrolWizard.TabPages[$index])
			
			if($_.Cancel) 
			{
				# Cancel and Return if validation failed.
				return;
			}
		}
	}
	
	Update-NavButtons
}

$buttonBack_Click={
	#Go to the previous tab page
	if($tabcontrolWizard.SelectedIndex -gt 0)
	{
		$tabcontrolWizard.SelectedIndex--
	}
}

$buttonNext_Click={	
	#Go to the next tab page
	if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
	{
		$tabcontrolWizard.SelectedIndex++
	}
}

#endregion

#------------------------------------------------------
# NOTE: When a Control State changes you should call
# 		Update-NavButtons to trigger validation
#------------------------------------------------------

$textboxName_TextChanged={
	Update-NavButtons
}




$tabSelectMod_Click={
	
	
}

$btnLaunch_Click={
	
	Start-kServer
	Start-Sleep -Seconds 5
	Start-kMPGame
}

$btnKill_Click={
	
	Stop-kDayz
}

$buttonSelectAdditionalMods_Click={
	
	$FolderBrowser = New-Object System.Windows.Forms.FolderBrowserDialog;
	$FolderBrowser.RootFolder = "Desktop";
	
	$Results = $FolderBrowser.ShowDialog();
	
	if ($Results -eq "OK")
	{
		$location = $FolderBrowser.SelectedPath.ToString();
		$txtAdditionalMods.Text = $location;
		Update-NavButtons
	}
}

$buttonBrowseFolder_Click={
	if($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
	}
}

$buttonBrowseFolder_Click2={
	if($folderbrowsermoderndialog1.ShowDialog() -eq 'OK')
	{
		$txtScriptsFolder.Text = $folderbrowsermoderndialog1.SelectedPath
	}
}

$btnSettings_Click={
	
	Show-GlobalSettings_psf
}

#region Control Helper Functions
function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}


#endregion

$listSelectAdditionalMods_SelectedIndexChanged={
	
	$selectedmod = $listSelectAdditionalMods.Items.Item($listSelectAdditionalMods.SelectedIndex)
	Update-ListBox $listAdditionalMods  $selectedmod -Append
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
	
}

function Initialize-Listbox
{
	[CmdletBinding()]
	param ()
	
	#TODO: Place script here
	$mods = Read-ModParam -key "AdditionalMPMods"
	
	if ($mods)
	{
		$modlist = $Mods.Split(';')
		
		foreach ($mod in $modlist)
		{
			Update-ListBox $listAdditionalMods  $mod -Append
		}
		
	}
	
}



function Convert-ListboxCollection
{
	[CmdletBinding()]
	[OutputType([string])]
	param ()
	
	$addonresult = ""
	#TODO: Place script here
	foreach ($mod in $listAdditionalMods.Items)
	{
		$addonresult = $addonresult +  $mod + ';'
		
	}
	if ($addonresult)
	{
		$addonresult = $addonresult.TrimEnd(';')
	}
	Else
	{
		$addonresult = ""
	}
	
	return $addonresult
}



$listAdditionalMods_Click={
	
	$selindex = $listAdditionalMods.SelectedIndex
	$item = $listAdditionalMods.Items.Item($selindex)
	$listAdditionalMods.Items.Remove($item)
	$mods = Convert-ListboxCollection
	Write-ModParam -key "AdditionalMPMods" -value $mods
}

$buttonLaunchWorkbench_Click={
	
	Start-kWorkbench
}

$btnLaunchServerGame_Click={
	
	Stop-kDayz
	Start-kServer
	Start-Sleep -Seconds 10
	Start-kMPGame
	
}

$listSelectMod_SelectedIndexChanged= {
	
	$modname = $listSelectMod.Items.Item($listSelectMod.SelectedIndex)
	$lblModName.Text = $modname
	$curmodfolder = Read-GlobalParam -key "ModSourceFolder"
	$curmodfolder = Add-Folder -Source $curmodfolder -Folder $modname
	Write-GlobalParam -key "CurrentModFolder" -value $curmodfolder
	Write-ModParam -key "ModName" -value $modname
	
	# initialize elements that require a modname
	Initialize-Listbox
	
	
	$modscriptsfolder = Read-ModParam -key "ScriptsFolder"
	if (-not $modscriptsfolder)
	{
		if (Assert-ModScriptsFolder -outpath ([ref]$modscriptsfolder))
		{
			$txtScriptsFolder.Text = $modscriptsfolder
			Write-ModParam -key "ScriptsFolder" -value $modscriptsfolder
		}
	}
	else
	{
		$txtScriptsFolder.Text = $modscriptsfolder
	}
	
	
	Update-NavButtons
}


$btnLinkMods_Click={
	
	Link-Scripts
	Link-Source
	Link-Packed
	Link-Workbench
}
<#
	.SYNOPSIS
		Set folder to folder define in settings
	
	.DESCRIPTION
		A detailed description of the Set-Folder function.
	
	.PARAMETER folder
		A description of the folder parameter.
	
	.EXAMPLE
				PS C:\> Set-Folder -folder 'Value1'
	
	.NOTES
		Additional information about the function.
#>



$buttonBuild_Click={
	
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	Start-Build $buildmethod

}


$btnWorkbenchCommandline_Click = {
	$wbcommandline = Start-kWorkbench -Commandline
	Set-PopupMessage -Message $wbcommandline -Title "Workbench Commandline"
	Show-messageform_psf
}

$btnBuildCommandLine_Click = {
	
	$buildmethod = Read-GlobalParam -key "BuildMethod"
	$buildm = ""
	$buildm = Start-Build -BuildMethod $buildmethod -Commandline
	Set-PopupMessage -Message "$buildm" -Title "Build Commandline"
	Show-messageform_psf
}


$btnServerCommandline_Click={
	
	$newline = "`n"
	$servergamecommandline = "SERVER`n" + (Start-kServer -CommandLine)
	$servergamecommandline += "`n`n"
	$servergamecommandline += "GAME`n" + (Start-kMPGame -CommandLine)
	Set-PopupMessage -Message $servergamecommandline -Title "Server + Build Commandlines"
	Show-messageform_psf
}

$buttonBuildSettings_Click={
	
	Show-BuildSettings_psf
}

$btnScriptsFolder_Click = {
	$folderbrowserdialog1.SelectedPath = Read-GlobalParam -key "CurrentModFolder"

	$testpath = ""

	if ($folderbrowserdialog1.ShowDialog() -eq 'OK')
	{
		
		Write-ModParam -key "ScriptsFolder" -value $folderbrowserdialog1.SelectedPath
		$txtScriptsFolder.Text = $folderbrowserdialog1.SelectedPath
		Update-NavButtons
	}
	
	
}
$txtScriptsFolder_TextChanged = {
	
	Write-ModParam -key "ScriptsFolder" -value $txtScriptsFolder.Text

}


$lblModName_Click={
	
	
}



$buttonSetupWizard_Click={
	
	Show-SetupWizard_psf
}

$labelPboname_Click={
	
	
}

$textpboname_TextChanged={
	
	Write-ModParam -key "PboName" -value $textpboname.Text
	
}

$listAdditionalMods_SelectedIndexChanged={
	
	
}

$buttonHelpScriptsFolder_Click={
	
	Set-PopupMessage -Message "This is the subfolder that contains your mods scripts. It is generally just called scripts. Kommander will autofill this field if you use the standard setup" -Title "Help"
	Show-messageform_psf
}

$buttonlinkmods_Click={
	
	Set-PopupMessage -Message "If Kommander is running as administrator, this will link your mods. Otherwise you can use the provided linkall bat file" -Title "Help"
	Show-messageform_psf
}

$buttonkillall_Click={
	
	Set-PopupMessage -Message "Kill all running instances of dayz. " -Title "Help"
	Show-messageform_psf
}

$buttonhelpadditionmods_Click={
	
	Set-PopupMessage -Message "Select the mods that you want to load with your mod.  Click on left panel to select a mod. Click on right panel to deselect a mod`n'link to workbench' will add a symbolic link to dayz\addons." -Title "Help"
	Show-messageform_psf
}


$buttonMountP_Click={
	
	Mount-Pdrive
}

$buttonLinkToDayzAddons_Click={
	
	Link-Addons
}



$btnCreateNewMod_Click={
	
	Show-CreateMod_psf
	Update-NavButtons
	Update-Wizard
	
}

$tabSelectMod_Enter={
	
	Update-Wizard
}

function Update-Wizard
{
	[CmdletBinding()]
	param ()
	
	$workshop = Read-GlobalParam -key GameFolder
	$workshop += "\!Workshop"
	$modsource = Read-GlobalParam -key ModSourceFolder
	Update-ListBox $listSelectAdditionalMods (Get-ChildItem -Path "$workshop" -Directory)
	Update-ListBox $listSelectMod (Get-ChildItem -Path "$modsource" -Directory)

	$buildmethod = Read-GlobalParam -key "BuildMethod"
	if ($buildmethod -eq "Mikero")
	{
		$labelPboname.Visible = $true
		$textpboname.Visible = $true
	}

}


$buttonBrowse_Click={
	
	Write-ScratchParam -key "DefaultLogFile" -value "None"
	Show-DisplayLogs_psf
	
}

$buttonBrowse2_Click={

	if($openfiledialog2.ShowDialog() -eq 'OK')
	{
		$textboxFile.Text = $openfiledialog2.FileName
	}
}

$formSplashScreen_Load = {
	<#
	Use the -PassTru parameter to update the splash screen text:
	.EXAMPLE
	$splashForm = Show-SplashScreen ... -PassThru
	#Update the splash screen text
	$splashForm.Text = 'Loading Modules...'
	#>
	
	$paramShowSplashScreen = @{
		Image = $pictureboxSplashScreenHidden.Image
		Title = 'Loading...'
		PassThru = $false
	}
	
	Show-SplashScreen @paramShowSplashScreen
	
	#TODO: Place initialization script here:
	
}
#Append the event to the form
#  $frmWizard.add_Load($formSplashScreen_Load)


#region Splash Screen Helper Function
function Show-SplashScreen
{
	<#
	.SYNOPSIS
		Displays a splash screen using the specified image.
	
	.PARAMETER Image
		Mandatory Image object that is displayed in the splash screen.
	
	.PARAMETER Title
		(Optional) Sets a title for the splash screen window. 
	
	.PARAMETER Timeout
		The amount of seconds before the splash screen is closed.
		Set to 0 to leave the splash screen open indefinitely.
		Default: 2
	
	.PARAMETER ImageLocation
		The file path or url to the image.

	.PARAMETER PassThru
		Returns the splash screen form control. Use to manually close the form.
	
	.PARAMETER Modal
		The splash screen will hold up the pipeline until it closes.

	.EXAMPLE
		PS C:\> Show-SplashScreen -Image $Image -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> Show-SplashScreen -ImageLocation 'C:\Image\MyImage.png' -Title 'Loading...' -Timeout 3

	.EXAMPLE
		PS C:\> $splashScreen = Show-SplashScreen -Image $Image -Title 'Loading...' -PassThru
				#close the splash screen
				$splashScreen.Close()
	.OUTPUTS
		System.Windows.Forms.Form
	
	.NOTES
		Created by SAPIEN Technologies, Inc.

		The size of the splash screen is dependent on the image.
		The required assemblies to use this function outside of a WinForms script:
		Add-Type -AssemblyName System.Windows.Forms
		Add-Type -AssemblyName System.Drawing
#>
	[OutputType([System.Windows.Forms.Form])]
	param
	(
		[Parameter(ParameterSetName = 'Image',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNull()]
		[System.Drawing.Image]$Image,
		[Parameter(Mandatory = $false)]
		[string]$Title,
		[int]$Timeout = 1,
		[Parameter(ParameterSetName = 'ImageLocation',
				   Mandatory = $true,
				   Position = 1)]
		[ValidateNotNullOrEmpty()]
		[string]$ImageLocation,
		[switch]$PassThru,
		[switch]$Modal
	)
	
	#Create a splash screen form to display the image.
	$splashForm = New-Object System.Windows.Forms.Form
	
	#Create a picture box for the image
	$pict = New-Object System.Windows.Forms.PictureBox
	
	if ($Image)
	{
		$pict.Image = $Image;
	}
	else
	{
		$pict.Load($ImageLocation)
	}
	
	$pict.AutoSize = $true
	$pict.Dock = 'Fill'
	$splashForm.Controls.Add($pict)
	
	#Display a title if defined.
	if ($Title)
	{
		$splashForm.Text = $Title
		$splashForm.FormBorderStyle = 'FixedDialog'
	}
	else
	{
		$splashForm.FormBorderStyle = 'None'
	}
	
	#Set a timer
	if ($Timeout -gt 0)
	{
		$timer = New-Object System.Windows.Forms.Timer
		$timer.Interval = $Timeout * 1000
		$timer.Tag = $splashForm
		$timer.add_Tick({
				$this.Tag.Close();
				$this.Stop()
			})
		$timer.Start()
	}
	
	#Show the form
	$splashForm.AutoSize = $true
	$splashForm.AutoSizeMode = 'GrowAndShrink'
	$splashForm.ControlBox = $false
	$splashForm.StartPosition = 'CenterScreen'
	$splashForm.TopMost = $true
	
	if ($Modal) { $splashForm.ShowDialog() }
	else { $splashForm.Show() }
	
	if ($PassThru)
	{
		return $splashForm
	}
}
#endregion

$frmWizard_MouseMove=[System.Windows.Forms.MouseEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.MouseEventArgs]
	

}

$frmWizard_Enter={
	

}

$frmWizard_MouseEnter={
	

}

$listSelectMod_MouseEnter={
	

}



$buttonHelpCleanUpLinks_Click={
	#TODO: Place custom script here
	Set-PopupMessage -Message "This tool removes all kinks in P:\ and the Dayz game folder"
	Show-messageform_psf
}

$buttonCleanUpLinks_Click={
	#TODO: Place custom script here
	Remove-AllLinks
}

$buttonOpenBuildLog_Click={
	Write-ScratchParam -key "DefaultLogFile" -value "Buildoutput.txt"
	Show-DisplayLogs_psf
	
}

$buttonLaunchLogs_Click={
	#TODO: Place custom script here
	Write-ScratchParam -key "DefaultLogFile" -value "ServerLog"
	Show-DisplayLogs_psf
}
]]></Code>
  <Bookmarks />
  <BreakPoints>
    <Line Disabled="True">133</Line>
    <Line Disabled="True">441</Line>
    <Line Disabled="True">442</Line>
    <Line Disabled="False">454</Line>
    <Line Disabled="False">494</Line>
    <Line Disabled="False">568</Line>
    <Line Disabled="True">800</Line>
    <Line Disabled="True">807</Line>
  </BreakPoints>
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>